import "./chunk-NISBT54A.js";

// node_modules/tvision-color/dist/esm/index.js
var r;
var t;
var e;
var n = (r = function(r2, t2) {
  r2.exports = function() {
    for (var r3 = function(r4, t4, e3) {
      return t4 === void 0 && (t4 = 0), e3 === void 0 && (e3 = 1), r4 < t4 ? t4 : r4 > e3 ? e3 : r4;
    }, t3 = function(t4) {
      t4._clipped = false, t4._unclipped = t4.slice(0);
      for (var e3 = 0; e3 <= 3; e3++)
        e3 < 3 ? ((t4[e3] < 0 || t4[e3] > 255) && (t4._clipped = true), t4[e3] = r3(t4[e3], 0, 255)) : e3 === 3 && (t4[e3] = r3(t4[e3], 0, 1));
      return t4;
    }, e2 = {}, n2 = 0, a2 = ["Boolean", "Number", "String", "Function", "Array", "Date", "RegExp", "Undefined", "Null"]; n2 < a2.length; n2 += 1) {
      var o2 = a2[n2];
      e2["[object " + o2 + "]"] = o2.toLowerCase();
    }
    var f2 = function(r4) {
      return e2[Object.prototype.toString.call(r4)] || "object";
    }, c2 = function(r4, t4) {
      return t4 === void 0 && (t4 = null), r4.length >= 3 ? Array.prototype.slice.call(r4) : f2(r4[0]) == "object" && t4 ? t4.split("").filter(function(t5) {
        return r4[0][t5] !== void 0;
      }).map(function(t5) {
        return r4[0][t5];
      }) : r4[0];
    }, u2 = function(r4) {
      if (r4.length < 2)
        return null;
      var t4 = r4.length - 1;
      return f2(r4[t4]) == "string" ? r4[t4].toLowerCase() : null;
    }, i2 = Math.PI, l2 = { clip_rgb: t3, limit: r3, type: f2, unpack: c2, last: u2, PI: i2, TWOPI: 2 * i2, PITHIRD: i2 / 3, DEG2RAD: i2 / 180, RAD2DEG: 180 / i2 }, s2 = { format: {}, autodetect: [] }, h2 = l2.last, d2 = l2.clip_rgb, b2 = l2.type, p2 = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = this;
      if (b2(r4[0]) === "object" && r4[0].constructor && r4[0].constructor === this.constructor)
        return r4[0];
      var n3 = h2(r4), a3 = false;
      if (!n3) {
        a3 = true, s2.sorted || (s2.autodetect = s2.autodetect.sort(function(r5, t5) {
          return t5.p - r5.p;
        }), s2.sorted = true);
        for (var o3 = 0, f3 = s2.autodetect; o3 < f3.length; o3 += 1) {
          var c3 = f3[o3];
          if (n3 = c3.test.apply(c3, r4))
            break;
        }
      }
      if (!s2.format[n3])
        throw new Error("unknown format: " + r4);
      var u3 = s2.format[n3].apply(null, a3 ? r4 : r4.slice(0, -1));
      e3._rgb = d2(u3), e3._rgb.length === 3 && e3._rgb.push(1);
    };
    p2.prototype.toString = function() {
      return b2(this.hex) == "function" ? this.hex() : "[" + this._rgb.join(",") + "]";
    };
    var g2 = p2, v2 = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(v2.Color, [null].concat(r4)))();
    };
    v2.Color = g2, v2.version = "2.1.2";
    var m2 = v2, y2 = l2.unpack, w2 = Math.max, M2 = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = y2(r4, "rgb"), n3 = e3[0], a3 = e3[1], o3 = e3[2], f3 = 1 - w2(n3 /= 255, w2(a3 /= 255, o3 /= 255)), c3 = f3 < 1 ? 1 / (1 - f3) : 0;
      return [(1 - n3 - f3) * c3, (1 - a3 - f3) * c3, (1 - o3 - f3) * c3, f3];
    }, k2 = M2, x2 = l2.unpack, N2 = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = (r4 = x2(r4, "cmyk"))[0], n3 = r4[1], a3 = r4[2], o3 = r4[3], f3 = r4.length > 4 ? r4[4] : 1;
      return o3 === 1 ? [0, 0, 0, f3] : [e3 >= 1 ? 0 : 255 * (1 - e3) * (1 - o3), n3 >= 1 ? 0 : 255 * (1 - n3) * (1 - o3), a3 >= 1 ? 0 : 255 * (1 - a3) * (1 - o3), f3];
    }, A2 = N2, _2 = l2.unpack, E2 = l2.type;
    g2.prototype.cmyk = function() {
      return k2(this._rgb);
    }, m2.cmyk = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["cmyk"])))();
    }, s2.format.cmyk = A2, s2.autodetect.push({ p: 2, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4 = _2(r4, "cmyk"), E2(r4) === "array" && r4.length === 4)
        return "cmyk";
    } });
    var q2 = l2.unpack, P2 = l2.last, S2 = function(r4) {
      return Math.round(100 * r4) / 100;
    }, F2 = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = q2(r4, "hsla"), n3 = P2(r4) || "lsa";
      return e3[0] = S2(e3[0] || 0), e3[1] = S2(100 * e3[1]) + "%", e3[2] = S2(100 * e3[2]) + "%", n3 === "hsla" || e3.length > 3 && e3[3] < 1 ? (e3[3] = e3.length > 3 ? e3[3] : 1, n3 = "hsla") : e3.length = 3, n3 + "(" + e3.join(",") + ")";
    }, R2 = F2, G2 = l2.unpack, O2 = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = (r4 = G2(r4, "rgba"))[0], n3 = r4[1], a3 = r4[2];
      e3 /= 255, n3 /= 255, a3 /= 255;
      var o3, f3, c3 = Math.min(e3, n3, a3), u3 = Math.max(e3, n3, a3), i3 = (u3 + c3) / 2;
      return u3 === c3 ? (o3 = 0, f3 = Number.NaN) : o3 = i3 < 0.5 ? (u3 - c3) / (u3 + c3) : (u3 - c3) / (2 - u3 - c3), e3 == u3 ? f3 = (n3 - a3) / (u3 - c3) : n3 == u3 ? f3 = 2 + (a3 - e3) / (u3 - c3) : a3 == u3 && (f3 = 4 + (e3 - n3) / (u3 - c3)), (f3 *= 60) < 0 && (f3 += 360), r4.length > 3 && r4[3] !== void 0 ? [f3, o3, i3, r4[3]] : [f3, o3, i3];
    }, B2 = O2, C2 = l2.unpack, L2 = l2.last, j = Math.round, T = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = C2(r4, "rgba"), n3 = L2(r4) || "rgb";
      return n3.substr(0, 3) == "hsl" ? R2(B2(e3), n3) : (e3[0] = j(e3[0]), e3[1] = j(e3[1]), e3[2] = j(e3[2]), (n3 === "rgba" || e3.length > 3 && e3[3] < 1) && (e3[3] = e3.length > 3 ? e3[3] : 1, n3 = "rgba"), n3 + "(" + e3.slice(0, n3 === "rgb" ? 3 : 4).join(",") + ")");
    }, I = T, D = l2.unpack, $ = Math.round, Y = function() {
      for (var r4, t4 = [], e3 = arguments.length; e3--; )
        t4[e3] = arguments[e3];
      var n3, a3, o3, f3 = (t4 = D(t4, "hsl"))[0], c3 = t4[1], u3 = t4[2];
      if (c3 === 0)
        n3 = a3 = o3 = 255 * u3;
      else {
        var i3 = [0, 0, 0], l3 = [0, 0, 0], s3 = u3 < 0.5 ? u3 * (1 + c3) : u3 + c3 - u3 * c3, h3 = 2 * u3 - s3, d3 = f3 / 360;
        i3[0] = d3 + 1 / 3, i3[1] = d3, i3[2] = d3 - 1 / 3;
        for (var b3 = 0; b3 < 3; b3++)
          i3[b3] < 0 && (i3[b3] += 1), i3[b3] > 1 && (i3[b3] -= 1), 6 * i3[b3] < 1 ? l3[b3] = h3 + 6 * (s3 - h3) * i3[b3] : 2 * i3[b3] < 1 ? l3[b3] = s3 : 3 * i3[b3] < 2 ? l3[b3] = h3 + (s3 - h3) * (2 / 3 - i3[b3]) * 6 : l3[b3] = h3;
        n3 = (r4 = [$(255 * l3[0]), $(255 * l3[1]), $(255 * l3[2])])[0], a3 = r4[1], o3 = r4[2];
      }
      return t4.length > 3 ? [n3, a3, o3, t4[3]] : [n3, a3, o3, 1];
    }, z = Y, H = /^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/, X = /^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/, W = /^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/, U = /^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/, V = /^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/, K = /^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/, Z = Math.round, J = function(r4) {
      var t4;
      if (r4 = r4.toLowerCase().trim(), s2.format.named)
        try {
          return s2.format.named(r4);
        } catch (r5) {
        }
      if (t4 = r4.match(H)) {
        for (var e3 = t4.slice(1, 4), n3 = 0; n3 < 3; n3++)
          e3[n3] = +e3[n3];
        return e3[3] = 1, e3;
      }
      if (t4 = r4.match(X)) {
        for (var a3 = t4.slice(1, 5), o3 = 0; o3 < 4; o3++)
          a3[o3] = +a3[o3];
        return a3;
      }
      if (t4 = r4.match(W)) {
        for (var f3 = t4.slice(1, 4), c3 = 0; c3 < 3; c3++)
          f3[c3] = Z(2.55 * f3[c3]);
        return f3[3] = 1, f3;
      }
      if (t4 = r4.match(U)) {
        for (var u3 = t4.slice(1, 5), i3 = 0; i3 < 3; i3++)
          u3[i3] = Z(2.55 * u3[i3]);
        return u3[3] = +u3[3], u3;
      }
      if (t4 = r4.match(V)) {
        var l3 = t4.slice(1, 4);
        l3[1] *= 0.01, l3[2] *= 0.01;
        var h3 = z(l3);
        return h3[3] = 1, h3;
      }
      if (t4 = r4.match(K)) {
        var d3 = t4.slice(1, 4);
        d3[1] *= 0.01, d3[2] *= 0.01;
        var b3 = z(d3);
        return b3[3] = +t4[4], b3;
      }
    };
    J.test = function(r4) {
      return H.test(r4) || X.test(r4) || W.test(r4) || U.test(r4) || V.test(r4) || K.test(r4);
    };
    var Q = J, rr = l2.type;
    g2.prototype.css = function(r4) {
      return I(this._rgb, r4);
    }, m2.css = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["css"])))();
    }, s2.format.css = Q, s2.autodetect.push({ p: 5, test: function(r4) {
      for (var t4 = [], e3 = arguments.length - 1; e3-- > 0; )
        t4[e3] = arguments[e3 + 1];
      if (!t4.length && rr(r4) === "string" && Q.test(r4))
        return "css";
    } });
    var tr = l2.unpack;
    s2.format.gl = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = tr(r4, "rgba");
      return e3[0] *= 255, e3[1] *= 255, e3[2] *= 255, e3;
    }, m2.gl = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["gl"])))();
    }, g2.prototype.gl = function() {
      var r4 = this._rgb;
      return [r4[0] / 255, r4[1] / 255, r4[2] / 255, r4[3]];
    };
    var er = l2.unpack, nr = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3, n3 = er(r4, "rgb"), a3 = n3[0], o3 = n3[1], f3 = n3[2], c3 = Math.min(a3, o3, f3), u3 = Math.max(a3, o3, f3), i3 = u3 - c3, l3 = 100 * i3 / 255, s3 = c3 / (255 - i3) * 100;
      return i3 === 0 ? e3 = Number.NaN : (a3 === u3 && (e3 = (o3 - f3) / i3), o3 === u3 && (e3 = 2 + (f3 - a3) / i3), f3 === u3 && (e3 = 4 + (a3 - o3) / i3), (e3 *= 60) < 0 && (e3 += 360)), [e3, l3, s3];
    }, ar = nr, or = l2.unpack, fr = Math.floor, cr = function() {
      for (var r4, t4, e3, n3, a3, o3, f3 = [], c3 = arguments.length; c3--; )
        f3[c3] = arguments[c3];
      var u3, i3, l3, s3 = (f3 = or(f3, "hcg"))[0], h3 = f3[1], d3 = f3[2];
      d3 *= 255;
      var b3 = 255 * h3;
      if (h3 === 0)
        u3 = i3 = l3 = d3;
      else {
        s3 === 360 && (s3 = 0), s3 > 360 && (s3 -= 360), s3 < 0 && (s3 += 360);
        var p3 = fr(s3 /= 60), g3 = s3 - p3, v3 = d3 * (1 - h3), m3 = v3 + b3 * (1 - g3), y3 = v3 + b3 * g3, w3 = v3 + b3;
        switch (p3) {
          case 0:
            u3 = (r4 = [w3, y3, v3])[0], i3 = r4[1], l3 = r4[2];
            break;
          case 1:
            u3 = (t4 = [m3, w3, v3])[0], i3 = t4[1], l3 = t4[2];
            break;
          case 2:
            u3 = (e3 = [v3, w3, y3])[0], i3 = e3[1], l3 = e3[2];
            break;
          case 3:
            u3 = (n3 = [v3, m3, w3])[0], i3 = n3[1], l3 = n3[2];
            break;
          case 4:
            u3 = (a3 = [y3, v3, w3])[0], i3 = a3[1], l3 = a3[2];
            break;
          case 5:
            u3 = (o3 = [w3, v3, m3])[0], i3 = o3[1], l3 = o3[2];
        }
      }
      return [u3, i3, l3, f3.length > 3 ? f3[3] : 1];
    }, ur = cr, ir = l2.unpack, lr = l2.type;
    g2.prototype.hcg = function() {
      return ar(this._rgb);
    }, m2.hcg = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["hcg"])))();
    }, s2.format.hcg = ur, s2.autodetect.push({ p: 1, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4 = ir(r4, "hcg"), lr(r4) === "array" && r4.length === 3)
        return "hcg";
    } });
    var sr = l2.unpack, hr = l2.last, dr = Math.round, br = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = sr(r4, "rgba"), n3 = e3[0], a3 = e3[1], o3 = e3[2], f3 = e3[3], c3 = hr(r4) || "auto";
      f3 === void 0 && (f3 = 1), c3 === "auto" && (c3 = f3 < 1 ? "rgba" : "rgb");
      var u3 = "000000" + ((n3 = dr(n3)) << 16 | (a3 = dr(a3)) << 8 | (o3 = dr(o3))).toString(16);
      u3 = u3.substr(u3.length - 6);
      var i3 = "0" + dr(255 * f3).toString(16);
      switch (i3 = i3.substr(i3.length - 2), c3.toLowerCase()) {
        case "rgba":
          return "#" + u3 + i3;
        case "argb":
          return "#" + i3 + u3;
        default:
          return "#" + u3;
      }
    }, pr = br, gr = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, vr = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/, mr = function(r4) {
      if (r4.match(gr)) {
        r4.length !== 4 && r4.length !== 7 || (r4 = r4.substr(1)), r4.length === 3 && (r4 = (r4 = r4.split(""))[0] + r4[0] + r4[1] + r4[1] + r4[2] + r4[2]);
        var t4 = parseInt(r4, 16);
        return [t4 >> 16, t4 >> 8 & 255, 255 & t4, 1];
      }
      if (r4.match(vr)) {
        r4.length !== 5 && r4.length !== 9 || (r4 = r4.substr(1)), r4.length === 4 && (r4 = (r4 = r4.split(""))[0] + r4[0] + r4[1] + r4[1] + r4[2] + r4[2] + r4[3] + r4[3]);
        var e3 = parseInt(r4, 16);
        return [e3 >> 24 & 255, e3 >> 16 & 255, e3 >> 8 & 255, Math.round((255 & e3) / 255 * 100) / 100];
      }
      throw new Error("unknown hex color: " + r4);
    }, yr = l2.type;
    g2.prototype.hex = function(r4) {
      return pr(this._rgb, r4);
    }, m2.hex = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["hex"])))();
    }, s2.format.hex = mr, s2.autodetect.push({ p: 4, test: function(r4) {
      for (var t4 = [], e3 = arguments.length - 1; e3-- > 0; )
        t4[e3] = arguments[e3 + 1];
      if (!t4.length && yr(r4) === "string" && [3, 4, 5, 6, 7, 8, 9].indexOf(r4.length) >= 0)
        return "hex";
    } });
    var wr = l2.unpack, Mr = l2.TWOPI, kr = Math.min, xr = Math.sqrt, Nr = Math.acos, Ar = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3, n3 = wr(r4, "rgb"), a3 = n3[0], o3 = n3[1], f3 = n3[2], c3 = kr(a3 /= 255, o3 /= 255, f3 /= 255), u3 = (a3 + o3 + f3) / 3, i3 = u3 > 0 ? 1 - c3 / u3 : 0;
      return i3 === 0 ? e3 = NaN : (e3 = (a3 - o3 + (a3 - f3)) / 2, e3 /= xr((a3 - o3) * (a3 - o3) + (a3 - f3) * (o3 - f3)), e3 = Nr(e3), f3 > o3 && (e3 = Mr - e3), e3 /= Mr), [360 * e3, i3, u3];
    }, _r = Ar, Er = l2.unpack, qr = l2.limit, Pr = l2.TWOPI, Sr = l2.PITHIRD, Fr = Math.cos, Rr = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3, n3, a3, o3 = (r4 = Er(r4, "hsi"))[0], f3 = r4[1], c3 = r4[2];
      return isNaN(o3) && (o3 = 0), isNaN(f3) && (f3 = 0), o3 > 360 && (o3 -= 360), o3 < 0 && (o3 += 360), (o3 /= 360) < 1 / 3 ? n3 = 1 - ((a3 = (1 - f3) / 3) + (e3 = (1 + f3 * Fr(Pr * o3) / Fr(Sr - Pr * o3)) / 3)) : o3 < 2 / 3 ? a3 = 1 - ((e3 = (1 - f3) / 3) + (n3 = (1 + f3 * Fr(Pr * (o3 -= 1 / 3)) / Fr(Sr - Pr * o3)) / 3)) : e3 = 1 - ((n3 = (1 - f3) / 3) + (a3 = (1 + f3 * Fr(Pr * (o3 -= 2 / 3)) / Fr(Sr - Pr * o3)) / 3)), [255 * (e3 = qr(c3 * e3 * 3)), 255 * (n3 = qr(c3 * n3 * 3)), 255 * (a3 = qr(c3 * a3 * 3)), r4.length > 3 ? r4[3] : 1];
    }, Gr = Rr, Or = l2.unpack, Br = l2.type;
    g2.prototype.hsi = function() {
      return _r(this._rgb);
    }, m2.hsi = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["hsi"])))();
    }, s2.format.hsi = Gr, s2.autodetect.push({ p: 2, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4 = Or(r4, "hsi"), Br(r4) === "array" && r4.length === 3)
        return "hsi";
    } });
    var Cr = l2.unpack, Lr = l2.type;
    g2.prototype.hsl = function() {
      return B2(this._rgb);
    }, m2.hsl = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["hsl"])))();
    }, s2.format.hsl = z, s2.autodetect.push({ p: 2, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4 = Cr(r4, "hsl"), Lr(r4) === "array" && r4.length === 3)
        return "hsl";
    } });
    var jr = l2.unpack, Tr = Math.min, Ir = Math.max, Dr = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3, n3, a3, o3 = (r4 = jr(r4, "rgb"))[0], f3 = r4[1], c3 = r4[2], u3 = Tr(o3, f3, c3), i3 = Ir(o3, f3, c3), l3 = i3 - u3;
      return a3 = i3 / 255, i3 === 0 ? (e3 = Number.NaN, n3 = 0) : (n3 = l3 / i3, o3 === i3 && (e3 = (f3 - c3) / l3), f3 === i3 && (e3 = 2 + (c3 - o3) / l3), c3 === i3 && (e3 = 4 + (o3 - f3) / l3), (e3 *= 60) < 0 && (e3 += 360)), [e3, n3, a3];
    }, $r = Dr, Yr = l2.unpack, zr = Math.floor, Hr = function() {
      for (var r4, t4, e3, n3, a3, o3, f3 = [], c3 = arguments.length; c3--; )
        f3[c3] = arguments[c3];
      var u3, i3, l3, s3 = (f3 = Yr(f3, "hsv"))[0], h3 = f3[1], d3 = f3[2];
      if (d3 *= 255, h3 === 0)
        u3 = i3 = l3 = d3;
      else {
        s3 === 360 && (s3 = 0), s3 > 360 && (s3 -= 360), s3 < 0 && (s3 += 360);
        var b3 = zr(s3 /= 60), p3 = s3 - b3, g3 = d3 * (1 - h3), v3 = d3 * (1 - h3 * p3), m3 = d3 * (1 - h3 * (1 - p3));
        switch (b3) {
          case 0:
            u3 = (r4 = [d3, m3, g3])[0], i3 = r4[1], l3 = r4[2];
            break;
          case 1:
            u3 = (t4 = [v3, d3, g3])[0], i3 = t4[1], l3 = t4[2];
            break;
          case 2:
            u3 = (e3 = [g3, d3, m3])[0], i3 = e3[1], l3 = e3[2];
            break;
          case 3:
            u3 = (n3 = [g3, v3, d3])[0], i3 = n3[1], l3 = n3[2];
            break;
          case 4:
            u3 = (a3 = [m3, g3, d3])[0], i3 = a3[1], l3 = a3[2];
            break;
          case 5:
            u3 = (o3 = [d3, g3, v3])[0], i3 = o3[1], l3 = o3[2];
        }
      }
      return [u3, i3, l3, f3.length > 3 ? f3[3] : 1];
    }, Xr = Hr, Wr = l2.unpack, Ur = l2.type;
    g2.prototype.hsv = function() {
      return $r(this._rgb);
    }, m2.hsv = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["hsv"])))();
    }, s2.format.hsv = Xr, s2.autodetect.push({ p: 2, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4 = Wr(r4, "hsv"), Ur(r4) === "array" && r4.length === 3)
        return "hsv";
    } });
    var Vr = { Kn: 18, Xn: 0.95047, Yn: 1, Zn: 1.08883, t0: 0.137931034, t1: 0.206896552, t2: 0.12841855, t3: 8856452e-9 }, Kr = l2.unpack, Zr = Math.pow, Jr = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = Kr(r4, "rgb"), n3 = e3[0], a3 = e3[1], o3 = e3[2], f3 = tt(n3, a3, o3), c3 = f3[0], u3 = f3[1], i3 = 116 * u3 - 16;
      return [i3 < 0 ? 0 : i3, 500 * (c3 - u3), 200 * (u3 - f3[2])];
    }, Qr = function(r4) {
      return (r4 /= 255) <= 0.04045 ? r4 / 12.92 : Zr((r4 + 0.055) / 1.055, 2.4);
    }, rt = function(r4) {
      return r4 > Vr.t3 ? Zr(r4, 1 / 3) : r4 / Vr.t2 + Vr.t0;
    }, tt = function(r4, t4, e3) {
      return r4 = Qr(r4), t4 = Qr(t4), e3 = Qr(e3), [rt((0.4124564 * r4 + 0.3575761 * t4 + 0.1804375 * e3) / Vr.Xn), rt((0.2126729 * r4 + 0.7151522 * t4 + 0.072175 * e3) / Vr.Yn), rt((0.0193339 * r4 + 0.119192 * t4 + 0.9503041 * e3) / Vr.Zn)];
    }, et = Jr, nt = l2.unpack, at = Math.pow, ot = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3, n3, a3, o3 = (r4 = nt(r4, "lab"))[0], f3 = r4[1], c3 = r4[2];
      return n3 = (o3 + 16) / 116, e3 = isNaN(f3) ? n3 : n3 + f3 / 500, a3 = isNaN(c3) ? n3 : n3 - c3 / 200, n3 = Vr.Yn * ct(n3), e3 = Vr.Xn * ct(e3), a3 = Vr.Zn * ct(a3), [ft(3.2404542 * e3 - 1.5371385 * n3 - 0.4985314 * a3), ft(-0.969266 * e3 + 1.8760108 * n3 + 0.041556 * a3), ft(0.0556434 * e3 - 0.2040259 * n3 + 1.0572252 * a3), r4.length > 3 ? r4[3] : 1];
    }, ft = function(r4) {
      return 255 * (r4 <= 304e-5 ? 12.92 * r4 : 1.055 * at(r4, 1 / 2.4) - 0.055);
    }, ct = function(r4) {
      return r4 > Vr.t1 ? r4 * r4 * r4 : Vr.t2 * (r4 - Vr.t0);
    }, ut = ot, it = l2.unpack, lt = l2.type;
    g2.prototype.lab = function() {
      return et(this._rgb);
    }, m2.lab = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["lab"])))();
    }, s2.format.lab = ut, s2.autodetect.push({ p: 2, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4 = it(r4, "lab"), lt(r4) === "array" && r4.length === 3)
        return "lab";
    } });
    var st = l2.unpack, ht = l2.RAD2DEG, dt = Math.sqrt, bt = Math.atan2, pt = Math.round, gt = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = st(r4, "lab"), n3 = e3[0], a3 = e3[1], o3 = e3[2], f3 = dt(a3 * a3 + o3 * o3), c3 = (bt(o3, a3) * ht + 360) % 360;
      return pt(1e4 * f3) === 0 && (c3 = Number.NaN), [n3, f3, c3];
    }, vt = gt, mt = l2.unpack, yt = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = mt(r4, "rgb"), n3 = e3[0], a3 = e3[1], o3 = e3[2], f3 = et(n3, a3, o3), c3 = f3[0], u3 = f3[1], i3 = f3[2];
      return vt(c3, u3, i3);
    }, wt = yt, Mt = l2.unpack, kt = l2.DEG2RAD, xt = Math.sin, Nt = Math.cos, At = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = Mt(r4, "lch"), n3 = e3[0], a3 = e3[1], o3 = e3[2];
      return isNaN(o3) && (o3 = 0), [n3, Nt(o3 *= kt) * a3, xt(o3) * a3];
    }, _t = At, Et = l2.unpack, qt = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = (r4 = Et(r4, "lch"))[0], n3 = r4[1], a3 = r4[2], o3 = _t(e3, n3, a3), f3 = o3[0], c3 = o3[1], u3 = o3[2], i3 = ut(f3, c3, u3);
      return [i3[0], i3[1], i3[2], r4.length > 3 ? r4[3] : 1];
    }, Pt = qt, St = l2.unpack, Ft = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = St(r4, "hcl").reverse();
      return Pt.apply(void 0, e3);
    }, Rt = Ft, Gt = l2.unpack, Ot = l2.type;
    g2.prototype.lch = function() {
      return wt(this._rgb);
    }, g2.prototype.hcl = function() {
      return wt(this._rgb).reverse();
    }, m2.lch = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["lch"])))();
    }, m2.hcl = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["hcl"])))();
    }, s2.format.lch = Pt, s2.format.hcl = Rt, ["lch", "hcl"].forEach(function(r4) {
      return s2.autodetect.push({ p: 2, test: function() {
        for (var t4 = [], e3 = arguments.length; e3--; )
          t4[e3] = arguments[e3];
        if (t4 = Gt(t4, r4), Ot(t4) === "array" && t4.length === 3)
          return r4;
      } });
    });
    var Bt = { aliceblue: "#f0f8ff", antiquewhite: "#faebd7", aqua: "#00ffff", aquamarine: "#7fffd4", azure: "#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000000", blanchedalmond: "#ffebcd", blue: "#0000ff", blueviolet: "#8a2be2", brown: "#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflower: "#6495ed", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", darkkhaki: "#bdb76b", darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: "#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: "#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: "#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: "#696969", dimgrey: "#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: "#fffaf0", forestgreen: "#228b22", fuchsia: "#ff00ff", gainsboro: "#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gray: "#808080", green: "#008000", greenyellow: "#adff2f", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", ivory: "#fffff0", khaki: "#f0e68c", laserlemon: "#ffff54", lavender: "#e6e6fa", lavenderblush: "#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: "#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", lightgoldenrod: "#fafad2", lightgoldenrodyellow: "#fafad2", lightgray: "#d3d3d3", lightgreen: "#90ee90", lightgrey: "#d3d3d3", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", lightslategray: "#778899", lightslategrey: "#778899", lightsteelblue: "#b0c4de", lightyellow: "#ffffe0", lime: "#00ff00", limegreen: "#32cd32", linen: "#faf0e6", magenta: "#ff00ff", maroon: "#800000", maroon2: "#7f0000", maroon3: "#b03060", mediumaquamarine: "#66cdaa", mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370db", mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: "#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: "#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: "#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", paleturquoise: "#afeeee", palevioletred: "#db7093", papayawhip: "#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: "#dda0dd", powderblue: "#b0e0e6", purple: "#800080", purple2: "#7f007f", purple3: "#a020f0", rebeccapurple: "#663399", red: "#ff0000", rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: "#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", slateblue: "#6a5acd", slategray: "#708090", slategrey: "#708090", snow: "#fffafa", springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: "#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", violet: "#ee82ee", wheat: "#f5deb3", white: "#ffffff", whitesmoke: "#f5f5f5", yellow: "#ffff00", yellowgreen: "#9acd32" }, Ct = l2.type;
    g2.prototype.name = function() {
      for (var r4 = pr(this._rgb, "rgb"), t4 = 0, e3 = Object.keys(Bt); t4 < e3.length; t4 += 1) {
        var n3 = e3[t4];
        if (Bt[n3] === r4)
          return n3.toLowerCase();
      }
      return r4;
    }, s2.format.named = function(r4) {
      if (r4 = r4.toLowerCase(), Bt[r4])
        return mr(Bt[r4]);
      throw new Error("unknown color name: " + r4);
    }, s2.autodetect.push({ p: 5, test: function(r4) {
      for (var t4 = [], e3 = arguments.length - 1; e3-- > 0; )
        t4[e3] = arguments[e3 + 1];
      if (!t4.length && Ct(r4) === "string" && Bt[r4.toLowerCase()])
        return "named";
    } });
    var Lt = l2.unpack, jt = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = Lt(r4, "rgb");
      return (e3[0] << 16) + (e3[1] << 8) + e3[2];
    }, Tt = jt, It = l2.type, Dt = function(r4) {
      if (It(r4) == "number" && r4 >= 0 && r4 <= 16777215)
        return [r4 >> 16, r4 >> 8 & 255, 255 & r4, 1];
      throw new Error("unknown num color: " + r4);
    }, $t = l2.type;
    g2.prototype.num = function() {
      return Tt(this._rgb);
    }, m2.num = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["num"])))();
    }, s2.format.num = Dt, s2.autodetect.push({ p: 5, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4.length === 1 && $t(r4[0]) === "number" && r4[0] >= 0 && r4[0] <= 16777215)
        return "num";
    } });
    var Yt = l2.unpack, zt = l2.type, Ht = Math.round;
    g2.prototype.rgb = function(r4) {
      return r4 === void 0 && (r4 = true), r4 === false ? this._rgb.slice(0, 3) : this._rgb.slice(0, 3).map(Ht);
    }, g2.prototype.rgba = function(r4) {
      return r4 === void 0 && (r4 = true), this._rgb.slice(0, 4).map(function(t4, e3) {
        return e3 < 3 ? r4 === false ? t4 : Ht(t4) : t4;
      });
    }, m2.rgb = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["rgb"])))();
    }, s2.format.rgb = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      var e3 = Yt(r4, "rgba");
      return e3[3] === void 0 && (e3[3] = 1), e3;
    }, s2.autodetect.push({ p: 3, test: function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      if (r4 = Yt(r4, "rgba"), zt(r4) === "array" && (r4.length === 3 || r4.length === 4 && zt(r4[3]) == "number" && r4[3] >= 0 && r4[3] <= 1))
        return "rgb";
    } });
    var Xt = Math.log, Wt = function(r4) {
      var t4, e3, n3, a3 = r4 / 100;
      return a3 < 66 ? (t4 = 255, e3 = -155.25485562709179 - 0.44596950469579133 * (e3 = a3 - 2) + 104.49216199393888 * Xt(e3), n3 = a3 < 20 ? 0 : 0.8274096064007395 * (n3 = a3 - 10) - 254.76935184120902 + 115.67994401066147 * Xt(n3)) : (t4 = 351.97690566805693 + 0.114206453784165 * (t4 = a3 - 55) - 40.25366309332127 * Xt(t4), e3 = 325.4494125711974 + 0.07943456536662342 * (e3 = a3 - 50) - 28.0852963507957 * Xt(e3), n3 = 255), [t4, e3, n3, 1];
    }, Ut = l2.unpack, Vt = Math.round, Kt = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      for (var e3, n3 = Ut(r4, "rgb"), a3 = n3[0], o3 = n3[2], f3 = 1e3, c3 = 4e4, u3 = 0.4; c3 - f3 > u3; ) {
        var i3 = Wt(e3 = 0.5 * (c3 + f3));
        i3[2] / i3[0] >= o3 / a3 ? c3 = e3 : f3 = e3;
      }
      return Vt(e3);
    }, Zt = Kt;
    g2.prototype.temp = g2.prototype.kelvin = g2.prototype.temperature = function() {
      return Zt(this._rgb);
    }, m2.temp = m2.kelvin = m2.temperature = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      return new (Function.prototype.bind.apply(g2, [null].concat(r4, ["temp"])))();
    }, s2.format.temp = s2.format.kelvin = s2.format.temperature = Wt;
    var Jt = l2.type;
    g2.prototype.alpha = function(r4, t4) {
      return t4 === void 0 && (t4 = false), r4 !== void 0 && Jt(r4) === "number" ? t4 ? (this._rgb[3] = r4, this) : new g2([this._rgb[0], this._rgb[1], this._rgb[2], r4], "rgb") : this._rgb[3];
    }, g2.prototype.clipped = function() {
      return this._rgb._clipped || false;
    }, g2.prototype.darken = function(r4) {
      r4 === void 0 && (r4 = 1);
      var t4 = this, e3 = t4.lab();
      return e3[0] -= Vr.Kn * r4, new g2(e3, "lab").alpha(t4.alpha(), true);
    }, g2.prototype.brighten = function(r4) {
      return r4 === void 0 && (r4 = 1), this.darken(-r4);
    }, g2.prototype.darker = g2.prototype.darken, g2.prototype.brighter = g2.prototype.brighten, g2.prototype.get = function(r4) {
      var t4 = r4.split("."), e3 = t4[0], n3 = t4[1], a3 = this[e3]();
      if (n3) {
        var o3 = e3.indexOf(n3);
        if (o3 > -1)
          return a3[o3];
        throw new Error("unknown channel " + n3 + " in mode " + e3);
      }
      return a3;
    };
    var Qt = l2.type, re = Math.pow, te = 1e-7, ee = 20;
    g2.prototype.luminance = function(r4) {
      if (r4 !== void 0 && Qt(r4) === "number") {
        if (r4 === 0)
          return new g2([0, 0, 0, this._rgb[3]], "rgb");
        if (r4 === 1)
          return new g2([255, 255, 255, this._rgb[3]], "rgb");
        var t4 = this.luminance(), e3 = "rgb", n3 = ee, a3 = function(t5, o4) {
          var f3 = t5.interpolate(o4, 0.5, e3), c3 = f3.luminance();
          return Math.abs(r4 - c3) < te || !n3-- ? f3 : c3 > r4 ? a3(t5, f3) : a3(f3, o4);
        }, o3 = (t4 > r4 ? a3(new g2([0, 0, 0]), this) : a3(this, new g2([255, 255, 255]))).rgb();
        return new g2(o3.concat([this._rgb[3]]));
      }
      return ne.apply(void 0, this._rgb.slice(0, 3));
    };
    var ne = function(r4, t4, e3) {
      return 0.2126 * (r4 = ae(r4)) + 0.7152 * (t4 = ae(t4)) + 0.0722 * (e3 = ae(e3));
    }, ae = function(r4) {
      return (r4 /= 255) <= 0.03928 ? r4 / 12.92 : re((r4 + 0.055) / 1.055, 2.4);
    }, oe = {}, fe = l2.type, ce = function(r4, t4, e3) {
      e3 === void 0 && (e3 = 0.5);
      for (var n3 = [], a3 = arguments.length - 3; a3-- > 0; )
        n3[a3] = arguments[a3 + 3];
      var o3 = n3[0] || "lrgb";
      if (oe[o3] || n3.length || (o3 = Object.keys(oe)[0]), !oe[o3])
        throw new Error("interpolation mode " + o3 + " is not defined");
      return fe(r4) !== "object" && (r4 = new g2(r4)), fe(t4) !== "object" && (t4 = new g2(t4)), oe[o3](r4, t4, e3).alpha(r4.alpha() + e3 * (t4.alpha() - r4.alpha()));
    };
    g2.prototype.mix = g2.prototype.interpolate = function(r4, t4) {
      t4 === void 0 && (t4 = 0.5);
      for (var e3 = [], n3 = arguments.length - 2; n3-- > 0; )
        e3[n3] = arguments[n3 + 2];
      return ce.apply(void 0, [this, r4, t4].concat(e3));
    }, g2.prototype.premultiply = function(r4) {
      r4 === void 0 && (r4 = false);
      var t4 = this._rgb, e3 = t4[3];
      return r4 ? (this._rgb = [t4[0] * e3, t4[1] * e3, t4[2] * e3, e3], this) : new g2([t4[0] * e3, t4[1] * e3, t4[2] * e3, e3], "rgb");
    }, g2.prototype.saturate = function(r4) {
      r4 === void 0 && (r4 = 1);
      var t4 = this, e3 = t4.lch();
      return e3[1] += Vr.Kn * r4, e3[1] < 0 && (e3[1] = 0), new g2(e3, "lch").alpha(t4.alpha(), true);
    }, g2.prototype.desaturate = function(r4) {
      return r4 === void 0 && (r4 = 1), this.saturate(-r4);
    };
    var ue = l2.type;
    g2.prototype.set = function(r4, t4, e3) {
      e3 === void 0 && (e3 = false);
      var n3 = r4.split("."), a3 = n3[0], o3 = n3[1], f3 = this[a3]();
      if (o3) {
        var c3 = a3.indexOf(o3);
        if (c3 > -1) {
          if (ue(t4) == "string")
            switch (t4.charAt(0)) {
              case "+":
              case "-":
                f3[c3] += +t4;
                break;
              case "*":
                f3[c3] *= +t4.substr(1);
                break;
              case "/":
                f3[c3] /= +t4.substr(1);
                break;
              default:
                f3[c3] = +t4;
            }
          else {
            if (ue(t4) !== "number")
              throw new Error("unsupported value for Color.set");
            f3[c3] = t4;
          }
          var u3 = new g2(f3, a3);
          return e3 ? (this._rgb = u3._rgb, this) : u3;
        }
        throw new Error("unknown channel " + o3 + " in mode " + a3);
      }
      return f3;
    };
    var ie = function(r4, t4, e3) {
      var n3 = r4._rgb, a3 = t4._rgb;
      return new g2(n3[0] + e3 * (a3[0] - n3[0]), n3[1] + e3 * (a3[1] - n3[1]), n3[2] + e3 * (a3[2] - n3[2]), "rgb");
    };
    oe.rgb = ie;
    var le = Math.sqrt, se = Math.pow, he = function(r4, t4, e3) {
      var n3 = r4._rgb, a3 = n3[0], o3 = n3[1], f3 = n3[2], c3 = t4._rgb, u3 = c3[0], i3 = c3[1], l3 = c3[2];
      return new g2(le(se(a3, 2) * (1 - e3) + se(u3, 2) * e3), le(se(o3, 2) * (1 - e3) + se(i3, 2) * e3), le(se(f3, 2) * (1 - e3) + se(l3, 2) * e3), "rgb");
    };
    oe.lrgb = he;
    var de = function(r4, t4, e3) {
      var n3 = r4.lab(), a3 = t4.lab();
      return new g2(n3[0] + e3 * (a3[0] - n3[0]), n3[1] + e3 * (a3[1] - n3[1]), n3[2] + e3 * (a3[2] - n3[2]), "lab");
    };
    oe.lab = de;
    var be = function(r4, t4, e3, n3) {
      var a3, o3, f3, c3, u3, i3, l3, s3, h3, d3, b3, p3;
      return n3 === "hsl" ? (f3 = r4.hsl(), c3 = t4.hsl()) : n3 === "hsv" ? (f3 = r4.hsv(), c3 = t4.hsv()) : n3 === "hcg" ? (f3 = r4.hcg(), c3 = t4.hcg()) : n3 === "hsi" ? (f3 = r4.hsi(), c3 = t4.hsi()) : n3 !== "lch" && n3 !== "hcl" || (n3 = "hcl", f3 = r4.hcl(), c3 = t4.hcl()), n3.substr(0, 1) === "h" && (u3 = (a3 = f3)[0], l3 = a3[1], h3 = a3[2], i3 = (o3 = c3)[0], s3 = o3[1], d3 = o3[2]), isNaN(u3) || isNaN(i3) ? isNaN(u3) ? isNaN(i3) ? p3 = Number.NaN : (p3 = i3, h3 != 1 && h3 != 0 || n3 == "hsv" || (b3 = s3)) : (p3 = u3, d3 != 1 && d3 != 0 || n3 == "hsv" || (b3 = l3)) : p3 = u3 + e3 * (i3 > u3 && i3 - u3 > 180 ? i3 - (u3 + 360) : i3 < u3 && u3 - i3 > 180 ? i3 + 360 - u3 : i3 - u3), b3 === void 0 && (b3 = l3 + e3 * (s3 - l3)), new g2([p3, b3, h3 + e3 * (d3 - h3)], n3);
    }, pe = function(r4, t4, e3) {
      return be(r4, t4, e3, "lch");
    };
    oe.lch = pe, oe.hcl = pe;
    var ge = function(r4, t4, e3) {
      var n3 = r4.num(), a3 = t4.num();
      return new g2(n3 + e3 * (a3 - n3), "num");
    };
    oe.num = ge;
    var ve = function(r4, t4, e3) {
      return be(r4, t4, e3, "hcg");
    };
    oe.hcg = ve;
    var me = function(r4, t4, e3) {
      return be(r4, t4, e3, "hsi");
    };
    oe.hsi = me;
    var ye = function(r4, t4, e3) {
      return be(r4, t4, e3, "hsl");
    };
    oe.hsl = ye;
    var we = function(r4, t4, e3) {
      return be(r4, t4, e3, "hsv");
    };
    oe.hsv = we;
    var Me = l2.clip_rgb, ke = Math.pow, xe = Math.sqrt, Ne = Math.PI, Ae = Math.cos, _e = Math.sin, Ee = Math.atan2, qe = function(r4, t4, e3) {
      t4 === void 0 && (t4 = "lrgb"), e3 === void 0 && (e3 = null);
      var n3 = r4.length;
      e3 || (e3 = Array.from(new Array(n3)).map(function() {
        return 1;
      }));
      var a3 = n3 / e3.reduce(function(r5, t5) {
        return r5 + t5;
      });
      if (e3.forEach(function(r5, t5) {
        e3[t5] *= a3;
      }), r4 = r4.map(function(r5) {
        return new g2(r5);
      }), t4 === "lrgb")
        return Pe(r4, e3);
      for (var o3 = r4.shift(), f3 = o3.get(t4), c3 = [], u3 = 0, i3 = 0, l3 = 0; l3 < f3.length; l3++)
        if (f3[l3] = (f3[l3] || 0) * e3[0], c3.push(isNaN(f3[l3]) ? 0 : e3[0]), t4.charAt(l3) === "h" && !isNaN(f3[l3])) {
          var s3 = f3[l3] / 180 * Ne;
          u3 += Ae(s3) * e3[0], i3 += _e(s3) * e3[0];
        }
      var h3 = o3.alpha() * e3[0];
      r4.forEach(function(r5, n4) {
        var a4 = r5.get(t4);
        h3 += r5.alpha() * e3[n4 + 1];
        for (var o4 = 0; o4 < f3.length; o4++)
          if (!isNaN(a4[o4]))
            if (c3[o4] += e3[n4 + 1], t4.charAt(o4) === "h") {
              var l4 = a4[o4] / 180 * Ne;
              u3 += Ae(l4) * e3[n4 + 1], i3 += _e(l4) * e3[n4 + 1];
            } else
              f3[o4] += a4[o4] * e3[n4 + 1];
      });
      for (var d3 = 0; d3 < f3.length; d3++)
        if (t4.charAt(d3) === "h") {
          for (var b3 = Ee(i3 / c3[d3], u3 / c3[d3]) / Ne * 180; b3 < 0; )
            b3 += 360;
          for (; b3 >= 360; )
            b3 -= 360;
          f3[d3] = b3;
        } else
          f3[d3] = f3[d3] / c3[d3];
      return h3 /= n3, new g2(f3, t4).alpha(h3 > 0.99999 ? 1 : h3, true);
    }, Pe = function(r4, t4) {
      for (var e3 = r4.length, n3 = [0, 0, 0, 0], a3 = 0; a3 < r4.length; a3++) {
        var o3 = r4[a3], f3 = t4[a3] / e3, c3 = o3._rgb;
        n3[0] += ke(c3[0], 2) * f3, n3[1] += ke(c3[1], 2) * f3, n3[2] += ke(c3[2], 2) * f3, n3[3] += c3[3] * f3;
      }
      return n3[0] = xe(n3[0]), n3[1] = xe(n3[1]), n3[2] = xe(n3[2]), n3[3] > 0.9999999 && (n3[3] = 1), new g2(Me(n3));
    }, Se = l2.type, Fe = Math.pow, Re = function(r4) {
      var t4 = "rgb", e3 = m2("#ccc"), n3 = 0, a3 = [0, 1], o3 = [], f3 = [0, 0], c3 = false, u3 = [], i3 = false, l3 = 0, s3 = 1, h3 = false, d3 = {}, b3 = true, p3 = 1, g3 = function(r5) {
        if ((r5 = r5 || ["#fff", "#000"]) && Se(r5) === "string" && m2.brewer && m2.brewer[r5.toLowerCase()] && (r5 = m2.brewer[r5.toLowerCase()]), Se(r5) === "array") {
          r5.length === 1 && (r5 = [r5[0], r5[0]]), r5 = r5.slice(0);
          for (var t5 = 0; t5 < r5.length; t5++)
            r5[t5] = m2(r5[t5]);
          o3.length = 0;
          for (var e4 = 0; e4 < r5.length; e4++)
            o3.push(e4 / (r5.length - 1));
        }
        return k3(), u3 = r5;
      }, v3 = function(r5) {
        if (c3 != null) {
          for (var t5 = c3.length - 1, e4 = 0; e4 < t5 && r5 >= c3[e4]; )
            e4++;
          return e4 - 1;
        }
        return 0;
      }, y3 = function(r5) {
        return r5;
      }, w3 = function(r5) {
        return r5;
      }, M3 = function(r5, n4) {
        var a4, i4;
        if (n4 == null && (n4 = false), isNaN(r5) || r5 === null)
          return e3;
        i4 = n4 ? r5 : c3 && c3.length > 2 ? v3(r5) / (c3.length - 2) : s3 !== l3 ? (r5 - l3) / (s3 - l3) : 1, i4 = w3(i4), n4 || (i4 = y3(i4)), p3 !== 1 && (i4 = Fe(i4, p3)), i4 = f3[0] + i4 * (1 - f3[0] - f3[1]), i4 = Math.min(1, Math.max(0, i4));
        var h4 = Math.floor(1e4 * i4);
        if (b3 && d3[h4])
          a4 = d3[h4];
        else {
          if (Se(u3) === "array")
            for (var g4 = 0; g4 < o3.length; g4++) {
              var M4 = o3[g4];
              if (i4 <= M4) {
                a4 = u3[g4];
                break;
              }
              if (i4 >= M4 && g4 === o3.length - 1) {
                a4 = u3[g4];
                break;
              }
              if (i4 > M4 && i4 < o3[g4 + 1]) {
                i4 = (i4 - M4) / (o3[g4 + 1] - M4), a4 = m2.interpolate(u3[g4], u3[g4 + 1], i4, t4);
                break;
              }
            }
          else
            Se(u3) === "function" && (a4 = u3(i4));
          b3 && (d3[h4] = a4);
        }
        return a4;
      }, k3 = function() {
        return d3 = {};
      };
      g3(r4);
      var x3 = function(r5) {
        var t5 = m2(M3(r5));
        return i3 && t5[i3] ? t5[i3]() : t5;
      };
      return x3.classes = function(r5) {
        if (r5 != null) {
          if (Se(r5) === "array")
            c3 = r5, a3 = [r5[0], r5[r5.length - 1]];
          else {
            var t5 = m2.analyze(a3);
            c3 = r5 === 0 ? [t5.min, t5.max] : m2.limits(t5, "e", r5);
          }
          return x3;
        }
        return c3;
      }, x3.domain = function(r5) {
        if (!arguments.length)
          return a3;
        l3 = r5[0], s3 = r5[r5.length - 1], o3 = [];
        var t5 = u3.length;
        if (r5.length === t5 && l3 !== s3)
          for (var e4 = 0, n4 = Array.from(r5); e4 < n4.length; e4 += 1) {
            var f4 = n4[e4];
            o3.push((f4 - l3) / (s3 - l3));
          }
        else {
          for (var c4 = 0; c4 < t5; c4++)
            o3.push(c4 / (t5 - 1));
          if (r5.length > 2) {
            var i4 = r5.map(function(t6, e5) {
              return e5 / (r5.length - 1);
            }), h4 = r5.map(function(r6) {
              return (r6 - l3) / (s3 - l3);
            });
            h4.every(function(r6, t6) {
              return i4[t6] === r6;
            }) || (w3 = function(r6) {
              if (r6 <= 0 || r6 >= 1)
                return r6;
              for (var t6 = 0; r6 >= h4[t6 + 1]; )
                t6++;
              var e5 = (r6 - h4[t6]) / (h4[t6 + 1] - h4[t6]);
              return i4[t6] + e5 * (i4[t6 + 1] - i4[t6]);
            });
          }
        }
        return a3 = [l3, s3], x3;
      }, x3.mode = function(r5) {
        return arguments.length ? (t4 = r5, k3(), x3) : t4;
      }, x3.range = function(r5, t5) {
        return g3(r5), x3;
      }, x3.out = function(r5) {
        return i3 = r5, x3;
      }, x3.spread = function(r5) {
        return arguments.length ? (n3 = r5, x3) : n3;
      }, x3.correctLightness = function(r5) {
        return r5 == null && (r5 = true), h3 = r5, k3(), y3 = h3 ? function(r6) {
          for (var t5 = M3(0, true).lab()[0], e4 = M3(1, true).lab()[0], n4 = t5 > e4, a4 = M3(r6, true).lab()[0], o4 = t5 + (e4 - t5) * r6, f4 = a4 - o4, c4 = 0, u4 = 1, i4 = 20; Math.abs(f4) > 0.01 && i4-- > 0; )
            n4 && (f4 *= -1), f4 < 0 ? (c4 = r6, r6 += 0.5 * (u4 - r6)) : (u4 = r6, r6 += 0.5 * (c4 - r6)), a4 = M3(r6, true).lab()[0], f4 = a4 - o4;
          return r6;
        } : function(r6) {
          return r6;
        }, x3;
      }, x3.padding = function(r5) {
        return r5 != null ? (Se(r5) === "number" && (r5 = [r5, r5]), f3 = r5, x3) : f3;
      }, x3.colors = function(t5, e4) {
        arguments.length < 2 && (e4 = "hex");
        var n4 = [];
        if (arguments.length === 0)
          n4 = u3.slice(0);
        else if (t5 === 1)
          n4 = [x3(0.5)];
        else if (t5 > 1) {
          var o4 = a3[0], f4 = a3[1] - o4;
          n4 = Ge(0, t5, false).map(function(r5) {
            return x3(o4 + r5 / (t5 - 1) * f4);
          });
        } else {
          r4 = [];
          var i4 = [];
          if (c3 && c3.length > 2)
            for (var l4 = 1, s4 = c3.length, h4 = 1 <= s4; h4 ? l4 < s4 : l4 > s4; h4 ? l4++ : l4--)
              i4.push(0.5 * (c3[l4 - 1] + c3[l4]));
          else
            i4 = a3;
          n4 = i4.map(function(r5) {
            return x3(r5);
          });
        }
        return m2[e4] && (n4 = n4.map(function(r5) {
          return r5[e4]();
        })), n4;
      }, x3.cache = function(r5) {
        return r5 != null ? (b3 = r5, x3) : b3;
      }, x3.gamma = function(r5) {
        return r5 != null ? (p3 = r5, x3) : p3;
      }, x3.nodata = function(r5) {
        return r5 != null ? (e3 = m2(r5), x3) : e3;
      }, x3;
    };
    function Ge(r4, t4, e3) {
      for (var n3 = [], a3 = r4 < t4, o3 = e3 ? a3 ? t4 + 1 : t4 - 1 : t4, f3 = r4; a3 ? f3 < o3 : f3 > o3; a3 ? f3++ : f3--)
        n3.push(f3);
      return n3;
    }
    var Oe = function(r4) {
      var t4, e3, n3, a3, o3, f3, c3;
      if ((r4 = r4.map(function(r5) {
        return new g2(r5);
      })).length === 2)
        t4 = r4.map(function(r5) {
          return r5.lab();
        }), o3 = t4[0], f3 = t4[1], a3 = function(r5) {
          var t5 = [0, 1, 2].map(function(t6) {
            return o3[t6] + r5 * (f3[t6] - o3[t6]);
          });
          return new g2(t5, "lab");
        };
      else if (r4.length === 3)
        e3 = r4.map(function(r5) {
          return r5.lab();
        }), o3 = e3[0], f3 = e3[1], c3 = e3[2], a3 = function(r5) {
          var t5 = [0, 1, 2].map(function(t6) {
            return (1 - r5) * (1 - r5) * o3[t6] + 2 * (1 - r5) * r5 * f3[t6] + r5 * r5 * c3[t6];
          });
          return new g2(t5, "lab");
        };
      else if (r4.length === 4) {
        var u3;
        n3 = r4.map(function(r5) {
          return r5.lab();
        }), o3 = n3[0], f3 = n3[1], c3 = n3[2], u3 = n3[3], a3 = function(r5) {
          var t5 = [0, 1, 2].map(function(t6) {
            return (1 - r5) * (1 - r5) * (1 - r5) * o3[t6] + 3 * (1 - r5) * (1 - r5) * r5 * f3[t6] + 3 * (1 - r5) * r5 * r5 * c3[t6] + r5 * r5 * r5 * u3[t6];
          });
          return new g2(t5, "lab");
        };
      } else if (r4.length === 5) {
        var i3 = Oe(r4.slice(0, 3)), l3 = Oe(r4.slice(2, 5));
        a3 = function(r5) {
          return r5 < 0.5 ? i3(2 * r5) : l3(2 * (r5 - 0.5));
        };
      }
      return a3;
    }, Be = function(r4) {
      var t4 = Oe(r4);
      return t4.scale = function() {
        return Re(t4);
      }, t4;
    }, Ce = function(r4, t4, e3) {
      if (!Ce[e3])
        throw new Error("unknown blend mode " + e3);
      return Ce[e3](r4, t4);
    }, Le = function(r4) {
      return function(t4, e3) {
        var n3 = m2(e3).rgb(), a3 = m2(t4).rgb();
        return m2.rgb(r4(n3, a3));
      };
    }, je = function(r4) {
      return function(t4, e3) {
        var n3 = [];
        return n3[0] = r4(t4[0], e3[0]), n3[1] = r4(t4[1], e3[1]), n3[2] = r4(t4[2], e3[2]), n3;
      };
    }, Te = function(r4) {
      return r4;
    }, Ie = function(r4, t4) {
      return r4 * t4 / 255;
    }, De = function(r4, t4) {
      return r4 > t4 ? t4 : r4;
    }, $e = function(r4, t4) {
      return r4 > t4 ? r4 : t4;
    }, Ye = function(r4, t4) {
      return 255 * (1 - (1 - r4 / 255) * (1 - t4 / 255));
    }, ze = function(r4, t4) {
      return t4 < 128 ? 2 * r4 * t4 / 255 : 255 * (1 - 2 * (1 - r4 / 255) * (1 - t4 / 255));
    }, He = function(r4, t4) {
      return 255 * (1 - (1 - t4 / 255) / (r4 / 255));
    }, Xe = function(r4, t4) {
      return r4 === 255 || (r4 = t4 / 255 * 255 / (1 - r4 / 255)) > 255 ? 255 : r4;
    };
    Ce.normal = Le(je(Te)), Ce.multiply = Le(je(Ie)), Ce.screen = Le(je(Ye)), Ce.overlay = Le(je(ze)), Ce.darken = Le(je(De)), Ce.lighten = Le(je($e)), Ce.dodge = Le(je(Xe)), Ce.burn = Le(je(He));
    for (var We = Ce, Ue = l2.type, Ve = l2.clip_rgb, Ke = l2.TWOPI, Ze = Math.pow, Je = Math.sin, Qe = Math.cos, rn = function(r4, t4, e3, n3, a3) {
      r4 === void 0 && (r4 = 300), t4 === void 0 && (t4 = -1.5), e3 === void 0 && (e3 = 1), n3 === void 0 && (n3 = 1), a3 === void 0 && (a3 = [0, 1]);
      var o3, f3 = 0;
      Ue(a3) === "array" ? o3 = a3[1] - a3[0] : (o3 = 0, a3 = [a3, a3]);
      var c3 = function(c4) {
        var u3 = Ke * ((r4 + 120) / 360 + t4 * c4), i3 = Ze(a3[0] + o3 * c4, n3), l3 = (f3 !== 0 ? e3[0] + c4 * f3 : e3) * i3 * (1 - i3) / 2, s3 = Qe(u3), h3 = Je(u3);
        return m2(Ve([255 * (i3 + l3 * (-0.14861 * s3 + 1.78277 * h3)), 255 * (i3 + l3 * (-0.29227 * s3 - 0.90649 * h3)), 255 * (i3 + l3 * (1.97294 * s3)), 1]));
      };
      return c3.start = function(t5) {
        return t5 == null ? r4 : (r4 = t5, c3);
      }, c3.rotations = function(r5) {
        return r5 == null ? t4 : (t4 = r5, c3);
      }, c3.gamma = function(r5) {
        return r5 == null ? n3 : (n3 = r5, c3);
      }, c3.hue = function(r5) {
        return r5 == null ? e3 : (Ue(e3 = r5) === "array" ? (f3 = e3[1] - e3[0]) == 0 && (e3 = e3[1]) : f3 = 0, c3);
      }, c3.lightness = function(r5) {
        return r5 == null ? a3 : (Ue(r5) === "array" ? (a3 = r5, o3 = r5[1] - r5[0]) : (a3 = [r5, r5], o3 = 0), c3);
      }, c3.scale = function() {
        return m2.scale(c3);
      }, c3.hue(e3), c3;
    }, tn = "0123456789abcdef", en = Math.floor, nn = Math.random, an = function() {
      for (var r4 = "#", t4 = 0; t4 < 6; t4++)
        r4 += tn.charAt(en(16 * nn()));
      return new g2(r4, "hex");
    }, on = Math.log, fn = Math.pow, cn = Math.floor, un = Math.abs, ln = function(r4, t4) {
      t4 === void 0 && (t4 = null);
      var e3 = { min: Number.MAX_VALUE, max: -1 * Number.MAX_VALUE, sum: 0, values: [], count: 0 };
      return f2(r4) === "object" && (r4 = Object.values(r4)), r4.forEach(function(r5) {
        t4 && f2(r5) === "object" && (r5 = r5[t4]), r5 == null || isNaN(r5) || (e3.values.push(r5), e3.sum += r5, r5 < e3.min && (e3.min = r5), r5 > e3.max && (e3.max = r5), e3.count += 1);
      }), e3.domain = [e3.min, e3.max], e3.limits = function(r5, t5) {
        return sn(e3, r5, t5);
      }, e3;
    }, sn = function(r4, t4, e3) {
      t4 === void 0 && (t4 = "equal"), e3 === void 0 && (e3 = 7), f2(r4) == "array" && (r4 = ln(r4));
      var n3 = r4.min, a3 = r4.max, o3 = r4.values.sort(function(r5, t5) {
        return r5 - t5;
      });
      if (e3 === 1)
        return [n3, a3];
      var c3 = [];
      if (t4.substr(0, 1) === "c" && (c3.push(n3), c3.push(a3)), t4.substr(0, 1) === "e") {
        c3.push(n3);
        for (var u3 = 1; u3 < e3; u3++)
          c3.push(n3 + u3 / e3 * (a3 - n3));
        c3.push(a3);
      } else if (t4.substr(0, 1) === "l") {
        if (n3 <= 0)
          throw new Error("Logarithmic scales are only possible for values > 0");
        var i3 = Math.LOG10E * on(n3), l3 = Math.LOG10E * on(a3);
        c3.push(n3);
        for (var s3 = 1; s3 < e3; s3++)
          c3.push(fn(10, i3 + s3 / e3 * (l3 - i3)));
        c3.push(a3);
      } else if (t4.substr(0, 1) === "q") {
        c3.push(n3);
        for (var h3 = 1; h3 < e3; h3++) {
          var d3 = (o3.length - 1) * h3 / e3, b3 = cn(d3);
          if (b3 === d3)
            c3.push(o3[b3]);
          else {
            var p3 = d3 - b3;
            c3.push(o3[b3] * (1 - p3) + o3[b3 + 1] * p3);
          }
        }
        c3.push(a3);
      } else if (t4.substr(0, 1) === "k") {
        var g3, v3 = o3.length, m3 = new Array(v3), y3 = new Array(e3), w3 = true, M3 = 0, k3 = null;
        (k3 = []).push(n3);
        for (var x3 = 1; x3 < e3; x3++)
          k3.push(n3 + x3 / e3 * (a3 - n3));
        for (k3.push(a3); w3; ) {
          for (var N3 = 0; N3 < e3; N3++)
            y3[N3] = 0;
          for (var A3 = 0; A3 < v3; A3++)
            for (var _3 = o3[A3], E3 = Number.MAX_VALUE, q3 = void 0, P3 = 0; P3 < e3; P3++) {
              var S3 = un(k3[P3] - _3);
              S3 < E3 && (E3 = S3, q3 = P3), y3[q3]++, m3[A3] = q3;
            }
          for (var F3 = new Array(e3), R3 = 0; R3 < e3; R3++)
            F3[R3] = null;
          for (var G3 = 0; G3 < v3; G3++)
            F3[g3 = m3[G3]] === null ? F3[g3] = o3[G3] : F3[g3] += o3[G3];
          for (var O3 = 0; O3 < e3; O3++)
            F3[O3] *= 1 / y3[O3];
          w3 = false;
          for (var B3 = 0; B3 < e3; B3++)
            if (F3[B3] !== k3[B3]) {
              w3 = true;
              break;
            }
          k3 = F3, ++M3 > 200 && (w3 = false);
        }
        for (var C3 = {}, L3 = 0; L3 < e3; L3++)
          C3[L3] = [];
        for (var j2 = 0; j2 < v3; j2++)
          C3[g3 = m3[j2]].push(o3[j2]);
        for (var T2 = [], I2 = 0; I2 < e3; I2++)
          T2.push(C3[I2][0]), T2.push(C3[I2][C3[I2].length - 1]);
        T2 = T2.sort(function(r5, t5) {
          return r5 - t5;
        }), c3.push(T2[0]);
        for (var D2 = 1; D2 < T2.length; D2 += 2) {
          var $2 = T2[D2];
          isNaN($2) || c3.indexOf($2) !== -1 || c3.push($2);
        }
      }
      return c3;
    }, hn = { analyze: ln, limits: sn }, dn = function(r4, t4) {
      r4 = new g2(r4), t4 = new g2(t4);
      var e3 = r4.luminance(), n3 = t4.luminance();
      return e3 > n3 ? (e3 + 0.05) / (n3 + 0.05) : (n3 + 0.05) / (e3 + 0.05);
    }, bn = Math.sqrt, pn = Math.atan2, gn = Math.abs, vn = Math.cos, mn = Math.PI, yn = function(r4, t4, e3, n3) {
      e3 === void 0 && (e3 = 1), n3 === void 0 && (n3 = 1), r4 = new g2(r4), t4 = new g2(t4);
      for (var a3 = Array.from(r4.lab()), o3 = a3[0], f3 = a3[1], c3 = a3[2], u3 = Array.from(t4.lab()), i3 = u3[0], l3 = u3[1], s3 = u3[2], h3 = bn(f3 * f3 + c3 * c3), d3 = bn(l3 * l3 + s3 * s3), b3 = o3 < 16 ? 0.511 : 0.040975 * o3 / (1 + 0.01765 * o3), p3 = 0.0638 * h3 / (1 + 0.0131 * h3) + 0.638, v3 = h3 < 1e-6 ? 0 : 180 * pn(c3, f3) / mn; v3 < 0; )
        v3 += 360;
      for (; v3 >= 360; )
        v3 -= 360;
      var m3 = v3 >= 164 && v3 <= 345 ? 0.56 + gn(0.2 * vn(mn * (v3 + 168) / 180)) : 0.36 + gn(0.4 * vn(mn * (v3 + 35) / 180)), y3 = h3 * h3 * h3 * h3, w3 = bn(y3 / (y3 + 1900)), M3 = p3 * (w3 * m3 + 1 - w3), k3 = h3 - d3, x3 = f3 - l3, N3 = c3 - s3, A3 = (o3 - i3) / (e3 * b3), _3 = k3 / (n3 * p3);
      return bn(A3 * A3 + _3 * _3 + (x3 * x3 + N3 * N3 - k3 * k3) / (M3 * M3));
    }, wn = function(r4, t4, e3) {
      e3 === void 0 && (e3 = "lab"), r4 = new g2(r4), t4 = new g2(t4);
      var n3 = r4.get(e3), a3 = t4.get(e3), o3 = 0;
      for (var f3 in n3) {
        var c3 = (n3[f3] || 0) - (a3[f3] || 0);
        o3 += c3 * c3;
      }
      return Math.sqrt(o3);
    }, Mn = function() {
      for (var r4 = [], t4 = arguments.length; t4--; )
        r4[t4] = arguments[t4];
      try {
        return new (Function.prototype.bind.apply(g2, [null].concat(r4)))(), true;
      } catch (r5) {
        return false;
      }
    }, kn = { cool: function() {
      return Re([m2.hsl(180, 1, 0.9), m2.hsl(250, 0.7, 0.4)]);
    }, hot: function() {
      return Re(["#000", "#f00", "#ff0", "#fff"]).mode("rgb");
    } }, xn = { OrRd: ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#b30000", "#7f0000"], PuBu: ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#045a8d", "#023858"], BuPu: ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#810f7c", "#4d004b"], Oranges: ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#a63603", "#7f2704"], BuGn: ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b"], YlOrBr: ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#993404", "#662506"], YlGn: ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#006837", "#004529"], Reds: ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#a50f15", "#67000d"], RdPu: ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177", "#49006a"], Greens: ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#006d2c", "#00441b"], YlGnBu: ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#253494", "#081d58"], Purples: ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#54278f", "#3f007d"], GnBu: ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#0868ac", "#084081"], Greys: ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"], YlOrRd: ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"], PuRd: ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#980043", "#67001f"], Blues: ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"], PuBuGn: ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016c59", "#014636"], Viridis: ["#440154", "#482777", "#3f4a8a", "#31678e", "#26838f", "#1f9d8a", "#6cce5a", "#b6de2b", "#fee825"], Spectral: ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"], RdYlGn: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"], RdBu: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"], PiYG: ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"], PRGn: ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"], RdYlBu: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"], BrBG: ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"], RdGy: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"], PuOr: ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"], Set2: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"], Accent: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17", "#666666"], Set1: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"], Set3: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5", "#ffed6f"], Dark2: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#666666"], Paired: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99", "#b15928"], Pastel2: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc", "#cccccc"], Pastel1: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2"] }, Nn = 0, An = Object.keys(xn); Nn < An.length; Nn += 1) {
      var _n = An[Nn];
      xn[_n.toLowerCase()] = xn[_n];
    }
    var En = xn;
    return m2.average = qe, m2.bezier = Be, m2.blend = We, m2.cubehelix = rn, m2.mix = m2.interpolate = ce, m2.random = an, m2.scale = Re, m2.analyze = hn.analyze, m2.contrast = dn, m2.deltaE = yn, m2.distance = wn, m2.limits = hn.limits, m2.valid = Mn, m2.scales = kn, m2.colors = Bt, m2.brewer = En, m2;
  }();
}, r(e = { path: t, exports: {}, require: function(r2, t2) {
  return function() {
    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
  }(t2 == null && e.path);
} }, e.exports), e.exports);
function a(r2, t2, e2 = true) {
  let n2 = (o(r2) + 0.05) / (o(t2) + 0.05);
  return e2 && n2 < 1 && (n2 = 1 / n2), n2;
}
var o = (r2, t2 = true) => {
  let e2 = r2.map((r3) => r3 / 255);
  return t2 && (e2 = f(e2, false)), 0.2126 * e2[0] + 0.7152 * e2[1] + 0.0722 * e2[2];
};
var f = (r2, t2 = true) => r2.map((r3) => {
  const e2 = t2 ? r3 / 255 : r3;
  let n2;
  return n2 = e2 <= 0.03928 ? e2 / 12.92 : Math.pow((e2 + 0.055) / 1.055, 2.4), t2 ? 255 * n2 : n2;
});
var c = 0.95047;
var u = 1;
var i = 1.08883;
var l = 0.137931034;
var s = 0.206896552;
var h = 0.12841855;
var d = 8856452e-9;
function b(r2) {
  return Math.round(255 * (r2 <= 304e-5 ? 12.92 * r2 : 1.055 * Math.pow(r2, 1 / 2.4) - 0.055));
}
function p(r2) {
  return (r2 /= 255) <= 0.04045 ? r2 / 12.92 : Math.pow((r2 + 0.055) / 1.055, 2.4);
}
function g(r2) {
  return r2 > d ? Math.pow(r2, 1 / 3) : r2 / h + l;
}
function v(r2) {
  return r2 > s ? r2 * r2 * r2 : h * (r2 - l);
}
function m(r2) {
  const t2 = r2[0], e2 = r2[1];
  let n2 = r2[2], a2 = (t2 + 16) / 116, o2 = isNaN(e2) ? a2 : a2 + e2 / 500, f2 = isNaN(n2) ? a2 : a2 - n2 / 200;
  a2 = u * v(a2), o2 = c * v(o2), f2 = i * v(f2);
  const l2 = b(3.2404542 * o2 - 1.5371385 * a2 - 0.4985314 * f2), s2 = b(-0.969266 * o2 + 1.8760108 * a2 + 0.041556 * f2);
  return n2 = b(0.0556434 * o2 - 0.2040259 * a2 + 1.0572252 * f2), [l2, s2, n2];
}
function y(r2) {
  return `0${r2.toString(16)}`.slice(-2);
}
var w = 180 / Math.PI;
function M(r2, t2) {
  return function(r3, t3) {
    const e2 = function(r4) {
      return 0.017453292519943295 * r4;
    }, n2 = function(r4) {
      return 57.29577951308232 * r4;
    }, a2 = r3[0], o2 = r3[1], f2 = r3[2], c2 = t3[0], u2 = t3[1], i2 = t3[2], l2 = (a2 + c2) / 2, s2 = (Math.sqrt(Math.pow(o2, 2) + Math.pow(f2, 2)) + Math.sqrt(Math.pow(u2, 2) + Math.pow(i2, 2))) / 2, h2 = (1 - Math.sqrt(Math.pow(s2, 7) / (Math.pow(s2, 7) + Math.pow(25, 7)))) / 2, d2 = o2 * (1 + h2), b2 = u2 * (1 + h2), p2 = Math.sqrt(Math.pow(d2, 2) + Math.pow(f2, 2)), g2 = Math.sqrt(Math.pow(b2, 2) + Math.pow(i2, 2)), v2 = (p2 + g2) / 2;
    let m2 = n2(Math.atan2(f2, d2));
    m2 < 0 && (m2 += 360);
    let y2 = n2(Math.atan2(i2, b2));
    y2 < 0 && (y2 += 360);
    const w2 = Math.abs(m2 - y2) > 180 ? (m2 + y2 + 360) / 2 : (m2 + y2) / 2, M2 = 1 - 0.17 * Math.cos(e2(w2 - 30)) + 0.24 * Math.cos(e2(2 * w2)) + 0.32 * Math.cos(e2(3 * w2 + 6)) - 0.2 * Math.cos(e2(4 * w2 - 63));
    let k2 = y2 - m2;
    Math.abs(k2) > 180 && (y2 <= m2 ? k2 += 360 : k2 -= 360);
    const x2 = c2 - a2, N2 = g2 - p2;
    k2 = 2 * Math.sqrt(p2 * g2) * Math.sin(e2(k2) / 2);
    const A2 = 1 + 0.015 * Math.pow(l2 - 50, 2) / Math.sqrt(20 + Math.pow(l2 - 50, 2)), _2 = 1 + 0.045 * v2, E2 = 1 + 0.015 * v2 * M2, q2 = 30 * Math.exp(-Math.pow((w2 - 275) / 25, 2)), P2 = -2 * Math.sqrt(Math.pow(v2, 7) / (Math.pow(v2, 7) + Math.pow(25, 7))) * Math.sin(2 * e2(q2));
    return Math.sqrt(Math.pow(x2 / (1 * A2), 2) + Math.pow(N2 / (1 * _2), 2) + Math.pow(k2 / (1 * E2), 2) + P2 * (N2 / (1 * _2)) * (k2 / (1 * E2)));
  }(r2, t2);
}
var k = { validateRgb: function(r2) {
  const t2 = r2[0], e2 = r2[1], n2 = r2[2];
  return t2 >= 0 && t2 <= 255 && e2 >= 0 && e2 <= 255 && n2 >= 0 && n2 <= 255;
}, labToRgb: m, labToRgbHex: function(r2) {
  const t2 = m(r2);
  return `#${y(t2[0])}${y(t2[1])}${y(t2[2])}`;
}, rgbToLab: function(r2) {
  const t2 = function(r3) {
    let t3 = r3[0], e3 = r3[1], n3 = r3[2];
    return t3 = p(t3), e3 = p(e3), n3 = p(n3), [g((0.4124564 * t3 + 0.3575761 * e3 + 0.1804375 * n3) / c), g((0.2126729 * t3 + 0.7151522 * e3 + 0.072175 * n3) / u), g((0.0193339 * t3 + 0.119192 * e3 + 0.9503041 * n3) / i)];
  }(r2), e2 = t2[0], n2 = t2[1], a2 = 116 * n2 - 16;
  return [a2 < 0 ? 0 : a2, 500 * (e2 - n2), 200 * (n2 - t2[2])];
}, labToHcl: function(r2) {
  const t2 = r2[0], e2 = r2[1], n2 = r2[2], a2 = Math.sqrt(e2 * e2 + n2 * n2);
  let o2 = (Math.atan2(n2, e2) * w + 360) % 360;
  return Math.round(1e4 * a2) === 0 && (o2 = NaN), [o2, a2, t2];
}, diffSort: function(r2, t2) {
  const e2 = [(t2 = t2.slice()).shift()];
  let n2, a2, o2, f2, c2, u2, i2;
  for (; t2.length > 0; ) {
    for (n2 = -1, a2 = -1 / 0, o2 = 0; o2 < t2.length; o2++)
      for (f2 = t2[o2], i2 = 0; i2 < e2.length; i2++)
        c2 = e2[i2], u2 = r2(f2, c2), u2 > a2 && (a2 = u2, n2 = o2);
    e2.push(t2[n2]), t2.splice(n2, 1);
  }
  return e2;
}, distance: M, contrast: function(r2, t2) {
  return a(r2, t2, true);
}, sortColorsByComplementary: (r2, t2) => {
  const e2 = n(t2).hsv(), a2 = [...e2];
  a2[0] = (e2[0] + 180) % 360;
  const o2 = [...e2];
  o2[0] = (e2[0] + 330) % 360;
  const f2 = (r3) => n(r3).lab(), c2 = (r3) => n(r3, "hsv").lab(), u2 = c2(a2);
  let i2 = r2[0], l2 = M(u2, f2(r2[0]));
  r2.forEach((r3) => {
    const t3 = M(u2, f2(r3));
    t3 < l2 && (l2 = t3, i2 = r3);
  });
  const s2 = c2(o2), h2 = r2.sort((r3, t3) => M(s2, f2(r3)) - M(s2, f2(t3))).filter((r3) => r3 !== i2);
  return h2.unshift(n(t2).hex()), h2.push(i2), h2;
}, generateLockedColor: (r2) => n(r2).lab(), getW3RelativeLuminance: o, sRGBDecode: f };
var x = class {
  constructor(r2) {
    var t2, e2;
    r2 || (t2 = 0, e2 = Math.pow(2, 31) - 1, r2 = t2 + Math.floor(Math.random() * (e2 - t2 + 1))), this.seed = r2 % 2147483647, this.seed <= 0 && (this.seed += 2147483646);
  }
  next() {
    return this.seed = 16807 * this.seed % 2147483647, this.seed;
  }
  nextFloat() {
    return (this.next() - 1) / 2147483646;
  }
};
var N = { random: [0, 360, 15, 98, 40, 98] };
var A = { bright: [[330, 360, 42, 88, 68, 92], [320, 330, 54, 85, 64, 91], [300, 320, 46, 75, 62, 89], [280, 300, 36, 84, 59, 92], [270, 280, 5, 88, 54, 87], [240, 270, 12, 74, 62, 95], [210, 240, 13, 82, 58, 93], [200, 210, 25, 88, 72, 82], [180, 200, 14, 70, 57, 90], [150, 180, 22, 76, 64, 90], [135, 150, 42, 85, 68, 82], [120, 135, 43, 95, 62, 93], [110, 120, 49, 89, 66, 92], [91, 110, 56, 79, 79, 93], [70, 91, 65, 95, 78, 99], [60, 70, 44, 84, 65, 98], [30, 60, 41, 79, 72, 92], [0, 30, 42, 88, 65, 88]], contrast: [[330, 360, 39, 69, 54, 74], [320, 330, 28, 86, 44, 65], [300, 320, 80, 100, 33, 53], [280, 300, 53, 90, 30, 60], [270, 280, 27, 47, 30, 55], [240, 270, 54, 82, 62, 80], [210, 240, 25, 88, 57, 90], [200, 210, 24, 47, 66, 86], [180, 200, 30, 62, 77, 88], [150, 180, 45, 86, 60, 87], [120, 150, 63, 92, 58, 87], [110, 120, 50, 88, 66, 90], [90, 110, 35, 83, 70, 95], [60, 90, 68, 89, 78, 94], [30, 60, 43, 87, 55, 85], [0, 30, 48, 69, 61, 71]], composed: [[330, 360, 55, 95, 35, 70], [320, 330, 25, 83, 44, 70], [300, 320, 55, 90, 40, 74], [280, 300, 38, 90, 42, 67], [270, 280, 38, 95, 28, 65], [240, 270, 20, 88, 34, 78], [210, 240, 15, 77, 40, 85], [200, 210, 10, 88, 33, 85], [180, 200, 25, 82, 43, 77], [150, 180, 35, 89, 44, 68], [135, 150, 15, 88, 42, 85], [120, 135, 15, 95, 46, 85], [110, 120, 45, 90, 44, 80], [90, 110, 35, 78, 67, 95], [70, 90, 65, 98, 80, 98], [60, 70, 42, 85, 45, 90], [30, 60, 53, 93, 45, 85], [0, 30, 43, 83, 38, 65]] };
var _ = { colorFilter: null, colorSpace: "default", quality: 100, ultraPrecision: false, seed: null };
var E = new Set(Object.keys(N));
function q(r2, t2) {
  if (typeof r2 != "number" || r2 < 2)
    throw new Error("expecting a color count > 2.");
  t2 = function(r3) {
    const t3 = Object.assign({}, _, r3);
    if (typeof t3.quality != "number" || isNaN(t3.quality) || t3.quality < 1)
      throw new Error("invalid `quality`. Expecting a number > 0.");
    if (typeof t3.ultraPrecision != "boolean")
      throw new Error("invalid `ultraPrecision`. Expecting a boolean.");
    if (t3.seed && typeof t3.seed != "number")
      throw new Error("invalid `seed`. Expecting an integer or a string.");
    if (t3.colorFilter || !t3.colorSpace)
      return t3;
    let e3;
    if (typeof t3.colorSpace == "string") {
      if (!E.has(t3.colorSpace))
        throw new Error(`unknown \`colorSpace\` "${t3.colorSpace}".`);
      e3 = N[t3.colorSpace];
    } else if (Array.isArray(t3.colorSpace)) {
      if (t3.colorSpace.length !== 6)
        throw new Error("expecting a `colorSpace` array of length 6 ([hmin, hmax, cmin, cmax, lmin, lmax]).");
      e3 = t3.colorSpace;
    } else
      e3 = [t3.colorSpace.hmin || 0, t3.colorSpace.hmax || 360, t3.colorSpace.cmin || 0, t3.colorSpace.cmax || 100, t3.colorSpace.lmin || 0, t3.colorSpace.lmax || 100];
    return t3.colorFilter = function(r4, t4) {
      const n2 = k.labToHcl(t4);
      return e3[0] < e3[1] ? n2[0] >= e3[0] && n2[0] <= e3[1] && n2[1] >= e3[2] && n2[1] <= e3[3] && n2[2] >= e3[4] && n2[2] <= e3[5] : (n2[0] >= e3[0] || n2[0] <= e3[1]) && n2[1] >= e3[2] && n2[1] <= e3[3] && n2[2] >= e3[4] && n2[2] <= e3[5];
    }, t3;
  }(t2);
  const e2 = new x(t2.seed), { distance: a2 } = k, o2 = function(r3, e3) {
    return !!k.validateRgb(r3) && (!t2.colorFilter || !!t2.colorFilter(r3, e3));
  };
  let f2 = function(r3, t3, e3) {
    const n2 = new Array(t3);
    let a3, o3;
    for (let f3 = 0; f3 < t3; f3++) {
      do {
        a3 = [100 * r3(), 100 * (2 * r3() - 1), 100 * (2 * r3() - 1)], o3 = k.labToRgb(a3);
      } while (!e3(o3, a3));
      n2[f3] = a3;
    }
    return n2;
  }(function() {
    return e2.nextFloat();
  }, r2, o2);
  return (t2 == null ? void 0 : t2.color) && (f2[0] = n(t2.color).lab()), function(r3, t3, e3, n2) {
    const a3 = [], o3 = [];
    let f3, c2, u2, i2, l2, s2 = 4, h2 = 10, d2 = 10;
    for (n2.ultraPrecision && (s2 = 1, h2 = 5, d2 = 5), f3 = 0; f3 <= 100; f3 += s2)
      for (c2 = -100; c2 <= 100; c2 += h2)
        for (u2 = -100; u2 <= 100; u2 += d2)
          i2 = [f3, c2, u2], l2 = k.labToRgb(i2), t3(l2, i2) && (a3.push(i2), o3.push(null));
    let b2, p2, g2, v2, m2 = n2.quality || _.quality;
    const y2 = a3.length, w2 = e3.length;
    let M2, x2, N2, A2, E2, q2;
    for (; m2-- > 0; ) {
      for (b2 = 0; b2 < y2; b2++)
        for (v2 = a3[b2], x2 = 1 / 0, p2 = 0; p2 < w2; p2++)
          g2 = e3[p2], M2 = r3(g2, v2), M2 < x2 && (x2 = M2, o3[b2] = p2);
      for (N2 = a3.slice(), p2 = 1; p2 < w2; p2++) {
        for (A2 = 0, E2 = [0, 0, 0], b2 = 0; b2 < y2; b2++)
          o3[b2] === p2 && (A2 += 1, E2[0] += a3[b2][0], E2[1] += a3[b2][1], E2[2] += a3[b2][2]);
        if (A2 !== 0)
          if (E2[0] /= A2, E2[1] /= A2, E2[2] /= A2, l2 = k.labToRgb(E2), t3(l2, E2))
            e3[p2] = E2;
          else {
            const t4 = N2.length > 0 ? N2 : a3;
            for (x2 = 1 / 0, q2 = -1, b2 = 0; b2 < t4.length; b2++)
              M2 = r3(t4[b2], E2), M2 < x2 && (x2 = M2, q2 = b2);
            e3[p2] = t4[q2], N2 = N2.filter((r4) => r4[0] !== e3[p2][0] || r4[1] !== e3[p2][1] || r4[2] !== e3[p2][2]);
          }
      }
    }
  }(a2, o2, f2, t2), f2 = k.diffSort(a2, f2), f2.map(k.labToRgbHex);
}
function P(r2, t2) {
  return typeof t2.colorSpace == "string" && A[t2.colorSpace] ? ((r3, t3, e2) => {
    const n2 = [];
    if (!Array.isArray(e2))
      return n2;
    const a2 = (r4) => e2.filter((t4) => t4[0] <= r4 && r4 < t4[1])[0], o2 = (r4) => {
      for (t3.colorSpace = r4; ; ) {
        const r5 = q(5, t3)[3];
        if (!n2.includes(r5)) {
          n2.push(r5);
          break;
        }
      }
    };
    if (e2.length === r3)
      e2.forEach((r4) => o2(r4));
    else {
      const t4 = 360 / r3;
      for (let e3 = 1; e3 <= r3; e3++) {
        const r4 = e3 * t4 - Math.random() * t4;
        o2(a2(r4));
      }
    }
    return n2;
  })(r2 - 1, t2, A[t2.colorSpace]) : q(r2, t2).splice(1, r2);
}
function S(r2, t2) {
  const e2 = n(r2).lab(), a2 = 100 * (1 - 1 / t2), o2 = a2 / (t2 - 1), f2 = 0.5 * (100 - a2), c2 = ((r3, t3, e3) => {
    const n2 = [];
    for (let a3 = t3; a3 > r3; a3 -= e3)
      n2.push(a3);
    return n2;
  })(f2, f2 + t2 * o2, o2);
  let u2 = 9999;
  for (let r3 = 0; r3 < t2; r3++) {
    const t3 = e2[0] - c2[r3];
    Math.abs(t3) < Math.abs(u2) && (u2 = t3);
  }
  return ((r3, t3) => {
    const e3 = { diff: 1 / 0, idx: -1 };
    t3.forEach((t4, n3) => {
      Math.abs(r3 - t4) < e3.diff && (e3.diff = Math.abs(r3 - t4), e3.idx = n3);
    });
    const n2 = t3.concat();
    return n2[e3.idx] = r3, n2;
  })(e2[0], c2.map((r3) => r3 + u2)).map((r3) => n.lab(r3, e2[1], e2[2]));
}
var F = (r2, t2) => {
  const e2 = n(r2).hex() !== "#ffffff", a2 = e2 ? t2 + 1 : t2, o2 = n(r2).set("lch.l", 17).hex(), f2 = n(r2).set("lch.l", 9999).hex(), c2 = Array(a2).fill(1).map((r3, t3) => t3 / a2), u2 = n.scale((i2 = [f2, r2, o2], i2.sort((r3, t3) => n(t3).get("lch.l") - n(r3).get("lch.l")))).mode("hsl").correctLightness();
  var i2;
  const l2 = c2.map((r3) => u2(r3).hex());
  return e2 && l2.shift(), l2;
};
var R = class {
  static getRandomPalette(r2 = {}) {
    const { color: t2 = "#0052d9", colorGamut: e2, number: n2 = 8 } = r2, a2 = P(n2, { color: k.generateLockedColor(t2), quality: 100, colorSpace: e2 || "bright" });
    return k.sortColorsByComplementary(a2, t2);
  }
  static getPaletteByGradation(r2 = { colors: [] }) {
    const { colors: t2, step: e2 = 10, method: a2 = "darken" } = r2;
    return t2.map((r3) => ((r4, t3, e3) => {
      let a3 = F(r4, t3);
      e3 === "range" && (a3 = n.scale(S(r4, t3)).correctLightness().colors(t3));
      const o2 = a3.map((t4) => n.deltaE(t4, r4)), f2 = Math.min(...o2);
      return a3.map((t4) => n.deltaE(t4, r4) === f2 ? r4 : t4);
    })(r3, e2, a2));
  }
};
var G = class {
  static color2arr(r2) {
    var _a;
    return ((_a = r2.match(/(\d|\.)+%?/g)) == null ? void 0 : _a.map((r3) => r3.includes("%") ? parseFloat(r3) / 100 : Number(r3))) || [0, 0, 0];
  }
  static similar(r2, t2) {
    return k.distance(n(r2).lab(), n(t2).lab());
  }
  static contrast(r2, t2) {
    return k.contrast(n(r2).rgb(), n(t2).rgb());
  }
  static scale(r2, t2, e2) {
    return n.scale([r2, t2]).colors(e2);
  }
  static sortColorsByComplementary(r2, t2) {
    return k.sortColorsByComplementary(r2, t2);
  }
  static getRandomPalette(r2) {
    return R.getRandomPalette(r2);
  }
  static getPaletteByGradation(r2) {
    return R.getPaletteByGradation(r2);
  }
  static getRandomPaletteByGradation(r2) {
    return R.getPaletteByGradation(r2);
  }
};
var O;
var B;
var C;
C = function(r2, t2 = "hex", e2) {
  let a2;
  if (t2 === "name")
    a2 = n(r2)[e2]();
  else if (t2 !== "hex" && typeof r2 == "string") {
    const o2 = G.color2arr(r2);
    a2 = n(o2, t2)[e2]();
  } else
    a2 = t2 !== "hex" && Array.isArray(r2) ? n([...r2], t2)[e2]() : n(r2)[e2]();
  return Array.isArray(a2) ? a2.map((r3) => parseFloat(r3.toFixed(3))) : a2;
}, (B = "colorTransform") in (O = G) ? Object.defineProperty(O, B, { value: C, enumerable: true, configurable: true, writable: true }) : O[B] = C;
var L = Object.freeze({ __proto__: null, wcag21: function(r2, t2) {
  let e2 = NaN;
  if (typeof r2 == "number")
    r2 > 0 && r2 < 1 ? e2 = 1 / r2 : r2 > 1 && (e2 = r2);
  else {
    const [t3, o3] = r2;
    n.valid(t3) && n.valid(t3) && (e2 = a(n(t3).rgb(), n(o3).rgb()));
  }
  const o2 = { contrast: e2, AA: false, AAA: false };
  switch (t2) {
    case "normalText":
      e2 > 4.5 && (o2.AA = true), e2 > 7 && (o2.AAA = true);
      break;
    case "largeText":
      e2 > 3.1 && (o2.AA = true), e2 > 4.5 && (o2.AAA = true);
      break;
    case "nonText":
      e2 > 3.1 && (o2.AA = true), o2.AAA = null;
  }
  return o2;
} });
export {
  G as Color,
  L as Inspect
};
/**
   * chroma.js - JavaScript library for color conversions
   *
   * Copyright (c) 2011-2019, Gregor Aisch
   * All rights reserved.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions are met:
   *
   * 1. Redistributions of source code must retain the above copyright notice, this
   * list of conditions and the following disclaimer.
   *
   * 2. Redistributions in binary form must reproduce the above copyright notice,
   * this list of conditions and the following disclaimer in the documentation
   * and/or other materials provided with the distribution.
   *
   * 3. The name Gregor Aisch may not be used to endorse or promote products
   * derived from this software without specific prior written permission.
   *
   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
   * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
   * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
   * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
   * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *
   * -------------------------------------------------------
   *
   * chroma.js includes colors from colorbrewer2.org, which are released under
   * the following license:
   *
   * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,
   * and The Pennsylvania State University.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing,
   * software distributed under the License is distributed on an
   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
   * either express or implied. See the License for the specific
   * language governing permissions and limitations under the License.
   *
   * ------------------------------------------------------
   *
   * Named colors are taken from X11 Color Names.
   * http://www.w3.org/TR/css3-color/#svg-color
   *
   * @preserve
   */
//# sourceMappingURL=tvision-color.js.map
