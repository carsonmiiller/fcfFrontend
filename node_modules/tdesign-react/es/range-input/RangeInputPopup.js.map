{"version":3,"file":"RangeInputPopup.js","sources":["../../src/range-input/RangeInputPopup.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Popup from '../popup';\nimport useConfig from '../_util/useConfig';\nimport RangeInput from './RangeInput';\nimport type { StyledProps } from '../common';\nimport type { TdRangeInputPopupProps } from './type';\nimport useOverlayStyle from '../select-input/useOverlayStyle';\n\nexport interface RangeInputPopupProps extends TdRangeInputPopupProps, StyledProps {}\n\nconst RangeInputPopup = React.forwardRef((props: RangeInputPopupProps, ref: React.RefObject<HTMLDivElement>) => {\n  const { classPrefix } = useConfig();\n  const name = `${classPrefix}-range-input-popup`;\n\n  const { className, style, inputValue, panel, popupProps, rangeInputProps, popupVisible, onInputChange } = props;\n\n  const { tOverlayStyle, innerPopupVisible, onInnerPopupVisibleChange } = useOverlayStyle(props);\n\n  const popupClasses = classNames([\n    name,\n    {\n      [`${name}--visible`]: popupVisible ?? innerPopupVisible,\n    },\n  ]);\n\n  return (\n    <div ref={ref} style={style} className={classNames(name, className)}>\n      <Popup\n        hideEmptyPopup\n        content={panel}\n        trigger=\"click\"\n        placement=\"bottom-left\"\n        visible={popupVisible ?? innerPopupVisible}\n        onVisibleChange={onInnerPopupVisibleChange}\n        {...popupProps}\n        overlayStyle={tOverlayStyle}\n        className={popupClasses}\n      >\n        <RangeInput value={inputValue} onChange={onInputChange} {...rangeInputProps} />\n      </Popup>\n    </div>\n  );\n});\n\nRangeInputPopup.displayName = 'RangeInputPopup';\n\nexport default RangeInputPopup;\n"],"names":["RangeInputPopup","React","forwardRef","props","ref","useConfig","classPrefix","name","className","style","inputValue","panel","popupProps","rangeInputProps","popupVisible","onInputChange","useOverlayStyle","tOverlayStyle","innerPopupVisible","onInnerPopupVisibleChange","popupClasses","classNames","createElement","Popup","hideEmptyPopup","content","trigger","placement","visible","onVisibleChange","overlayStyle","RangeInput","value","onChange","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMMA,IAAAA,eAAe,gBAAGC,KAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACvD,EAAA,IAAA,UAAA,GAAwBC,SAAS,EAAjC;MAAQC,WAAR,cAAQA,WAAR,CAAA;;EACA,IAAMC,IAAI,GAAMD,EAAAA,CAAAA,MAAAA,CAAAA,WAAN,EAAV,oBAAA,CAAA,CAAA;AACA,EAAA,IAAQE,SAAR,GAA0GL,KAA1G,CAAQK,SAAR;AAAA,MAAmBC,KAAnB,GAA0GN,KAA1G,CAAmBM,KAAnB;AAAA,MAA0BC,UAA1B,GAA0GP,KAA1G,CAA0BO,UAA1B;AAAA,MAAsCC,KAAtC,GAA0GR,KAA1G,CAAsCQ,KAAtC;AAAA,MAA6CC,UAA7C,GAA0GT,KAA1G,CAA6CS,UAA7C;AAAA,MAAyDC,eAAzD,GAA0GV,KAA1G,CAAyDU,eAAzD;AAAA,MAA0EC,YAA1E,GAA0GX,KAA1G,CAA0EW,YAA1E;AAAA,MAAwFC,aAAxF,GAA0GZ,KAA1G,CAAwFY,aAAxF,CAAA;;EACA,IAAwEC,gBAAAA,GAAAA,eAAe,CAACb,KAAD,CAAvF;MAAQc,aAAR,oBAAQA,aAAR;MAAuBC,iBAAvB,oBAAuBA,iBAAvB;MAA0CC,yBAA1C,oBAA0CA,yBAA1C,CAAA;;AACA,EAAA,IAAMC,YAAY,GAAGC,UAAU,CAAC,CAC9Bd,IAD8B,EAGxBA,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAHwB,EAGNO,WAAAA,CAAAA,EAAAA,YAHM,aAGNA,YAHM,KAAA,KAAA,CAAA,GAGNA,YAHM,GAGUI,iBAHV,EAAD,CAA/B,CAAA;AAMA,EAAA,sBAAuBjB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAChDlB,IAAAA,GAAG,EAAHA,GADgD;AAEhDK,IAAAA,KAAK,EAALA,KAFgD;AAGhDD,IAAAA,SAAS,EAAEa,UAAU,CAACd,IAAD,EAAOC,SAAP,CAAA;AAH2B,GAA3B,iBAIJP,KAAK,CAACqB,aAAN,CAAoBC,KAApB,EAAA,aAAA,CAAA,aAAA,CAAA;AACjBC,IAAAA,cAAc,EAAE,IADC;AAEjBC,IAAAA,OAAO,EAAEd,KAFQ;AAGjBe,IAAAA,OAAO,EAAE,OAHQ;AAIjBC,IAAAA,SAAS,EAAE,aAJM;AAKjBC,IAAAA,OAAO,EAAEd,YAAF,KAAA,IAAA,IAAEA,YAAF,KAAEA,KAAAA,CAAAA,GAAAA,YAAF,GAAkBI,iBALR;AAMjBW,IAAAA,eAAe,EAAEV,yBAAAA;AANA,GAAA,EAOdP,UAPc,CAAA,EAAA,EAAA,EAAA;AAQjBkB,IAAAA,YAAY,EAAEb,aARG;AASjBT,IAAAA,SAAS,EAAEY,YAAAA;AATM,GAAA,CAAA,iBAUAnB,KAAK,CAACqB,aAAN,CAAoBS,UAApB,EAAA,aAAA,CAAA;AACjBC,IAAAA,KAAK,EAAEtB,UADU;AAEjBuB,IAAAA,QAAQ,EAAElB,aAAAA;GACPF,EAAAA,eAHc,CAVA,CAAA,CAJI,CAAvB,CAAA;AAmBD,CA9BuB,EAAxB;AA+BAb,eAAe,CAACkC,WAAhB,GAA8B,iBAA9B;;;;"}