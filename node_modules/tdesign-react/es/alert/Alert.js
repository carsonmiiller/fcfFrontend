/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import { _ as _slicedToArray } from '../_chunks/dep-744640f5.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8ff4a741.js';
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import { CheckCircleFilledIcon, InfoCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon } from 'tdesign-icons-react';
import useConfig from '../_util/useConfig.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import { alertDefaultProps } from './defaultProps.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';

var _excluded = ["message", "title", "operation", "theme", "icon", "close", "maxLine", "onClose", "className"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Alert = /*#__PURE__*/forwardRef(function (props, ref) {
  var message = props.message,
      title = props.title,
      operation = props.operation,
      theme = props.theme,
      icon = props.icon,
      close = props.close,
      maxLine = props.maxLine,
      onClose = props.onClose,
      className = props.className,
      alertProps = _objectWithoutProperties(props, _excluded);

  var _React$useState = React.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      closed = _React$useState2[0],
      setClosed = _React$useState2[1];

  var _React$useState3 = React.useState(false),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      collapsed = _React$useState4[0],
      setCollapsed = _React$useState4[1];

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = useLocaleReceiver("alert"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var iconMap = {
    success: CheckCircleFilledIcon,
    info: InfoCircleFilledIcon,
    error: ErrorCircleFilledIcon,
    warning: ErrorCircleFilledIcon
  };

  var handleClose = function handleClose(e) {
    setClosed(true);
    onClose === null || onClose === void 0 ? void 0 : onClose({
      e: e
    });
  };

  var handleCollapse = function handleCollapse() {
    setCollapsed(!collapsed);
  };

  var renderIconNode = function renderIconNode() {
    if ( /*#__PURE__*/React.isValidElement(icon)) {
      return /*#__PURE__*/React.cloneElement(icon, {
        className: classNames(_defineProperty({}, icon.props.className, icon.props.className))
      });
    }

    return /*#__PURE__*/React.createElement(iconMap[theme] || iconMap.info);
  };

  var renderMessage = function renderMessage() {
    if (+maxLine > 0 && Array.isArray(message)) {
      return /* @__PURE__ */React.createElement("div", {
        className: "".concat(classPrefix, "-alert__description")
      }, message.map(function (item, index) {
        if (!collapsed) {
          if (index < maxLine) {
            return /* @__PURE__ */React.createElement("div", {
              key: index
            }, item);
          }
        } else {
          return /* @__PURE__ */React.createElement("div", {
            key: index
          }, item);
        }

        return true;
      }), +maxLine > 0 ? /* @__PURE__ */React.createElement("div", {
        className: "".concat(classPrefix, "-alert__collapse"),
        onClick: handleCollapse
      }, !collapsed ? t(local.expandText) : t(local.collapseText)) : null);
    }

    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-alert__description")
    }, message);
  };

  var renderClose = function renderClose() {
    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-alert__close"),
      onClick: handleClose
    }, typeof close === "boolean" ? /* @__PURE__ */React.createElement(CloseIcon, null) : close);
  };

  return closed ? null : /* @__PURE__ */React.createElement("div", _objectSpread({
    ref: ref,
    className: classNames("".concat(classPrefix, "-alert"), "".concat(classPrefix, "-alert--").concat(theme), className)
  }, alertProps), /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-alert__icon")
  }, renderIconNode()), /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-alert__content")
  }, title ? /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-alert__title")
  }, title) : null, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-alert__message")
  }, renderMessage(), operation ? /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-alert__operation")
  }, operation) : null)), close ? renderClose() : null);
});
Alert.displayName = "Alert";
Alert.defaultProps = alertDefaultProps;

export { Alert as default };
//# sourceMappingURL=Alert.js.map
