{"version":3,"file":"header.js","sources":["../../../../src/color-picker/components/panel/header.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { CloseIcon } from 'tdesign-icons-react';\nimport { COLOR_MODES } from '../../const';\nimport Radio, { RadioValue } from '../../../radio';\nimport { TdColorModes } from '../../interface';\nimport { TdColorPickerProps } from '../../type';\n\nexport interface ColorPanelHeaderProps extends TdColorPickerProps {\n  mode?: TdColorModes;\n  togglePopup?: Function;\n  onModeChange?: (value: RadioValue, context: { e: React.ChangeEvent<HTMLInputElement> }) => void;\n  baseClassName?: string;\n}\n\nconst Header = (props: ColorPanelHeaderProps) => {\n  const { baseClassName, mode = 'monochrome', colorModes, togglePopup, closeBtn = true, onModeChange } = props;\n\n  const handleClosePopup = () => {\n    togglePopup?.(false);\n  };\n\n  return (\n    <div className={`${baseClassName}__head`}>\n      <div className={`${baseClassName}__mode`}>\n        {colorModes?.length === 1 ? (\n          COLOR_MODES[colorModes[0]]\n        ) : (\n          <Radio.Group variant=\"default-filled\" size=\"small\" value={mode} onChange={onModeChange}>\n            {Object.keys(COLOR_MODES).map((key) => (\n              <Radio.Button key={key} value={key}>\n                {COLOR_MODES[key]}\n              </Radio.Button>\n            ))}\n          </Radio.Group>\n        )}\n      </div>\n      {closeBtn ? (\n        <span\n          role=\"button\"\n          className={classNames(`${baseClassName}__icon`, `${baseClassName}__close`)}\n          onClick={handleClosePopup}\n        >\n          <CloseIcon />\n        </span>\n      ) : null}\n    </div>\n  );\n};\n\nexport default React.memo(Header);\n"],"names":["Header","props","baseClassName","mode","colorModes","togglePopup","closeBtn","onModeChange","handleClosePopup","React","createElement","className","length","COLOR_MODES","Radio","Group","variant","size","value","onChange","Object","keys","map","key","Button","role","classNames","onClick","CloseIcon","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,EAAA,IAAQC,aAAR,GAAuGD,KAAvG,CAAQC,aAAR;MAAuGD,WAAAA,GAAAA,KAAvG,CAAuBE,IAAvB;MAAuBA,IAAvB,4BAA8B,YAA9B,GAAA,WAAA;AAAA,MAA4CC,UAA5C,GAAuGH,KAAvG,CAA4CG,UAA5C;AAAA,MAAwDC,WAAxD,GAAuGJ,KAAvG,CAAwDI,WAAxD;MAAuGJ,eAAAA,GAAAA,KAAvG,CAAqEK,QAArE;MAAqEA,QAArE,gCAAgF,IAAhF,GAAA,eAAA;AAAA,MAAsFC,YAAtF,GAAuGN,KAAvG,CAAsFM,YAAtF,CAAA;;AACA,EAAA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;IAC7BH,WAAW,KAAA,IAAX,IAAAA,WAAW,KAAA,KAAA,CAAX,YAAAA,WAAW,CAAG,KAAH,CAAX,CAAA;GADF,CAAA;;AAGA,EAAA,sBAAuBI,KAAK,CAACC,aAAN,CAAoB,KAApB,EAA2B;AAChDC,IAAAA,SAAS,YAAKT,aAAL,EAAA,QAAA,CAAA;AADuC,GAA3B,iBAEJO,KAAK,CAACC,aAAN,CAAoB,KAApB,EAA2B;AAC5CC,IAAAA,SAAS,YAAKT,aAAL,EAAA,QAAA,CAAA;AADmC,GAA3B,EAEhB,CAAAE,UAAU,KAAA,IAAV,IAAAA,UAAU,KAAV,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,UAAU,CAAEQ,MAAZ,MAAuB,CAAvB,GAA2BC,WAAW,CAACT,UAAU,CAAC,CAAD,CAAX,CAAtC,kBAAwEK,KAAK,CAACC,aAAN,CAAoBI,KAAK,CAACC,KAA1B,EAAiC;AAC1GC,IAAAA,OAAO,EAAE,gBADiG;AAE1GC,IAAAA,IAAI,EAAE,OAFoG;AAG1GC,IAAAA,KAAK,EAAEf,IAHmG;AAI1GgB,IAAAA,QAAQ,EAAEZ,YAAAA;GAJ+D,EAKxEa,MAAM,CAACC,IAAP,CAAYR,WAAZ,CAAyBS,CAAAA,GAAzB,CAA6B,UAACC,GAAD,EAAA;IAAA,sBAAyBd,KAAK,CAACC,aAAN,CAAoBI,KAAK,CAACU,MAA1B,EAAkC;AACzFD,MAAAA,GAAG,EAAHA,GADyF;AAEzFL,MAAAA,KAAK,EAAEK,GAAAA;AAFkF,KAAlC,EAGtDV,WAAW,CAACU,GAAD,CAH2C,CAAzB,CAAA;AAAA,GAA7B,CALwE,CAFxD,CAFI,EAYEjB,QAAQ,kBAAmBG,KAAK,CAACC,aAAN,CAAoB,MAApB,EAA4B;AAC9Ee,IAAAA,IAAI,EAAE,QADwE;AAE9Ed,IAAAA,SAAS,EAAEe,UAAU,CAAA,EAAA,CAAA,MAAA,CAAIxB,aAAJ,EAAA,QAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAA8BA,aAA9B,EAFyD,SAAA,CAAA,CAAA;AAG9EyB,IAAAA,OAAO,EAAEnB,gBAAAA;AAHqE,GAA5B,iBAIjCC,KAAK,CAACC,aAAN,CAAoBkB,SAApB,EAA+B,IAA/B,CAJiC,CAAnB,GAI0B,IAhBpC,CAAvB,CAAA;AAiBD,CAtBD,CAAA;;AAuBA,kBAAA,aAAenB,KAAK,CAACoB,IAAN,CAAW7B,MAAX,CAAf;;;;"}