{"version":3,"file":"Addon.js","sources":["../../src/addon/Addon.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../_util/useConfig';\n\nexport interface AddonProps extends React.HTMLAttributes<HTMLDivElement> {\n  prepend?: React.ReactNode;\n  append?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\nconst renderAddon = (type, classPrefix, Content) => {\n  let result: React.ReactNode;\n\n  if (typeof Content === 'function') {\n    result = <Content />;\n  } else if (typeof Content !== 'undefined') {\n    result = Content;\n  }\n\n  if (result || typeof result === 'number') {\n    result = <span className={`${classPrefix}-addon__${type}`}>{result}</span>;\n  }\n\n  return result;\n};\n\nconst Addon = forwardRef((props: AddonProps, ref: React.Ref<HTMLDivElement>) => {\n  const { classPrefix } = useConfig();\n  const { prepend, append, children, className, style, ...wrapperProps } = props;\n\n  function renderChildren() {\n    return React.Children.map(children, (child) => {\n      if (!child) return null;\n      if (React.isValidElement(child)) {\n        return React.cloneElement(child, { ...wrapperProps });\n      }\n      return child;\n    });\n  }\n\n  return (\n    <div\n      ref={ref}\n      style={style}\n      className={classNames(className, `${classPrefix}-addon`, {\n        [`${classPrefix}-addon--prepend`]: !!prepend,\n        [`${classPrefix}-addon--append`]: !!append,\n      })}\n    >\n      {renderAddon('prepend', classPrefix, prepend)}\n      {renderChildren()}\n      {renderAddon('append', classPrefix, append)}\n    </div>\n  );\n});\n\nAddon.displayName = 'Addon';\n\nexport default Addon;\n"],"names":["renderAddon","type","classPrefix","Content","result","React","createElement","className","Addon","forwardRef","props","ref","useConfig","prepend","append","children","style","wrapperProps","renderChildren","Children","map","child","isValidElement","cloneElement","classNames","displayName"],"mappings":"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"}