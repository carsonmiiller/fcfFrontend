/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import React, { forwardRef, useRef, useMemo, useImperativeHandle } from 'react';
import { p as pick_1 } from '../_chunks/dep-14dc871a.js';
import classNames from 'classnames';
import { Loading } from '../loading/index.js';
import TBody, { extendTableProps } from './TBody.js';
import { Affix } from '../affix/index.js';
import { ROW_LISTENERS } from './TR.js';
import THead from './THead.js';
import TFoot from './TFoot.js';
import useTableHeader from './hooks/useTableHeader.js';
import useFixed from './hooks/useFixed.js';
import usePagination from './hooks/usePagination.js';
import useStyle, { formatCSSUnit } from './hooks/useStyle.js';
import useClassName from './hooks/useClassName.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-084711a9.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-863396c0.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-e8f6f682.js';
import '../_chunks/dep-d8cdbac1.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-b9ff0943.js';
import '../_chunks/dep-3cff266a.js';
import '../_chunks/dep-43a6fda3.js';
import '../loading/Loading.js';
import '../_chunks/dep-744640f5.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-60c49e74.js';
import '../_util/easing.js';
import '../_util/useConfig.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-8ff4a741.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import './style/css.js';
import '../loading/type.js';
import '../_chunks/dep-9be29560.js';
import '../_chunks/dep-0db6b692.js';
import '../_chunks/dep-6d2697ef.js';
import '../_chunks/dep-42701b6c.js';
import '../_chunks/dep-71b3c60f.js';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../affix/Affix.js';
import '../affix/defaultProps.js';
import '../affix/type.js';
import './utils.js';
import './Ellipsis.js';
import '../_chunks/dep-0a541e21.js';
import '../_chunks/dep-5ed520e8.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../_util/composeRefs.js';
import '../popup/hooks/useTriggerProps.js';
import '../_util/useClickOutside.js';
import '../popup/utils/getTransitionParams.js';
import '../_util/useMutationObserver.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/type.js';
import './hooks/useLazyLoad.js';
import '../_common/js/utils/observe.js';
import './hooks/useMultiHeader.js';
import '../_common/js/log/index.js';
import '../_common/js/log/log.js';
import '../_common/js/utils/getScrollbarWidth.js';
import '../_chunks/dep-bd2639ad.js';
import '../pagination/index.js';
import '../pagination/Pagination.js';
import '../_chunks/dep-5d7b6fd8.js';
import '../_chunks/dep-089519d1.js';
import '../_chunks/dep-f459ac73.js';
import '../_chunks/dep-0e5e855a.js';
import '../select/index.js';
import '../select/base/Select.js';
import '../tag/index.js';
import '../tag/Tag.js';
import 'tdesign-icons-react';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../tag/CheckTag.js';
import '../tag/defaultProps.js';
import '../tag/type.js';
import '../select/util/helper.js';
import '../select/base/OptionGroup.js';
import '../select/defaultProps.js';
import '../select/base/Option.js';
import '../_chunks/dep-1feb6aff.js';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../common/FakeArrow.js';
import '../select-input/index.js';
import '../select-input/SelectInput.js';
import '../select-input/useSingle.js';
import '../input/index.js';
import '../input/Input.js';
import '../_util/helper.js';
import '../input/InputGroup.js';
import '../input/defaultProps.js';
import '../input/type.js';
import '../select-input/useMultiple.js';
import '../tag-input/index.js';
import '../tag-input/TagInput.js';
import '../_util/useDragSorter.js';
import '../tag-input/useTagScroll.js';
import '../tag-input/useTagList.js';
import 'lodash';
import '../tag-input/useHover.js';
import '../tag-input/defaultProps.js';
import '../tag-input/type.js';
import '../select-input/useOverlayStyle.js';
import '../select-input/defaultProps.js';
import '../select-input/type.js';
import '../select/base/PopupContent.js';
import '../select/type.js';
import '../input-number/index.js';
import '../input-number/InputNumber.js';
import '../_util/useCommonClassName.js';
import '../_util/useUpdateEffect.js';
import '../_util/useLayoutEffect.js';
import '../input-number/StepHandler.js';
import '../button/index.js';
import '../button/Button.js';
import '../button/defaultProps.js';
import '../button/type.js';
import '../input-number/utils/numberUtils.js';
import '../input-number/defaultProps.js';
import '../input-number/type.js';
import '../pagination/hooks/useBoundaryJumper.js';
import '../pagination/hooks/usePrevNextJumper.js';
import '../pagination/hooks/usePageNumber.js';
import '../pagination/hooks/useTotal.js';
import '../pagination/validators.js';
import '../pagination/defaultProps.js';
import '../pagination/type.js';
import '../hooks/useCommonClassName.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BASE_TABLE_EVENTS = ["page-change", "cell-click", "scroll", "scrollX", "scrollY"];
var BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map(function (t) {
  return "row-".concat(t);
}).concat(BASE_TABLE_EVENTS);
var BaseTable = /*#__PURE__*/forwardRef(function (props, ref) {
  var _tableClasses$concat, _tableContentRef$curr;

  var tableLayout = props.tableLayout,
      height = props.height,
      data = props.data,
      columns = props.columns,
      style = props.style;
  var tableRef = useRef();
  var tableElmRef = useRef();

  var _useClassName = useClassName(),
      tableLayoutClasses = _useClassName.tableLayoutClasses,
      tableBaseClass = _useClassName.tableBaseClass,
      tableColFixedClasses = _useClassName.tableColFixedClasses;

  var _useStyle = useStyle(props),
      tableClasses = _useStyle.tableClasses,
      tableContentStyles = _useStyle.tableContentStyles,
      tableElementStyles = _useStyle.tableElementStyles;

  var _useFixed = useFixed(props),
      affixHeaderRef = _useFixed.affixHeaderRef,
      scrollbarWidth = _useFixed.scrollbarWidth,
      tableWidth = _useFixed.tableWidth,
      tableContentRef = _useFixed.tableContentRef,
      isFixedHeader = _useFixed.isFixedHeader,
      isWidthOverflow = _useFixed.isWidthOverflow,
      isFixedColumn = _useFixed.isFixedColumn,
      thWidthList = _useFixed.thWidthList,
      showColumnShadow = _useFixed.showColumnShadow,
      showAffixHeader = _useFixed.showAffixHeader,
      rowAndColFixedPosition = _useFixed.rowAndColFixedPosition,
      onTableContentScroll = _useFixed.onTableContentScroll,
      updateHeaderScroll = _useFixed.updateHeaderScroll;

  var _useTableHeader = useTableHeader({
    columns: props.columns
  }),
      isMultipleHeader = _useTableHeader.isMultipleHeader,
      spansAndLeafNodes = _useTableHeader.spansAndLeafNodes,
      thList = _useTableHeader.thList;

  var _usePagination = usePagination(props),
      dataSource = _usePagination.dataSource,
      isPaginateData = _usePagination.isPaginateData,
      renderPagination = _usePagination.renderPagination;

  var dynamicBaseTableClasses = classNames(tableClasses.concat((_tableClasses$concat = {}, _defineProperty(_tableClasses$concat, tableBaseClass.headerFixed, isFixedHeader), _defineProperty(_tableClasses$concat, tableBaseClass.columnFixed, isFixedColumn), _defineProperty(_tableClasses$concat, tableBaseClass.widthOverflow, isWidthOverflow), _defineProperty(_tableClasses$concat, tableBaseClass.multipleHeader, isMultipleHeader), _defineProperty(_tableClasses$concat, tableColFixedClasses.leftShadow, showColumnShadow.left), _defineProperty(_tableClasses$concat, tableColFixedClasses.rightShadow, showColumnShadow.right), _tableClasses$concat)));
  var tableElmClasses = classNames([[tableLayoutClasses[tableLayout || "fixed"]], _defineProperty({}, tableBaseClass.fullHeight, height)]);
  var showRightDivider = useMemo(function () {
    return props.bordered && isFixedHeader && (isMultipleHeader && isWidthOverflow || !isMultipleHeader);
  }, [isFixedHeader, isMultipleHeader, isWidthOverflow, props.bordered]);
  useImperativeHandle(ref, function () {
    return {
      tableElement: tableRef.current,
      tableHtmlElement: tableElmRef.current,
      tableContentElement: tableContentRef.current
    };
  });

  var onFixedChange = function onFixedChange() {
    var timer = setTimeout(function () {
      updateHeaderScroll();
      clearTimeout(timer);
    }, 0);
  };

  var onInnerScroll = onTableContentScroll;
  var newData = isPaginateData ? dataSource : data;
  var defaultColWidth = props.tableLayout === "fixed" && isWidthOverflow ? "100px" : void 0;
  var colgroup = /* @__PURE__ */React.createElement("colgroup", null, ((spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns).map(function (col, index) {
    return /* @__PURE__ */React.createElement("col", {
      key: col.colKey || index,
      style: {
        width: formatCSSUnit(col.width) || defaultColWidth
      }
    });
  }));
  var affixedHeader = Boolean(props.headerAffixedTop && tableWidth) && /* @__PURE__ */React.createElement("div", {
    ref: affixHeaderRef,
    style: {
      width: "".concat(tableWidth, "px"),
      opacity: Number(showAffixHeader)
    },
    className: classNames(_defineProperty({}, tableBaseClass.affixedHeaderElm, props.headerAffixedTop))
  }, /* @__PURE__ */React.createElement("table", {
    className: classNames(tableElmClasses),
    style: _objectSpread(_objectSpread({}, tableElementStyles), {}, {
      width: "".concat(tableWidth, "px")
    })
  }, colgroup, /* @__PURE__ */React.createElement(THead, {
    isFixedHeader: isFixedHeader,
    rowAndColFixedPosition: rowAndColFixedPosition,
    isMultipleHeader: isMultipleHeader,
    bordered: props.bordered,
    spansAndLeafNodes: spansAndLeafNodes,
    thList: thList,
    thWidthList: thWidthList
  })));

  var tableBodyProps = _objectSpread({
    rowAndColFixedPosition: rowAndColFixedPosition,
    showColumnShadow: showColumnShadow,
    data: newData,
    columns: spansAndLeafNodes.leafColumns,
    scroll: props.scroll,
    tableElm: tableRef.current,
    tableContentElm: tableContentRef.current,
    tableWidth: tableWidth,
    isWidthOverflow: isWidthOverflow,
    rowKey: props.rowKey || "id",
    renderExpandedRow: props.renderExpandedRow
  }, pick_1(props, extendTableProps));

  var tableContent = /* @__PURE__ */React.createElement("div", {
    ref: tableContentRef,
    className: tableBaseClass.content,
    style: tableContentStyles,
    onScroll: onInnerScroll
  }, /* @__PURE__ */React.createElement("table", {
    ref: tableElmRef,
    className: classNames(tableElmClasses),
    style: tableElementStyles
  }, colgroup, /* @__PURE__ */React.createElement(THead, {
    isFixedHeader: isFixedHeader,
    rowAndColFixedPosition: rowAndColFixedPosition,
    isMultipleHeader: isMultipleHeader,
    bordered: props.bordered,
    spansAndLeafNodes: spansAndLeafNodes,
    thList: thList
  }), /* @__PURE__ */React.createElement(TBody, _objectSpread({}, tableBodyProps)), /* @__PURE__ */React.createElement(TFoot, {
    rowKey: props.rowKey,
    isFixedHeader: isFixedHeader,
    rowAndColFixedPosition: rowAndColFixedPosition,
    footData: props.footData,
    columns: columns,
    rowAttributes: props.rowAttributes,
    rowClassName: props.rowClassName
  })));
  var loading = props.loading,
      loadingProps = props.loadingProps;
  var customLoadingText = loading;
  var loadingContent = loading !== void 0 && /* @__PURE__ */React.createElement(Loading, _objectSpread({
    loading: !!loading,
    text: customLoadingText,
    attach: function attach() {
      return tableRef.current;
    },
    showOverlay: true
  }, loadingProps));
  var topContent = props.topContent,
      bottomContent = props.bottomContent;
  return /* @__PURE__ */React.createElement("div", {
    ref: tableRef,
    className: classNames(dynamicBaseTableClasses),
    style: _objectSpread({
      position: "relative"
    }, style)
  }, !!topContent && /* @__PURE__ */React.createElement("div", {
    className: tableBaseClass.topContent
  }, topContent), !!props.headerAffixedTop && (props.headerAffixedTop ? /* @__PURE__ */React.createElement(Affix, _objectSpread(_objectSpread({
    offsetTop: 0
  }, props.headerAffixProps), {}, {
    onFixedChange: onFixedChange
  }), affixedHeader) : isFixedHeader && affixedHeader), tableContent, loadingContent, showRightDivider && /* @__PURE__ */React.createElement("div", {
    className: tableBaseClass.scrollbarDivider,
    style: {
      right: "".concat(scrollbarWidth, "px"),
      height: "".concat((_tableContentRef$curr = tableContentRef.current) === null || _tableContentRef$curr === void 0 ? void 0 : _tableContentRef$curr.offsetHeight, "px")
    }
  }), !!bottomContent && /* @__PURE__ */React.createElement("div", {
    className: tableBaseClass.bottomContent
  }, bottomContent), renderPagination());
});
BaseTable.displayName = "BaseTable";

export { BASE_TABLE_ALL_EVENTS, BASE_TABLE_EVENTS, BaseTable as default };
//# sourceMappingURL=BaseTable.js.map
