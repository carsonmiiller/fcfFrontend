{"version":3,"file":"useTableHeader.js","sources":["../../../src/table/hooks/useTableHeader.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport classNames from 'classnames';\nimport { BaseTableCol, PrimaryTableCol, TableRowData, TdBaseTableProps } from '../type';\nimport { TableColumns, getThRowspanAndColspan, getThList } from './useMultiHeader';\nimport useClassName from './useClassName';\nimport TEllipsis from '../Ellipsis';\n\n// 渲染表头的通用方法\nexport function renderTitle(col: TableColumns[0], index: number) {\n  const params = { col, colIndex: index };\n  if (isFunction(col.title)) {\n    return col.title(params);\n  }\n  if (isFunction(col.render)) {\n    return col.render({ ...params, row: {}, rowIndex: -1, type: 'title' });\n  }\n  return col.title;\n}\n\nexport interface UseTableHeaderParams {\n  columns: TdBaseTableProps['columns'];\n}\n\nexport default function useTableHeader({ columns }: UseTableHeaderParams) {\n  const { tableSortClasses, tableFilterClasses } = useClassName();\n  // 一次性获取 colspan 和 rowspan 可以避免其他数据更新导致的重复计算\n  const spansAndLeafNodes = useMemo(() => getThRowspanAndColspan(columns), [columns]);\n  // 表头二维数据\n  const thList = useMemo(() => getThList(columns), [columns]);\n  const isMultipleHeader = useMemo(() => thList.length > 1, [thList]);\n\n  const renderTitleWidthIcon = (\n    [title, sortIcon, filterIcon]: ReactNode[],\n    col: PrimaryTableCol<TableRowData>,\n    colIndex: number,\n    ellipsisTitle: BaseTableCol['ellipsisTitle'],\n    attach: HTMLElement,\n  ) => {\n    const classes = {\n      [tableSortClasses.sortable]: !!sortIcon,\n      [tableFilterClasses.filterable]: !!filterIcon,\n    };\n    const content = isFunction(ellipsisTitle) ? ellipsisTitle({ col, colIndex }) : undefined;\n    return (\n      <div className={classNames(classes)}>\n        <div className={tableSortClasses.title}>\n          {col.ellipsis && ellipsisTitle !== false && ellipsisTitle !== null ? (\n            <TEllipsis\n              placement=\"bottom-right\"\n              attach={attach ? () => attach : undefined}\n              popupContent={content}\n              popupProps={typeof ellipsisTitle === 'object' ? ellipsisTitle : undefined}\n            >\n              {title}\n            </TEllipsis>\n          ) : (\n            <div>{title}</div>\n          )}\n          {Boolean(sortIcon || filterIcon) && (\n            <div className={tableFilterClasses.iconWrap}>\n              {sortIcon}\n              {filterIcon}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    thList,\n    isMultipleHeader,\n    spansAndLeafNodes,\n    renderTitleWidthIcon,\n  };\n}\n"],"names":["renderTitle","col","index","params","colIndex","isFunction","title","render","row","rowIndex","type","useTableHeader","columns","useClassName","tableSortClasses","tableFilterClasses","spansAndLeafNodes","useMemo","getThRowspanAndColspan","thList","getThList","isMultipleHeader","length","renderTitleWidthIcon","ellipsisTitle","attach","sortIcon","filterIcon","classes","sortable","filterable","content","React","createElement","className","classNames","ellipsis","TEllipsis","placement","popupContent","popupProps","Boolean","iconWrap"],"mappings":"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"}