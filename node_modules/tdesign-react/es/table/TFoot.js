/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import React, { useRef } from 'react';
import { i as isFunction_1 } from '../_chunks/dep-531703d1.js';
import classNames from 'classnames';
import { g as get_1 } from '../_chunks/dep-71b3c60f.js';
import { formatRowAttributes, formatRowClassNames } from './utils.js';
import { getColumnFixedStyles } from './hooks/useFixed.js';
import useClassName from './hooks/useClassName.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-084711a9.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-863396c0.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-e8f6f682.js';
import '../_chunks/dep-744640f5.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_common/js/log/index.js';
import '../_common/js/log/log.js';
import '../_common/js/utils/getScrollbarWidth.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-60c49e74.js';
import '../_util/easing.js';
import '../_util/useConfig.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function TFoot(props) {
  var footData = props.footData,
      columns = props.columns;
  var tfooterRef = useRef();
  var classnames = useClassName();

  var renderTFootCell = function renderTFootCell(p) {
    var col = p.col,
        row = p.row;

    if (isFunction_1(col.foot)) {
      return col.foot(p);
    }

    return col.foot || get_1(row, col.colKey);
  };

  if (!footData || !footData.length || !columns) return null;
  var theadClasses = [classnames.tableFooterClasses.footer, _defineProperty({}, classnames.tableFooterClasses.fixed, props.isFixedHeader)];
  return /* @__PURE__ */React.createElement("tfoot", {
    ref: tfooterRef,
    className: classNames(theadClasses)
  }, footData.map(function (row, rowIndex) {
    var trAttributes = formatRowAttributes(props.rowAttributes, {
      row: row,
      rowIndex: rowIndex,
      type: "foot"
    });
    var customClasses = formatRowClassNames(props.rowClassName, {
      row: row,
      rowIndex: rowIndex,
      type: "foot"
    }, props.rowKey || "id");
    return /* @__PURE__ */React.createElement("tr", _objectSpread(_objectSpread({
      key: rowIndex
    }, trAttributes), {}, {
      className: classNames(customClasses)
    }), columns.map(function (col, colIndex) {
      var tdStyles = getColumnFixedStyles(col, colIndex, props.rowAndColFixedPosition, classnames.tableColFixedClasses);
      return /* @__PURE__ */React.createElement("td", {
        key: col.colKey,
        className: classNames(tdStyles.classes),
        style: tdStyles.style
      }, renderTFootCell({
        row: row,
        rowIndex: rowIndex,
        col: col,
        colIndex: colIndex
      }));
    }));
  }));
}

export { TFoot as default };
//# sourceMappingURL=TFoot.js.map
