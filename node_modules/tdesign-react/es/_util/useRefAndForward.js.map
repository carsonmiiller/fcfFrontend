{"version":3,"file":"useRefAndForward.js","sources":["../../src/_util/useRefAndForward.ts"],"sourcesContent":["import { Ref, useRef } from 'react';\n\nexport default function useRefAndForward<T>(initialValue: T, forwardedRef: Ref<T>) {\n  const ref = useRef(initialValue);\n\n  const forward = (instance: T) => {\n    ref.current = instance;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(instance);\n    } else if (forwardedRef) {\n      (forwardedRef as any).current = instance; // eslint-disable-line no-param-reassign\n    }\n  };\n\n  return [ref, forward] as [typeof ref, typeof forward];\n}\n"],"names":["useRefAndForward","initialValue","forwardedRef","ref","useRef","forward","instance","current"],"mappings":";;;;;;;;AACe,SAASA,gBAAT,CAA0BC,YAA1B,EAAwCC,YAAxC,EAAsD;AACnE,EAAA,IAAMC,GAAG,GAAGC,MAAM,CAACH,YAAD,CAAlB,CAAA;;AACA,EAAA,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;IAC5BH,GAAG,CAACI,OAAJ,GAAcD,QAAd,CAAA;;AACA,IAAA,IAAI,OAAOJ,YAAP,KAAwB,UAA5B,EAAwC;MACtCA,YAAY,CAACI,QAAD,CAAZ,CAAA;KADF,MAEO,IAAIJ,YAAJ,EAAkB;MACvBA,YAAY,CAACK,OAAb,GAAuBD,QAAvB,CAAA;AACD,KAAA;GANH,CAAA;;AAQA,EAAA,OAAO,CAACH,GAAD,EAAME,OAAN,CAAP,CAAA;AACD;;;;"}