import React from 'react';
import { StyledProps } from '../../common';
import { TdDateRangePickerProps, DateValue } from '../type';
import type { TdTimePickerProps } from '../../time-picker';
export interface DateRangePickerPanelProps extends TdDateRangePickerProps, StyledProps {
    hoverValue?: string[];
    activeIndex?: number;
    isFirstValueSelected?: boolean;
    year?: number[];
    month?: number[];
    timeValue?: string[];
    onClick?: (context: {
        e: React.MouseEvent<HTMLDivElement>;
    }) => void;
    onCellClick?: (date: Date, context: {
        e: React.MouseEvent<HTMLDivElement>;
        partial: 'start' | 'end';
    }) => void;
    onCellMouseEnter?: (date: Date, context: {
        partial: 'start' | 'end';
    }) => void;
    onCellMouseLeave?: (context: {
        e: React.MouseEvent<HTMLDivElement>;
    }) => void;
    onJumperClick?: (flag: number, context: {
        partial: 'start' | 'end';
    }) => void;
    onConfirmClick?: (context: {
        e: React.MouseEvent<HTMLButtonElement>;
    }) => void;
    onPresetClick?: (preset: DateValue | (() => DateValue), context: {
        e: React.MouseEventHandler<HTMLButtonElement>;
    }) => void;
    onYearChange?: (year: number, context: {
        partial: 'start' | 'end';
    }) => void;
    onMonthChange?: (month: number, context: {
        partial: 'start' | 'end';
    }) => void;
    onTimePickerChange?: TdTimePickerProps['onChange'];
}
declare const DateRangePickerPanel: {
    (props: DateRangePickerPanelProps): JSX.Element;
    displayName: string;
    defaultProps: {
        mode: string;
        enableTimePicker: boolean;
        presetsPlacement: string;
    };
};
export default DateRangePickerPanel;
