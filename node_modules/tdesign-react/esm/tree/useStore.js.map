{"version":3,"file":"useStore.js","sources":["../../src/tree/useStore.ts"],"sourcesContent":["import { useRef } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\n// import isEqual from 'lodash/isEqual';\nimport useUpdateEffect from '../_util/useUpdateEffect';\n// import { TreeOptionData } from '../common';\nimport TreeStore from '../_common/js/tree/tree-store';\n// import TreeNode from '../_common/js/tree/tree-node';\nimport { usePersistFn } from '../_util/usePersistFn';\nimport { TdTreeProps } from './type';\nimport { TypeEventState } from './interface';\n\nexport function useStore(props: TdTreeProps, refresh: () => void): TreeStore {\n  const storeRef = useRef<TreeStore>();\n\n  const {\n    data,\n    keys,\n    expandAll,\n    expandParent,\n    expanded,\n    expandLevel,\n    expandMutex,\n    activable,\n    activeMultiple,\n    actived,\n    disabled,\n    checkable,\n    value,\n    checkStrictly,\n    load,\n    lazy,\n    valueMode,\n    filter,\n    // onDataChange,\n    onLoad,\n    allowFoldNodeOnFilter = false,\n  } = props;\n\n  // 传入 TreeStore 中调用的，但是每次都需要使用最新的值，所以使用 usePersistFn\n  const handleUpdate = usePersistFn(() => {\n    refresh();\n  });\n\n  // const handleReflow = usePersistFn(() => {\n  //   if (!onDataChange) {\n  //     return;\n  //   }\n\n  //   const nodes = storeRef.current.getNodes();\n\n  //   const rootNodes = nodes.filter((v) => !v.parent);\n\n  //   const getChild = (list: TreeNode[] | boolean) => {\n  //     if (Array.isArray(list) && list.length > 0) {\n  //       return list.map((v) => {\n  //         const nodeData: TreeOptionData = v.data;\n  //         if (Array.isArray(v.children) && v.children.length > 0) {\n  //           nodeData.children = getChild(v.children);\n  //         }\n  //         return nodeData;\n  //       });\n  //     }\n  //   };\n\n  //   const newData = getChild(rootNodes);\n\n  //   if (!isEqual(newData, data)) {\n  //     onDataChange?.(newData);\n  //   }\n  // });\n\n  const getExpandedArr = (arr: TdTreeProps['expanded'], store: TreeStore) => {\n    const expandedMap = new Map();\n    arr.forEach((val) => {\n      expandedMap.set(val, true);\n      if (expandParent) {\n        const node = store.getNode(val);\n        node.getParents().forEach((tn) => {\n          expandedMap.set(tn.value, true);\n        });\n      }\n    });\n    return Array.from(expandedMap.keys());\n  };\n\n  const createStore = () => {\n    const store = new TreeStore({\n      keys,\n      activable,\n      activeMultiple,\n      checkable,\n      checkStrictly,\n      expandAll,\n      expandLevel,\n      expandMutex,\n      expandParent,\n      disabled,\n      load,\n      lazy,\n      valueMode,\n      filter,\n      onLoad: (info: TypeEventState) => {\n        const { node } = info;\n        onLoad?.({\n          node: node.getModel(),\n        });\n      },\n      onUpdate: handleUpdate,\n      allowFoldNodeOnFilter,\n      // onReflow: handleReflow,\n    });\n\n    // 初始化 store 的节点排列 + 状态\n    let list = cloneDeep(data);\n    if (!Array.isArray(list)) {\n      list = [];\n    }\n\n    store.append(list);\n\n    // 刷新节点，必须在配置选中之前执行\n    // 这样选中态联动判断才能找到父节点\n    store.refreshNodes();\n\n    // 初始化选中状态\n    if (Array.isArray(value)) {\n      store.setChecked(value);\n    }\n\n    // 初始化展开状态\n    if (Array.isArray(expanded)) {\n      const expandedArr = getExpandedArr(expanded, store);\n      store.setExpanded(expandedArr);\n    }\n\n    // 初始化激活状态\n    if (Array.isArray(actived)) {\n      store.setActived(actived);\n    }\n\n    // refresh();\n\n    store.refreshNodes();\n    return store;\n  };\n\n  if (!storeRef.current) {\n    storeRef.current = createStore();\n  }\n\n  /* ======== 由 props 引发的 store 更新 ======= */\n  const store = storeRef.current;\n\n  useUpdateEffect(() => {\n    if (data && Array.isArray(data)) {\n      store.removeAll();\n      store.append(data);\n    }\n  }, [data, store]);\n\n  useUpdateEffect(() => {\n    store.setConfig({\n      keys,\n      expandAll,\n      expandLevel,\n      expandMutex,\n      expandParent,\n      activable,\n      activeMultiple,\n      disabled,\n      checkable,\n      checkStrictly,\n      load,\n      lazy,\n      valueMode,\n    });\n\n    store.refreshState();\n  }, [\n    activable,\n    activeMultiple,\n    checkStrictly,\n    checkable,\n    disabled,\n    expandAll,\n    expandLevel,\n    expandMutex,\n    expandParent,\n    keys,\n    lazy,\n    load,\n    store,\n    valueMode,\n  ]);\n\n  useUpdateEffect(() => {\n    if (Array.isArray(value)) {\n      store.replaceChecked(value);\n    }\n  }, [store, value]);\n\n  useUpdateEffect(() => {\n    if (Array.isArray(expanded)) {\n      const expandedArr = getExpandedArr(expanded, store);\n      store.replaceExpanded(expandedArr);\n    }\n  }, [expanded, store]);\n\n  useUpdateEffect(() => {\n    if (Array.isArray(actived)) {\n      store.replaceActived(actived);\n    }\n  }, [actived, store]);\n\n  useUpdateEffect(() => {\n    store.setConfig({\n      filter,\n    });\n    store.updateAll();\n  }, [filter, store]);\n\n  return storeRef.current;\n}\n"],"names":["useStore","props","refresh","storeRef","useRef","data","keys","expandAll","expandParent","expanded","expandLevel","expandMutex","activable","activeMultiple","actived","disabled","checkable","value","checkStrictly","load","lazy","valueMode","filter","onLoad","allowFoldNodeOnFilter","handleUpdate","usePersistFn","getExpandedArr","arr","store2","expandedMap","Map","forEach","val","set","node","getNode","getParents","tn","Array","from","createStore","TreeStore","info","getModel","onUpdate","list","cloneDeep","isArray","append","refreshNodes","setChecked","expandedArr","setExpanded","setActived","current","store","useUpdateEffect","removeAll","setConfig","refreshState","replaceChecked","replaceExpanded","replaceActived","updateAll"],"mappings":"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"}