/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import { _ as _slicedToArray } from '../_chunks/dep-744640f5.js';
import React, { useRef, useMemo } from 'react';
import { i as isObject_1 } from '../_chunks/dep-38424935.js';
import { p as pick_1 } from '../_chunks/dep-14dc871a.js';
import classNames from 'classnames';
import { Input } from '../input/index.js';
import { Loading } from '../loading/index.js';
import useConfig from '../_util/useConfig.js';
import useControlled from '../hooks/useControlled.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-084711a9.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-863396c0.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-e8f6f682.js';
import '../_chunks/dep-d8cdbac1.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-b9ff0943.js';
import '../_chunks/dep-3cff266a.js';
import '../_chunks/dep-43a6fda3.js';
import '../input/Input.js';
import '../_chunks/dep-8ff4a741.js';
import 'tdesign-icons-react';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../_util/helper.js';
import '../_chunks/dep-9be29560.js';
import '../_chunks/dep-0db6b692.js';
import '../_chunks/dep-6d2697ef.js';
import '../_chunks/dep-42701b6c.js';
import '../input/InputGroup.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../input/defaultProps.js';
import '../_util/noop.js';
import '../input/style/index.js';
import '../input/type.js';
import '../loading/Loading.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-60c49e74.js';
import '../_util/easing.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/index.js';
import '../loading/type.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var COMMON_PROPERTIES = ["status", "clearable", "disabled", "label", "placeholder", "readonly", "suffix", "suffixIcon", "onPaste", "onEnter", "onMouseenter", "onMouseleave"];
var DEFAULT_KEYS = {
  label: "label",
  value: "value"
};

function getInputValue(value, keys) {
  var iKeys = keys || DEFAULT_KEYS;
  return isObject_1(value) ? value[iKeys.label] : value;
}

function useSingle(props) {
  var value = props.value,
      keys = props.keys,
      loading = props.loading,
      disabled = props.disabled;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var inputRef = useRef();

  var _useControlled = useControlled(props, "inputValue", props.onInputChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      inputValue = _useControlled2[0],
      setInputValue = _useControlled2[1];

  var showLoading = useMemo(function () {
    return !disabled && loading;
  }, [loading, disabled]);

  var commonInputProps = _objectSpread(_objectSpread({}, pick_1(props, COMMON_PROPERTIES)), {}, {
    suffixIcon: showLoading ? /* @__PURE__ */React.createElement(Loading, {
      loading: true,
      size: "small"
    }) : props.suffixIcon
  });

  var onInnerClear = function onInnerClear(context) {
    var _context$e, _props$onClear;

    context === null || context === void 0 ? void 0 : (_context$e = context.e) === null || _context$e === void 0 ? void 0 : _context$e.stopPropagation();
    (_props$onClear = props.onClear) === null || _props$onClear === void 0 ? void 0 : _props$onClear.call(props, context);
    setInputValue("", {
      trigger: "clear"
    });
  };

  var onInnerInputChange = function onInnerInputChange(value2, context) {
    if (props.allowInput) {
      setInputValue(value2, _objectSpread(_objectSpread({}, context), {}, {
        trigger: "input"
      }));
    }
  };

  var renderSelectSingle = function renderSelectSingle(popupVisible) {
    var _props$inputProps;

    var singleValueDisplay = !props.multiple ? props.valueDisplay : null;
    var displayedValue = popupVisible && props.allowInput ? inputValue : getInputValue(value, keys);
    return /* @__PURE__ */React.createElement(Input, _objectSpread(_objectSpread(_objectSpread({
      ref: inputRef
    }, commonInputProps), {}, {
      autoWidth: props.autoWidth,
      placeholder: singleValueDisplay ? "" : props.placeholder,
      value: singleValueDisplay ? void 0 : displayedValue,
      label: /* @__PURE__ */React.createElement(React.Fragment, null, props.label, singleValueDisplay),
      onChange: onInnerInputChange,
      readonly: !props.allowInput,
      onClear: onInnerClear,
      onBlur: function onBlur(val, context) {
        var _props$onBlur;

        (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, value, _objectSpread(_objectSpread({}, context), {}, {
          inputValue: val
        }));
      },
      onFocus: function onFocus(val, context) {
        var _props$onFocus;

        (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, value, _objectSpread(_objectSpread({}, context), {}, {
          inputValue: val
        }));
        !popupVisible && setInputValue(getInputValue(value, keys), _objectSpread(_objectSpread({}, context), {}, {
          trigger: "input"
        }));
      },
      onEnter: function onEnter(val, context) {
        var _props$onEnter;

        (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 ? void 0 : _props$onEnter.call(props, value, _objectSpread(_objectSpread({}, context), {}, {
          inputValue: val
        }));
      }
    }, props.inputProps), {}, {
      inputClass: classNames((_props$inputProps = props.inputProps) === null || _props$inputProps === void 0 ? void 0 : _props$inputProps.className, _defineProperty({}, "".concat(classPrefix, "-input--focused"), popupVisible))
    }));
  };

  return {
    inputRef: inputRef,
    commonInputProps: commonInputProps,
    onInnerClear: onInnerClear,
    renderSelectSingle: renderSelectSingle
  };
}

export { useSingle as default };
//# sourceMappingURL=useSingle.js.map
