{"version":3,"file":"Transfer.js","sources":["../../src/transfer/Transfer.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport difference from 'lodash/difference';\nimport classnames from 'classnames';\n\nimport { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-react';\nimport { TdTransferProps, DataOption, TransferValue, TransferListType } from './type';\nimport useConfig from '../_util/useConfig';\nimport Button from '../button';\nimport TransferList from './TransferList';\nimport { filterCheckedTreeNodes, getTargetNodes, getDefaultValue, getJSX, getLeafNodes } from './utils';\nimport { TNode, StyledProps } from '../common';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { transferDefaultProps } from './defaultProps';\n\nexport interface TransferProps extends TdTransferProps, StyledProps {\n  content?: Array<TNode>;\n}\n\ninterface StateInterface {\n  source: DataOption[];\n  target: DataOption[];\n}\n\ninterface CheckedInterface {\n  source: Array<TransferValue>;\n  target: Array<TransferValue>;\n}\n\nconst Transfer: React.FunctionComponent<TransferProps> = (props) => {\n  const {\n    data,\n    search,\n    checked,\n    defaultChecked,\n    onCheckedChange,\n    value,\n    defaultValue,\n    onChange,\n    empty,\n    disabled,\n    pagination,\n    title,\n    operation,\n    footer,\n    transferItem,\n    content,\n    tree,\n  } = props;\n  const [state, setState] = useState<StateInterface>(() => ({\n    source: data.filter((item) => !defaultValue.includes(item.value)),\n    target: data.filter((item) => defaultValue.includes(item.value)),\n  }));\n  const [checkeds, setCheckeds] = useState<CheckedInterface>(() => ({\n    source: state.source\n      .filter((item) => !item.disabled && defaultChecked.includes(item.value))\n      .map((item) => item.value),\n    target: state.target\n      .filter((item) => !item.disabled && defaultChecked.includes(item.value))\n      .map((item) => item.value),\n  }));\n  const [searchState, setSearchState] = useState<{ source: string; target: string }>({ source: '', target: '' });\n\n  const isTargetControlled = 'value' in props;\n  const isCheckedControlled = 'checked' in props;\n\n  const { classPrefix } = useConfig();\n  const transferClassName = `${classPrefix}-transfer`;\n\n  const [local, t] = useLocaleReceiver('transfer');\n\n  const [sourceData, targetData] = useMemo(() => {\n    const { source, target } = state;\n    const { source: searchSource, target: searchTarget } = searchState;\n    return [\n      source.filter((item) => !searchSource || item.label.indexOf(searchState.source) > -1),\n      target.filter((item) => !searchTarget || item.label.indexOf(searchState.target) > -1),\n    ];\n  }, [searchState, state]);\n\n  const [SourceEmptyCmp, TargetEmptyCmp] = getDefaultValue(empty, t(local.empty)).map((item) => getJSX(item));\n  const [sourceDisable, targetDisable] = getDefaultValue(disabled, false);\n  const [sourcePagonation, targetPagonation] = getDefaultValue(pagination);\n  const [sourceTitle, targetTitle] = getDefaultValue(title).map((item) => getJSX(item));\n  const [leftOperation, rightOperation] = getDefaultValue(operation, [\n    () => <ChevronRightIcon />,\n    () => <ChevronLeftIcon />,\n  ]).map((item) => getJSX(item));\n  const [sourceFooter, targetFooter] = getDefaultValue(footer).map((item) => getJSX(item));\n  const [sourceTransferItem, targetTransferItem] = getDefaultValue(transferItem);\n  const [sourceContent, targetContent] = getDefaultValue(content);\n\n  const transformSource = () => {\n    const { source, target } = state;\n    const sourceCheckeds = source.filter((item) => checkeds.source.includes(item.value));\n    let newSource = difference(source, sourceCheckeds);\n    let newTarget = [...target, ...sourceCheckeds];\n    let newTargetValue = newTarget.map((t) => t.value);\n\n    // 树结构处理source/target节点数据\n    if (tree) {\n      newSource = filterCheckedTreeNodes(source, checkeds.source);\n      newTarget = getTargetNodes(newSource, data);\n      newTargetValue = getLeafNodes(newTarget).map((t) => t.value);\n    }\n    if (isTargetControlled) {\n      onChange?.(newTargetValue, {\n        type: 'source',\n        movedValue: sourceCheckeds.map((s) => s.value),\n      });\n    } else {\n      setState({ ...state, source: newSource, target: [...newTarget] });\n      setCheckeds({ ...checkeds, source: [] });\n    }\n  };\n  const transformTarget = () => {\n    const { source, target } = state;\n    const targetCheckeds = target.filter((item) => checkeds.target.includes(item.value));\n    let newSource = [...source, ...targetCheckeds];\n    let newTarget = difference(target, targetCheckeds);\n    let newTargetValue = newTarget.map((t) => t.value);\n\n    // 树结构处理source/target节点数据\n    if (tree) {\n      newTarget = filterCheckedTreeNodes(target, checkeds.target);\n      newSource = getTargetNodes(newTarget, data);\n      newTargetValue = getLeafNodes(newTarget).map((t) => t.value);\n    }\n    if (isTargetControlled) {\n      onChange?.(newTargetValue, {\n        type: 'target',\n        movedValue: targetCheckeds.map((s) => s.value),\n      });\n    } else {\n      setState({ ...state, source: newSource, target: newTarget });\n      setCheckeds({ ...checkeds, target: [] });\n    }\n  };\n\n  const OperationsCmp = () => {\n    const isSourceDisabled = sourceDisable || !checkeds.source.length;\n    const isTargetDisabled = targetDisable || !checkeds.target.length;\n\n    return (\n      <div className={`${transferClassName}__operations`}>\n        <Button\n          key={isSourceDisabled ? 'right-outline' : 'right-base'}\n          variant={isSourceDisabled ? 'outline' : 'base'}\n          disabled={isSourceDisabled}\n          onClick={transformSource}\n        >\n          {leftOperation}\n        </Button>\n        <Button\n          key={isSourceDisabled ? 'left-outline' : 'left-base'}\n          variant={isTargetDisabled ? 'outline' : 'base'}\n          disabled={isTargetDisabled}\n          onClick={transformTarget}\n        >\n          {rightOperation}\n        </Button>\n      </div>\n    );\n  };\n\n  const handleCheckChange = (value: Array<TransferValue>, type: TransferListType) => {\n    const { source: sourceChecked, target: targetChecked } = checkeds;\n    const inverseMap = { source: 'target', target: 'source' };\n    isCheckedControlled\n      ? onCheckedChange?.({\n          type,\n          checked: value.concat(checkeds[inverseMap[type]]),\n          sourceChecked,\n          targetChecked,\n        })\n      : setCheckeds({ ...checkeds, [type]: value });\n  };\n\n  // value 受控\n  useEffect(() => {\n    if (isTargetControlled && Array.isArray(value)) {\n      let newTarget = data.filter((item) => value.includes(item.value));\n      let newSource = difference(data, newTarget);\n      // 树结构处理source/target节点数据\n      if (tree) {\n        newSource = filterCheckedTreeNodes(data, value);\n        newTarget = getTargetNodes(newSource, data);\n      }\n      setState({ source: [...newSource], target: [...newTarget] });\n      setCheckeds({ source: [], target: [] });\n    }\n  }, [value, data, isTargetControlled, tree]);\n\n  // checked 受控\n  useEffect(() => {\n    const { source, target } = state;\n    if (isCheckedControlled && Array.isArray(checked)) {\n      const newSourceChecked = source\n        .filter((item) => !item.disabled && checked.includes(item.value))\n        .map((item) => item.value);\n      const newTargetChecked = target\n        .filter((item) => !item.disabled && checked.includes(item.value))\n        .map((item) => item.value);\n      setCheckeds({ source: newSourceChecked, target: newTargetChecked });\n    }\n  }, [checked, state, isCheckedControlled]);\n\n  return (\n    <div\n      className={classnames(transferClassName, {\n        [`${transferClassName}__search`]: search,\n        [`${transferClassName}__pagination`]: pagination,\n        [`${transferClassName}__footer`]: footer,\n        [`${transferClassName}--with-tree`]: tree,\n      })}\n    >\n      <TransferList\n        className={`${transferClassName}__list-source`}\n        data={sourceData}\n        search={search}\n        checked={checkeds.source}\n        empty={SourceEmptyCmp}\n        disabled={sourceDisable}\n        pagination={sourcePagonation}\n        title={sourceTitle}\n        footer={sourceFooter}\n        transferItem={sourceTransferItem}\n        content={sourceContent}\n        onCheckbox={(value) => handleCheckChange(value, 'source')}\n        onSearch={(val: string) => setSearchState({ ...searchState, source: val })}\n        tree={tree}\n      ></TransferList>\n      {OperationsCmp()}\n      <TransferList\n        className={`${transferClassName}__list-target`}\n        data={targetData}\n        search={search}\n        checked={checkeds.target}\n        empty={TargetEmptyCmp}\n        disabled={targetDisable}\n        pagination={targetPagonation}\n        title={targetTitle}\n        footer={targetFooter}\n        transferItem={targetTransferItem}\n        content={targetContent}\n        onCheckbox={(value) => handleCheckChange(value, 'target')}\n        onSearch={(val: string) => setSearchState({ ...searchState, target: val })}\n        tree={tree}\n      ></TransferList>\n    </div>\n  );\n};\n\nTransfer.displayName = 'Transfer';\nTransfer.defaultProps = transferDefaultProps;\n\nexport default Transfer;\n"],"names":["Transfer","props","data","search","checked","defaultChecked","onCheckedChange","value","defaultValue","onChange","empty","disabled","pagination","title","operation","footer","transferItem","content","tree","useState","source","filter","item","includes","target","state","setState","map","checkeds","setCheckeds","searchState","setSearchState","isTargetControlled","isCheckedControlled","useConfig","classPrefix","transferClassName","useLocaleReceiver","local","t","useMemo","searchSource","searchTarget","label","indexOf","sourceData","targetData","getDefaultValue","getJSX","SourceEmptyCmp","TargetEmptyCmp","sourceDisable","targetDisable","sourcePagonation","targetPagonation","sourceTitle","targetTitle","React","createElement","ChevronRightIcon","ChevronLeftIcon","leftOperation","rightOperation","sourceFooter","targetFooter","sourceTransferItem","targetTransferItem","sourceContent","targetContent","transformSource","sourceCheckeds","newSource","difference","newTarget","newTargetValue","t2","filterCheckedTreeNodes","getTargetNodes","getLeafNodes","type","movedValue","s","transformTarget","targetCheckeds","OperationsCmp","isSourceDisabled","length","isTargetDisabled","className","Button","key","variant","onClick","handleCheckChange","value2","sourceChecked","targetChecked","inverseMap","concat","useEffect","Array","isArray","newSourceChecked","newTargetChecked","classnames","TransferList","onCheckbox","onSearch","val","displayName","defaultProps","transferDefaultProps"],"mappings":"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"}