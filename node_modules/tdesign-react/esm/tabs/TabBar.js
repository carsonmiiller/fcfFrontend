/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import { _ as _slicedToArray } from '../_chunks/dep-744640f5.js';
import React, { useState, useEffect } from 'react';
import classNames from 'classnames';
import useConfig from '../_util/useConfig.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';

var TabBar = function TabBar(props) {
  var _classNames;

  var tabPosition = props.tabPosition,
      activeId = props.activeId,
      containerRef = props.containerRef;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useState = useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      barStyle = _useState2[0],
      setBarStyle = _useState2[1];

  var tabsClassPrefix = "".concat(classPrefix, "-tabs");

  var computeStyle = function computeStyle(_ref) {
    var tabPosition2 = _ref.tabPosition,
        activeId2 = _ref.activeId;
    var isHorizontal = ["bottom", "top"].includes(tabPosition2);
    var transformPosition = isHorizontal ? "translateX" : "translateY";
    var itemProp = isHorizontal ? "width" : "height";
    var barBorderProp = isHorizontal ? "width" : "height";
    var offset = 0;

    if (containerRef.current) {
      var itemsRef = containerRef.current.querySelectorAll(".t-tabs__nav-item");

      if (itemsRef.length - 1 >= activeId2) {
        itemsRef.forEach(function (item, itemIndex) {
          if (itemIndex < activeId2) {
            offset += Number(getComputedStyle(item)[itemProp].replace("px", ""));
          }
        });
        var computedItem = itemsRef[activeId2];

        if (!computedItem) {
          setBarStyle(_defineProperty({
            transform: "".concat(transformPosition, "(", 0, "px)")
          }, barBorderProp, 0));
          return;
        }

        var itemPropValue = getComputedStyle(computedItem)[itemProp];
        setBarStyle(_defineProperty({
          transform: "".concat(transformPosition, "(").concat(offset, "px)")
        }, barBorderProp, itemPropValue));
      }
    }
  };

  useEffect(function () {
    computeStyle({
      tabPosition: tabPosition,
      activeId: activeId
    });
  }, [tabPosition, activeId]);
  return /* @__PURE__ */React.createElement("div", {
    className: classNames((_classNames = {}, _defineProperty(_classNames, "".concat(tabsClassPrefix, "__bar"), true), _defineProperty(_classNames, "t-is-".concat(tabPosition), true), _classNames)),
    style: barStyle
  });
};

TabBar.displayName = "TabBar";

export { TabBar as default };
//# sourceMappingURL=TabBar.js.map
