/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import { _ as _slicedToArray } from '../_chunks/dep-744640f5.js';
import React, { useState, useEffect } from 'react';
import classNames from 'classnames';
import forwardRefWithStatics from '../_util/forwardRefWithStatics.js';
import TabNav from './TabNav.js';
import { useTabClass } from './useTabClass.js';
import TabPanel from './TabPanel.js';
import { tabsDefaultProps } from './defaultProps.js';
import '../_chunks/dep-0e5be0b2.js';
import 'hoist-non-react-statics';
import 'tdesign-icons-react';
import '../_chunks/dep-0a541e21.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-5ed520e8.js';
import '../_chunks/dep-863396c0.js';
import '../_chunks/dep-12718f01.js';
import '../_util/noop.js';
import './TabNavItem.js';
import '../_util/useRipple.js';
import '../_util/useConfig.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-60c49e74.js';
import '../_util/easing.js';
import './TabBar.js';
import '../_common/js/tabs/base.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Tabs = forwardRefWithStatics(function (props, ref) {
  var children = props.children,
      placement = props.placement,
      onRemove = props.onRemove,
      tabValue = props.value,
      onChange = props.onChange,
      className = props.className,
      style = props.style;
  var defaultValue = props.defaultValue;

  var _useTabClass = useTabClass(),
      tdTabsClassPrefix = _useTabClass.tdTabsClassPrefix,
      tdTabsClassGenerator = _useTabClass.tdTabsClassGenerator,
      tdClassGenerator = _useTabClass.tdClassGenerator;

  var itemList = React.Children.map(children, function (child) {
    if (child && child.type === TabPanel) {
      return child.props;
    }

    return null;
  });

  if (defaultValue === void 0 && Array.isArray(itemList) && itemList.length !== 0) {
    defaultValue = itemList[0].value;
  }

  var _useState = useState(defaultValue),
      _useState2 = _slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  useEffect(function () {
    tabValue !== void 0 && setValue(tabValue);
  }, [tabValue]);

  var handleChange = function handleChange(v) {
    if (tabValue === void 0) {
      setValue(v);
    }

    onChange === null || onChange === void 0 ? void 0 : onChange(v);
  };

  var handleClickTab = function handleClickTab(v) {
    if (tabValue === void 0) {
      setValue(v);
    }
  };

  var renderHeader = function renderHeader() {
    return /* @__PURE__ */React.createElement("div", {
      className: classNames(tdTabsClassGenerator("header"), tdClassGenerator("is-".concat(placement)))
    }, /* @__PURE__ */React.createElement(TabNav, _objectSpread(_objectSpread({}, props), {}, {
      activeValue: value,
      onRemove: onRemove,
      itemList: itemList,
      tabClick: handleClickTab,
      onChange: handleChange
    })));
  };

  return /* @__PURE__ */React.createElement("div", {
    ref: ref,
    className: classNames(tdTabsClassPrefix, className),
    style: style
  }, placement !== "bottom" ? renderHeader() : null, /* @__PURE__ */React.createElement("div", {
    className: classNames(tdTabsClassGenerator("content"), tdClassGenerator("is-".concat(placement)))
  }, React.Children.map(children, function (child) {
    if (child && child.type === TabPanel) {
      if (child.props.value === value) {
        return child;
      }

      if (child.props.destroyOnHide === false) {
        return /* @__PURE__ */React.createElement(TabPanel, {
          style: {
            display: "none"
          }
        }, child.props.children);
      }
    }

    return null;
  })), placement === "bottom" ? renderHeader() : null);
}, {
  TabPanel: TabPanel
});
Tabs.displayName = "Tabs";
Tabs.defaultProps = tabsDefaultProps;

export { Tabs as default };
//# sourceMappingURL=Tabs.js.map
