{"version":3,"file":"TBody.js","sources":["../../src/table/TBody.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport camelCase from 'lodash/camelCase';\nimport get from 'lodash/get';\nimport pick from 'lodash/pick';\nimport classNames from 'classnames';\nimport TR, { ROW_LISTENERS, TABLE_PROPS } from './TR';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { RowspanColspan, TableRowData, BaseTableCellParams } from './type';\nimport { BaseTableProps } from './interface';\nimport { RowAndColFixedPosition } from './hooks/useFixed';\nimport useClassName from './hooks/useClassName';\n\nexport const ROW_AND_TD_LISTENERS = ROW_LISTENERS.concat('cell-click');\nexport interface TableBodyProps extends BaseTableProps {\n  // 固定列 left/right 具体值\n  rowAndColFixedPosition?: RowAndColFixedPosition;\n  showColumnShadow?: { left: boolean; right: boolean };\n  tableElm?: HTMLDivElement;\n  tableContentElm?: HTMLDivElement;\n  tableWidth?: number;\n  isWidthOverflow?: boolean;\n\n  // 以下内容为虚拟滚动所需参数\n  translateY?: number;\n  scrollType?: string;\n  isVirtual?: boolean;\n  rowHeight?: number;\n  trs?: Map<number, object>;\n  bufferSize?: number;\n  handleRowMounted?: () => void;\n}\n\n// table 到 body 的相同属性\nexport const extendTableProps = [\n  'rowKey',\n  'rowClassName',\n  'rowAttributes',\n  'loading',\n  'empty',\n  'fixedRows',\n  'firstFullRow',\n  'lastFullRow',\n  'rowspanAndColspan',\n  'scroll',\n  'onCellClick',\n  'onPageChange',\n  'onRowClick',\n  'onRowDblclick',\n  'onRowMouseover',\n  'onRowMousedown',\n  'onRowMouseenter',\n  'onRowMouseleave',\n  'onRowMouseup',\n  'onScroll',\n  'onScrollX',\n  'onScrollY',\n];\n\nexport default function TBody(props: TableBodyProps) {\n  // 如果不是变量复用，没必要对每一个参数进行解构（解构过程需要单独的内存空间存储临时变量）\n  const { data, columns } = props;\n  const [global, t] = useLocaleReceiver('table');\n  const { tableFullRowClasses, tableBaseClass } = useClassName();\n\n  const tbodyClasses = useMemo(() => [tableBaseClass.body], [tableBaseClass.body]);\n\n  const renderEmpty = (columns: TableBodyProps['columns']) => (\n    <tr className={classNames([tableBaseClass.emptyRow, { [tableFullRowClasses.base]: props.isWidthOverflow }])}>\n      <td colSpan={columns.length}>\n        <div\n          className={classNames([tableBaseClass.empty, { [tableFullRowClasses.innerFullRow]: props.isWidthOverflow }])}\n          style={props.isWidthOverflow ? { width: `${props.tableWidth}px` } : {}}\n        >\n          {props.empty || t(global.empty)}\n        </div>\n      </td>\n    </tr>\n  );\n\n  const getFullRow = (columnLength: number, type: 'first-full-row' | 'last-full-row') => {\n    const tType = camelCase(type);\n    const fullRowNode = {\n      'first-full-row': props.firstFullRow,\n      'last-full-row': props.lastFullRow,\n    }[type];\n    if (!fullRowNode) return null;\n    const isFixedToLeft = props.isWidthOverflow && columns.find((col) => col.fixed === 'left');\n    const classes = [tableFullRowClasses.base, tableFullRowClasses[tType]];\n    /** innerFullRow 和 innerFullElement 同时存在，是为了保证 固定列时，当前行不随内容进行横向滚动 */\n    return (\n      <tr className={classNames(classes)}>\n        <td colSpan={columnLength}>\n          <div\n            className={classNames({ [tableFullRowClasses.innerFullRow]: isFixedToLeft })}\n            style={isFixedToLeft ? { width: `${props.tableWidth}px` } : {}}\n          >\n            <div className={tableFullRowClasses.innerFullElement}>{fullRowNode}</div>\n          </div>\n        </td>\n      </tr>\n    );\n  };\n\n  // 受合并单元格影响，部分单元格不显示\n  let skipSpansMap = new Map<any, boolean>();\n\n  const onTrRowspanOrColspan = (params: BaseTableCellParams<TableRowData>, cellSpans: RowspanColspan) => {\n    const { rowIndex, colIndex } = params;\n    if (!cellSpans.rowspan && !cellSpans.colspan) return;\n    const maxRowIndex = rowIndex + (cellSpans.rowspan || 1);\n    const maxColIndex = colIndex + (cellSpans.colspan || 1);\n    for (let i = rowIndex; i < maxRowIndex; i++) {\n      for (let j = colIndex; j < maxColIndex; j++) {\n        if (i !== rowIndex || j !== colIndex) {\n          skipSpansMap.set([i, j].join(), true);\n        }\n      }\n    }\n  };\n\n  const columnLength = columns.length;\n  const dataLength = data.length;\n  const trNodeList = [];\n  // 每次渲染清空合并单元格信息\n  skipSpansMap = new Map<any, boolean>();\n\n  const properties = [\n    'rowAndColFixedPosition',\n    'scroll',\n    'tableElm',\n    'tableContentElm',\n    'trs',\n    'bufferSize',\n    'isVirtual',\n    'rowHeight',\n    'scrollType',\n  ];\n  data?.forEach((row, rowIndex) => {\n    const trProps = {\n      ...pick(props, TABLE_PROPS),\n      rowKey: props.rowKey || 'id',\n      row,\n      columns,\n      rowIndex,\n      dataLength,\n      skipSpansMap,\n      ...pick(props, properties),\n      // 遍历的同时，计算后面的节点，是否会因为合并单元格跳过渲染\n      onTrRowspanOrColspan,\n    };\n    if (props.onCellClick) {\n      trProps.onCellClick = props.onCellClick;\n    }\n\n    const trNode = (\n      <TR key={get(row, props.rowKey || 'id') || rowIndex} {...trProps} onRowMounted={props.handleRowMounted}></TR>\n    );\n    trNodeList.push(trNode);\n\n    // 执行展开行渲染\n    if (props.renderExpandedRow) {\n      const p = {\n        row,\n        index: rowIndex,\n        columns,\n        tableWidth: props.tableWidth,\n        isWidthOverflow: props.isWidthOverflow,\n      };\n      const expandedContent = props.renderExpandedRow(p);\n      expandedContent && trNodeList.push(expandedContent);\n    }\n  });\n\n  const list = (\n    <>\n      {getFullRow(columnLength, 'first-full-row')}\n      {trNodeList}\n      {getFullRow(columnLength, 'last-full-row')}\n    </>\n  );\n  const isEmpty = !data?.length && !props.loading;\n\n  const translate = `translate(0, ${props.translateY}px)`;\n  const posStyle = {\n    transform: translate,\n    '-ms-transform': translate,\n    '-moz-transform': translate,\n    '-webkit-transform': translate,\n  };\n\n  return (\n    <tbody className={classNames(tbodyClasses)} style={props.isVirtual && { ...posStyle }}>\n      {isEmpty ? renderEmpty(columns) : list}\n    </tbody>\n  );\n}\n\nTBody.displayName = 'TBody';\n"],"names":["ROW_AND_TD_LISTENERS","ROW_LISTENERS","concat","extendTableProps","TBody","props","data","columns","useLocaleReceiver","global","t","useClassName","tableFullRowClasses","tableBaseClass","tbodyClasses","useMemo","body","renderEmpty","columns2","React","createElement","className","classNames","emptyRow","base","isWidthOverflow","colSpan","length","empty","innerFullRow","style","width","tableWidth","getFullRow","columnLength2","type","tType","camelCase","fullRowNode","firstFullRow","lastFullRow","isFixedToLeft","find","col","fixed","classes","innerFullElement","skipSpansMap","Map","onTrRowspanOrColspan","params","cellSpans","rowIndex","colIndex","rowspan","colspan","maxRowIndex","maxColIndex","i","j","set","join","columnLength","dataLength","trNodeList","properties","forEach","row","trProps","pick","TABLE_PROPS","rowKey","onCellClick","trNode","TR","key","get","onRowMounted","handleRowMounted","push","renderExpandedRow","p","index","expandedContent","list","Fragment","isEmpty","loading","translate","translateY","posStyle","transform","isVirtual","displayName"],"mappings":"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"}