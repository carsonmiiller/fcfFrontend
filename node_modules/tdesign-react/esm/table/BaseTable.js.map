{"version":3,"file":"BaseTable.js","sources":["../../src/table/BaseTable.tsx"],"sourcesContent":["import React, { useRef, useMemo, useImperativeHandle, forwardRef } from 'react';\nimport pick from 'lodash/pick';\nimport classNames from 'classnames';\n\nimport Loading from '../loading';\nimport TBody, { extendTableProps } from './TBody';\nimport { Affix } from '../affix';\nimport { ROW_LISTENERS } from './TR';\nimport THead from './THead';\nimport TFoot from './TFoot';\n\nimport useTableHeader from './hooks/useTableHeader';\nimport useFixed from './hooks/useFixed';\nimport usePagination from './hooks/usePagination';\nimport { BaseTableProps } from './interface';\nimport useStyle, { formatCSSUnit } from './hooks/useStyle';\nimport useClassName from './hooks/useClassName';\n\nimport { StyledProps } from '../common';\n\nexport const BASE_TABLE_EVENTS = ['page-change', 'cell-click', 'scroll', 'scrollX', 'scrollY'];\nexport const BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map((t) => `row-${t}`).concat(BASE_TABLE_EVENTS);\n\nexport interface TableListeners {\n  [key: string]: Function;\n}\n\nexport interface TBaseTableProps extends BaseTableProps, StyledProps {}\n\nconst BaseTable = forwardRef((props: TBaseTableProps, ref) => {\n  const { tableLayout, height, data, columns, style } = props;\n  const tableRef = useRef<HTMLDivElement>();\n  const tableElmRef = useRef<HTMLTableElement>();\n  const { tableLayoutClasses, tableBaseClass, tableColFixedClasses } = useClassName();\n  // 表格基础样式类\n  const { tableClasses, tableContentStyles, tableElementStyles } = useStyle(props);\n  // const [global] = useLocaleReceiver('table');\n  // 固定表头和固定列逻辑\n  const {\n    affixHeaderRef,\n    scrollbarWidth,\n    // virtualScrollHeaderPos,\n    tableWidth,\n    tableContentRef,\n    isFixedHeader,\n    isWidthOverflow,\n    isFixedColumn,\n    thWidthList,\n    showColumnShadow,\n    showAffixHeader,\n    rowAndColFixedPosition,\n    // refreshTable,\n    onTableContentScroll,\n    updateHeaderScroll,\n  } = useFixed(props);\n  const { isMultipleHeader, spansAndLeafNodes, thList } = useTableHeader({ columns: props.columns });\n  const { dataSource, isPaginateData, renderPagination } = usePagination(props);\n\n  const dynamicBaseTableClasses = classNames(\n    tableClasses.concat({\n      [tableBaseClass.headerFixed]: isFixedHeader,\n      [tableBaseClass.columnFixed]: isFixedColumn,\n      [tableBaseClass.widthOverflow]: isWidthOverflow,\n      [tableBaseClass.multipleHeader]: isMultipleHeader,\n      [tableColFixedClasses.leftShadow]: showColumnShadow.left,\n      [tableColFixedClasses.rightShadow]: showColumnShadow.right,\n    }),\n  );\n\n  const tableElmClasses = classNames([\n    [tableLayoutClasses[tableLayout || 'fixed']],\n    { [tableBaseClass.fullHeight]: height },\n  ]);\n\n  // const isVirtual = computed(() => type === 'virtual' && props.data?.length > (props.scroll?.threshold || 100));\n\n  const showRightDivider = useMemo(\n    () => props.bordered && isFixedHeader && ((isMultipleHeader && isWidthOverflow) || !isMultipleHeader),\n    [isFixedHeader, isMultipleHeader, isWidthOverflow, props.bordered],\n  );\n\n  useImperativeHandle(ref, () => ({\n    tableElement: tableRef.current,\n    tableHtmlElement: tableElmRef.current,\n    tableContentElement: tableContentRef.current,\n  }));\n\n  const onFixedChange = () => {\n    const timer = setTimeout(() => {\n      updateHeaderScroll();\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  // const { type, rowHeight, bufferSize = 20, isFixedRowHeight = false } = props.scroll || {};\n  // const { data } = toRefs<any>(props);\n\n  // let lastScrollY = -1;\n  const onInnerScroll = onTableContentScroll;\n\n  const newData = isPaginateData ? dataSource : data;\n\n  const defaultColWidth = props.tableLayout === 'fixed' && isWidthOverflow ? '100px' : undefined;\n  const colgroup = (\n    <colgroup>\n      {(spansAndLeafNodes?.leafColumns || columns).map((col, index) => (\n        <col key={col.colKey || index} style={{ width: formatCSSUnit(col.width) || defaultColWidth }}></col>\n      ))}\n    </colgroup>\n  );\n\n  const affixedHeader = Boolean(props.headerAffixedTop && tableWidth) && (\n    <div\n      ref={affixHeaderRef}\n      style={{ width: `${tableWidth}px`, opacity: Number(showAffixHeader) }}\n      className={classNames({ [tableBaseClass.affixedHeaderElm]: props.headerAffixedTop })}\n    >\n      <table className={classNames(tableElmClasses)} style={{ ...tableElementStyles, width: `${tableWidth}px` }}>\n        {colgroup}\n        <THead\n          isFixedHeader={isFixedHeader}\n          rowAndColFixedPosition={rowAndColFixedPosition}\n          isMultipleHeader={isMultipleHeader}\n          bordered={props.bordered}\n          spansAndLeafNodes={spansAndLeafNodes}\n          thList={thList}\n          thWidthList={thWidthList}\n        />\n      </table>\n    </div>\n  );\n\n  // const translate = `translate(0, ${this.scrollHeight}px)`;\n  // const virtualStyle = {\n  //   transform: translate,\n  //   '-ms-transform': translate,\n  //   '-moz-transform': translate,\n  //   '-webkit-transform': translate,\n  // };\n  const tableBodyProps = {\n    rowAndColFixedPosition,\n    showColumnShadow,\n    // data: isVirtual ? visibleData : data,\n    data: newData,\n    columns: spansAndLeafNodes.leafColumns,\n    scroll: props.scroll,\n    tableElm: tableRef.current,\n    tableContentElm: tableContentRef.current,\n    tableWidth,\n    isWidthOverflow,\n    rowKey: props.rowKey || 'id',\n    // 虚拟滚动相关属性\n    // isVirtual,\n    // translateY: translateY,\n    // scrollType: scrollType,\n    // rowHeight: rowHeight,\n    // trs: trs,\n    // bufferSize: bufferSize,\n    // handleRowMounted: handleRowMounted,\n    renderExpandedRow: props.renderExpandedRow,\n    ...pick(props, extendTableProps),\n  };\n  const tableContent = (\n    <div ref={tableContentRef} className={tableBaseClass.content} style={tableContentStyles} onScroll={onInnerScroll}>\n      {/* {this.isVirtual && <div className={this.virtualScrollClasses.cursor} style={virtualStyle} />} */}\n      <table ref={tableElmRef} className={classNames(tableElmClasses)} style={tableElementStyles}>\n        {colgroup}\n        <THead\n          isFixedHeader={isFixedHeader}\n          rowAndColFixedPosition={rowAndColFixedPosition}\n          isMultipleHeader={isMultipleHeader}\n          bordered={props.bordered}\n          spansAndLeafNodes={spansAndLeafNodes}\n          thList={thList}\n        />\n        <TBody {...tableBodyProps} />\n        <TFoot\n          rowKey={props.rowKey}\n          isFixedHeader={isFixedHeader}\n          rowAndColFixedPosition={rowAndColFixedPosition}\n          footData={props.footData}\n          columns={columns}\n          rowAttributes={props.rowAttributes}\n          rowClassName={props.rowClassName}\n        ></TFoot>\n      </table>\n    </div>\n  );\n\n  const { loading, loadingProps } = props;\n  const customLoadingText = loading;\n  const loadingContent = loading !== undefined && (\n    <Loading\n      loading={!!loading}\n      text={customLoadingText}\n      attach={() => tableRef.current}\n      showOverlay\n      {...loadingProps}\n    ></Loading>\n  );\n\n  const { topContent, bottomContent } = props;\n  return (\n    <div ref={tableRef} className={classNames(dynamicBaseTableClasses)} style={{ position: 'relative', ...style }}>\n      {!!topContent && <div className={tableBaseClass.topContent}>{topContent}</div>}\n      {!!props.headerAffixedTop &&\n        (props.headerAffixedTop ? (\n          <Affix offsetTop={0} {...props.headerAffixProps} onFixedChange={onFixedChange}>\n            {affixedHeader}\n          </Affix>\n        ) : (\n          isFixedHeader && affixedHeader\n        ))}\n      {tableContent}\n      {loadingContent}\n      {showRightDivider && (\n        <div\n          className={tableBaseClass.scrollbarDivider}\n          style={{ right: `${scrollbarWidth}px`, height: `${tableContentRef.current?.offsetHeight}px` }}\n        ></div>\n      )}\n      {!!bottomContent && <div className={tableBaseClass.bottomContent}>{bottomContent}</div>}\n      {renderPagination()}\n    </div>\n  );\n});\n\nBaseTable.displayName = 'BaseTable';\n\nexport default BaseTable;\n"],"names":["BASE_TABLE_EVENTS","BASE_TABLE_ALL_EVENTS","ROW_LISTENERS","map","t","concat","BaseTable","forwardRef","props","ref","tableLayout","height","data","columns","style","tableRef","useRef","tableElmRef","useClassName","tableLayoutClasses","tableBaseClass","tableColFixedClasses","useStyle","tableClasses","tableContentStyles","tableElementStyles","useFixed","affixHeaderRef","scrollbarWidth","tableWidth","tableContentRef","isFixedHeader","isWidthOverflow","isFixedColumn","thWidthList","showColumnShadow","showAffixHeader","rowAndColFixedPosition","onTableContentScroll","updateHeaderScroll","useTableHeader","isMultipleHeader","spansAndLeafNodes","thList","usePagination","dataSource","isPaginateData","renderPagination","dynamicBaseTableClasses","classNames","headerFixed","columnFixed","widthOverflow","multipleHeader","leftShadow","left","rightShadow","right","tableElmClasses","fullHeight","showRightDivider","useMemo","bordered","useImperativeHandle","tableElement","current","tableHtmlElement","tableContentElement","onFixedChange","timer","setTimeout","clearTimeout","onInnerScroll","newData","defaultColWidth","colgroup","React","createElement","leafColumns","col","index","key","colKey","width","formatCSSUnit","affixedHeader","Boolean","headerAffixedTop","opacity","Number","className","affixedHeaderElm","THead","tableBodyProps","scroll","tableElm","tableContentElm","rowKey","renderExpandedRow","pick","extendTableProps","tableContent","content","onScroll","TBody","TFoot","footData","rowAttributes","rowClassName","loading","loadingProps","customLoadingText","loadingContent","Loading","text","attach","showOverlay","topContent","bottomContent","position","Affix","offsetTop","headerAffixProps","scrollbarDivider","offsetHeight","displayName"],"mappings":"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"}