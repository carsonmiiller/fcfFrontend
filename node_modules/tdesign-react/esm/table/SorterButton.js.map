{"version":3,"file":"SorterButton.js","sources":["../../src/table/SorterButton.tsx"],"sourcesContent":["import React, { MouseEvent } from 'react';\nimport { ChevronDownIcon } from 'tdesign-icons-react';\nimport classNames from 'classnames';\nimport useClassName from './hooks/useClassName';\nimport { SortType } from './type';\nimport Tooltip, { TooltipProps } from '../tooltip';\nimport { TNode } from '../common';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\n\ntype SortTypeEnums = Array<'desc' | 'asc'>;\n\nexport interface SorterButtonProps {\n  sortType: SortType;\n  sortOrder: string;\n  sortIcon: TNode;\n  tooltipProps?: TooltipProps;\n  onSortIconClick: (e: MouseEvent<HTMLSpanElement>, p: { descending: boolean }) => void;\n}\n\nexport default function SorterButton(props: SorterButtonProps) {\n  const { sortType = 'all' } = props;\n  const { tableSortClasses, negativeRotate180 } = useClassName();\n  const [locale, t] = useLocaleReceiver('table');\n\n  const allowSortTypes: SortTypeEnums = sortType === 'all' ? ['asc', 'desc'] : [sortType];\n\n  const onSortIconClick = (e: MouseEvent<HTMLSpanElement>, direction: string) => {\n    props?.onSortIconClick(e, { descending: direction === 'desc' });\n  };\n\n  function getSortIcon(direction: string, activeClass: string) {\n    const defaultIcon = t(locale.sortIcon) || <ChevronDownIcon />;\n    const icon = props.sortIcon || defaultIcon;\n    const sortClassName = [\n      activeClass,\n      tableSortClasses.sortIcon,\n      tableSortClasses.iconDirection[direction],\n      { [negativeRotate180]: direction === 'asc' },\n    ];\n    return (\n      <span\n        className={classNames(sortClassName)}\n        onClick={(e: MouseEvent<HTMLSpanElement>) => onSortIconClick(e, direction)}\n      >\n        {icon}\n      </span>\n    );\n  }\n\n  const classes = [tableSortClasses.trigger, { [tableSortClasses.doubleIcon]: allowSortTypes.length > 1 }];\n  const tooltips = {\n    asc: locale.sortAscendingOperationText,\n    desc: locale.sortDescendingOperationText,\n  };\n  const sortButton = allowSortTypes.map((direction: string) => {\n    const activeClass = direction === props.sortOrder ? tableSortClasses.iconActive : tableSortClasses.iconDefault;\n    const cancelTips = locale.sortCancelOperationText;\n    const tips = direction === props.sortOrder ? cancelTips : tooltips[direction];\n    return (\n      <Tooltip\n        key={direction}\n        content={tips}\n        placement=\"right\"\n        {...props.tooltipProps}\n        showArrow={false}\n        className={tableSortClasses.iconDirection[direction]}\n      >\n        {getSortIcon(direction, activeClass)}\n      </Tooltip>\n    );\n  });\n  return <div className={classNames(classes)}>{sortButton}</div>;\n}\n\nSorterButton.displayName = 'SorterButton';\n"],"names":["SorterButton","props","sortType","useClassName","tableSortClasses","negativeRotate180","useLocaleReceiver","locale","t","allowSortTypes","onSortIconClick","e","direction","descending","getSortIcon","activeClass","defaultIcon","sortIcon","React","createElement","ChevronDownIcon","icon","sortClassName","iconDirection","className","classNames","onClick","classes","trigger","doubleIcon","length","tooltips","asc","sortAscendingOperationText","desc","sortDescendingOperationText","sortButton","map","sortOrder","iconActive","iconDefault","cancelTips","sortCancelOperationText","tips","Tooltip","key","content","placement","tooltipProps","showArrow","displayName"],"mappings":"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"}