{"version":3,"file":"useColumnController.js","sources":["../../../src/table/hooks/useColumnController.tsx"],"sourcesContent":["/**\n * 自定义显示列控制器，即列配置\n */\nimport React, { useEffect, ChangeEvent, useRef } from 'react';\nimport { SettingIcon } from 'tdesign-icons-react';\nimport intersection from 'lodash/intersection';\nimport classNames from 'classnames';\nimport Checkbox, { CheckboxGroupValue, CheckboxOptionObj, CheckboxGroupChangeContext } from '../../checkbox';\nimport { DialogPlugin } from '../../dialog/plugin';\nimport { renderTitle } from './useTableHeader';\nimport { PrimaryTableCol, TdPrimaryTableProps } from '../type';\nimport useConfig from '../../_util/useConfig';\nimport useControlled from '../../hooks/useControlled';\nimport { getCurrentRowByKey } from '../utils';\nimport { DialogInstance } from '../../dialog';\nimport TButton from '../../button';\n\nconst CheckboxGroup = Checkbox.Group;\n\nexport function getColumnKeys(columns: PrimaryTableCol[], keys = new Set<string>()) {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    const col = columns[i];\n    col.colKey && keys.add(col.colKey);\n    if (col.children?.length) {\n      getColumnKeys(col.children, keys);\n    }\n  }\n  return keys;\n}\n\nexport default function useColumnController(props: TdPrimaryTableProps) {\n  const { classPrefix, table } = useConfig();\n  const { columns, columnController, displayColumns, columnControllerVisible } = props;\n  const dialogInstance = useRef<DialogInstance>();\n\n  const enabledColKeys = (() => {\n    const arr = (columnController?.fields || [...getColumnKeys(columns)] || []).filter((v) => v);\n    return new Set(arr);\n  })();\n\n  const keys = [...getColumnKeys(columns)];\n\n  // 确认后的列配置\n  const [tDisplayColumns, setTDisplayColumns] = useControlled(props, 'displayColumns', props.onDisplayColumnsChange);\n  // 弹框内的多选\n  const defaultColumnCheckboxKeys = displayColumns || props.defaultDisplayColumns || keys;\n  // 内部选中的列配置，确认前\n  const columnCheckboxKeys = useRef<CheckboxGroupValue>(defaultColumnCheckboxKeys);\n\n  useEffect(() => {\n    columnCheckboxKeys.current = [...(displayColumns || props.defaultDisplayColumns || keys)];\n    dialogInstance.current?.update({ body: getDialogContent() });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [displayColumns]);\n\n  function getCheckboxOptions(columns: PrimaryTableCol[], arr: CheckboxOptionObj[] = []) {\n    // 减少循环次数\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const item = columns[i];\n      if (item.colKey) {\n        arr.push({\n          label: renderTitle(item, i),\n          value: item.colKey,\n          disabled: !enabledColKeys.has(item.colKey),\n        });\n      }\n      if (item.children?.length) {\n        getCheckboxOptions(item.children, arr);\n      }\n    }\n    return arr;\n  }\n\n  const handleCheckChange = (val: CheckboxGroupValue, ctx: CheckboxGroupChangeContext) => {\n    columnCheckboxKeys.current = val;\n    const params = {\n      columns: val,\n      type: ctx.type,\n      currentColumn: getCurrentRowByKey(columns, String(ctx.current)),\n      e: ctx.e,\n    };\n    props.onColumnChange?.(params);\n    dialogInstance.current.update({ body: getDialogContent() });\n  };\n\n  const handleClickAllShowColumns = (checked: boolean, ctx: { e: ChangeEvent<HTMLDivElement> }) => {\n    if (checked) {\n      const newData = columns?.map((t) => t.colKey) || [];\n      columnCheckboxKeys.current = newData;\n      props.onColumnChange?.({ type: 'check', columns: newData, e: ctx.e });\n    } else {\n      const disabledColKeys = getCheckboxOptions(columns)\n        .filter((t) => t.disabled)\n        .map((t) => t.value);\n      columnCheckboxKeys.current = disabledColKeys;\n      props.onColumnChange?.({ type: 'uncheck', columns: disabledColKeys, e: ctx.e });\n    }\n    dialogInstance.current.update({ body: getDialogContent() });\n  };\n\n  function getDialogContent() {\n    const checkboxOptions = getCheckboxOptions(columns);\n    const intersectionChecked = intersection(columnCheckboxKeys.current, [...enabledColKeys]);\n    const widthMode = columnController?.displayType === 'fixed-width' ? 'fixed' : 'auto';\n    const checkedLength = intersectionChecked.length;\n    const isCheckedAll = checkedLength === enabledColKeys.size;\n    const isIndeterminate = checkedLength > 0 && checkedLength < enabledColKeys.size;\n    return (\n      <div\n        className={classNames([\n          `${classPrefix}-table__column-controller`,\n          `${classPrefix}-table__column-controller--${widthMode}`,\n        ])}\n      >\n        <div className={`${classPrefix}-table__column-controller-body`}>\n          {/* 请选择需要在表格中显示的数据列 */}\n          <p className={`${classPrefix}-table__column-controller-desc`}>{table.columnConfigDescriptionText}</p>\n          <div className={`${classPrefix}-table__column-controller-block`}>\n            <Checkbox indeterminate={isIndeterminate} checked={isCheckedAll} onChange={handleClickAllShowColumns}>\n              {table.selectAllText}\n            </Checkbox>\n          </div>\n          <div className={`${classPrefix}-table__column-controller-block`}>\n            <CheckboxGroup\n              options={checkboxOptions}\n              {...(columnController?.checkboxProps || {})}\n              value={columnCheckboxKeys.current}\n              onChange={handleCheckChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const handleToggleColumnController = () => {\n    dialogInstance.current = DialogPlugin.confirm({\n      header: table.columnConfigTitleText,\n      body: getDialogContent(),\n      confirmBtn: table.confirmText,\n      cancelBtn: table.cancelText,\n      width: 612,\n      onConfirm: () => {\n        setTDisplayColumns([...columnCheckboxKeys.current]);\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible === undefined) {\n          dialogInstance.current.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'cancel' });\n        }\n      },\n      onClose: () => {\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible === undefined) {\n          dialogInstance.current.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'confirm' });\n        }\n      },\n      ...(columnController?.dialogProps || {}),\n    });\n  };\n\n  // columnControllerVisible 一般应用于不包含列配置按钮的场景，有外部直接控制弹框的显示或隐藏\n  useEffect(\n    () => {\n      if (columnControllerVisible === undefined) return;\n      if (dialogInstance.current) {\n        columnControllerVisible ? dialogInstance.current.show() : dialogInstance.current.hide();\n      } else {\n        columnControllerVisible && handleToggleColumnController();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columnControllerVisible, dialogInstance],\n  );\n\n  const renderColumnController = () => {\n    const isColumnController = !!(columnController && Object.keys(columnController).length);\n    const placement = isColumnController ? columnController.placement || 'top-right' : '';\n    if (isColumnController && columnController.hideTriggerButton) return null;\n    const classes = [\n      `${classPrefix}-table__column-controller-trigger`,\n      { [`${classPrefix}-align-${placement}`]: !!placement },\n    ];\n    return (\n      <div className={classNames(classes)}>\n        <TButton\n          theme=\"default\"\n          variant=\"outline\"\n          onClick={handleToggleColumnController}\n          content={table.columnConfigButtonText}\n          icon={<SettingIcon />}\n          {...props.columnController?.buttonProps}\n        ></TButton>\n      </div>\n    );\n  };\n\n  return {\n    tDisplayColumns,\n    renderColumnController,\n  };\n}\n"],"names":["CheckboxGroup","Checkbox","Group","getColumnKeys","columns","keys","Set","i","len","length","col","colKey","add","children","useColumnController","props","useConfig","classPrefix","table","columnController","displayColumns","columnControllerVisible","dialogInstance","useRef","enabledColKeys","arr","fields","filter","v","useControlled","onDisplayColumnsChange","tDisplayColumns","setTDisplayColumns","defaultColumnCheckboxKeys","defaultDisplayColumns","columnCheckboxKeys","useEffect","current","update","body","getDialogContent","getCheckboxOptions","columns2","item","push","label","renderTitle","value","disabled","has","handleCheckChange","val","ctx","params","type","currentColumn","getCurrentRowByKey","String","e","onColumnChange","handleClickAllShowColumns","checked","newData","map","t","disabledColKeys","checkboxOptions","intersectionChecked","intersection","widthMode","displayType","checkedLength","isCheckedAll","size","isIndeterminate","React","createElement","className","classNames","columnConfigDescriptionText","indeterminate","onChange","selectAllText","options","checkboxProps","handleToggleColumnController","DialogPlugin","confirm","header","columnConfigTitleText","confirmBtn","confirmText","cancelBtn","cancelText","width","onConfirm","hide","onColumnControllerVisibleChange","trigger","onClose","dialogProps","show","renderColumnController","isColumnController","Object","placement","hideTriggerButton","classes","TButton","theme","variant","onClick","content","columnConfigButtonText","icon","SettingIcon","buttonProps"],"mappings":"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"}