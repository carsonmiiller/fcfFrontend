/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import React, { forwardRef, useRef } from 'react';
import classNames from 'classnames';
import { ChevronRightIcon } from 'tdesign-icons-react';
import useConfig from '../_util/useConfig.js';
import useRipple from '../_util/useRipple.js';
import { pxCompat } from '../_util/helper.js';
import { Divider } from '../divider/index.js';
import { dropdownItemDefaultProps } from './defaultProps.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-60c49e74.js';
import '../_util/easing.js';
import '../_chunks/dep-8ff4a741.js';
import '../_chunks/dep-744640f5.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_chunks/dep-9be29560.js';
import '../_chunks/dep-e8f6f682.js';
import '../_chunks/dep-863396c0.js';
import '../_chunks/dep-0db6b692.js';
import '../_chunks/dep-6d2697ef.js';
import '../_chunks/dep-42701b6c.js';
import '../divider/Divider.js';
import '../divider/defaultProps.js';
import '../divider/style/index.js';
import '../divider/type.js';

var DropdownItem = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classNames;

  var _props$path = props.path,
      path = _props$path === void 0 ? "" : _props$path,
      _props$hasChildren = props.hasChildren,
      hasChildren = _props$hasChildren === void 0 ? false : _props$hasChildren,
      maxColumnWidth = props.maxColumnWidth,
      minColumnWidth = props.minColumnWidth,
      active = props.active,
      disabled = props.disabled,
      content = props.content,
      value = props.value,
      divider = props.divider,
      children = props.children;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var dropdownItemRef = useRef(null);
  useRipple(ref || dropdownItemRef);
  var dropdownItemClass = "".concat(classPrefix, "-dropdown__item");

  var renderSuffix = function renderSuffix() {
    return hasChildren ? /* @__PURE__ */React.createElement(ChevronRightIcon, {
      className: "".concat(classPrefix, "-dropdown__item-icon")
    }) : null;
  };

  var handleItemClick = function handleItemClick(e) {
    if (!hasChildren && !disabled) {
      var _props$onClick;

      var data = {
        value: value,
        path: path,
        content: content
      };
      props === null || props === void 0 ? void 0 : (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, {
        e: e
      });
    }
  };

  var handleMouseover = function handleMouseover() {
    props.onHover(path);
  };

  return /* @__PURE__ */React.createElement("div", null, /* @__PURE__ */React.createElement("div", {
    className: classNames(dropdownItemClass, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-dropdown--suffix"), hasChildren), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-active"), active), _classNames)),
    style: {
      maxWidth: pxCompat(maxColumnWidth),
      minWidth: pxCompat(minColumnWidth)
    },
    onClick: handleItemClick,
    onMouseOver: handleMouseover,
    ref: ref || dropdownItemRef
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(dropdownItemClass, "-content")
  }, /* @__PURE__ */React.createElement("span", {
    className: "".concat(dropdownItemClass, "-text")
  }, children || content)), renderSuffix()), divider ? /* @__PURE__ */React.createElement(Divider, null) : null);
});
DropdownItem.displayName = "DropdownItem";
DropdownItem.defaultProps = dropdownItemDefaultProps;

export { DropdownItem as default };
//# sourceMappingURL=DropdownItem.js.map
