/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../_chunks/dep-4705ff31.js';
import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import { _ as _slicedToArray } from '../_chunks/dep-744640f5.js';
import React, { useState } from 'react';
import classNames from 'classnames';
import { o as omit_1 } from '../_chunks/dep-5d7b6fd8.js';
import useConfig from '../_util/useConfig.js';
import { Popup } from '../popup/index.js';
import DropdownMenu from './DropdownMenu.js';
import DropdownItem from './DropdownItem.js';
import { dropdownDefaultProps } from './defaultProps.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-e8f6f682.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-863396c0.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-089519d1.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-f459ac73.js';
import '../_chunks/dep-43a6fda3.js';
import '../_chunks/dep-0e5e855a.js';
import '../_chunks/dep-084711a9.js';
import '../_chunks/dep-42701b6c.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';
import '../_chunks/dep-b9ff0943.js';
import '../_chunks/dep-3cff266a.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_chunks/dep-0db6b692.js';
import '../_chunks/dep-6d2697ef.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../_util/composeRefs.js';
import '../common/Portal.js';
import 'react-dom';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-60c49e74.js';
import '../_util/easing.js';
import '../popup/hooks/useTriggerProps.js';
import '../_util/useClickOutside.js';
import '../popup/utils/getTransitionParams.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-0a541e21.js';
import '../_chunks/dep-5ed520e8.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../_chunks/dep-bd2639ad.js';
import 'tdesign-icons-react';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../_util/helper.js';
import '../_chunks/dep-8ff4a741.js';
import '../_chunks/dep-9be29560.js';
import '../divider/index.js';
import '../divider/Divider.js';
import '../divider/defaultProps.js';
import '../divider/style/index.js';
import '../divider/type.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Dropdown = function Dropdown(props) {
  var _props$popupProps = props.popupProps,
      popupProps = _props$popupProps === void 0 ? {} : _props$popupProps,
      disabled = props.disabled,
      placement = props.placement,
      trigger = props.trigger,
      className = props.className,
      children = props.children,
      hideAfterItemClick = props.hideAfterItemClick;
  var content = null;
  var arrayChildren = React.Children.toArray(children);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isPopupVisible = _useState2[0],
      togglePopupVisible = _useState2[1];

  var dropdownClass = "".concat(classPrefix, "-dropdown");

  var handleMenuClick = function handleMenuClick(data, context) {
    var _props$onClick;

    if (hideAfterItemClick) {
      togglePopupVisible(false);
    }

    props === null || props === void 0 ? void 0 : (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, context);
  };

  var DropdownContent = function DropdownContent() {
    return /* @__PURE__ */React.createElement(DropdownMenu, _objectSpread(_objectSpread({}, props), {}, {
      onClick: handleMenuClick
    }));
  };

  var handleVisibleChange = function handleVisibleChange(visible, context) {
    var _popupProps$onVisible;

    togglePopupVisible(visible);
    popupProps === null || popupProps === void 0 ? void 0 : (_popupProps$onVisible = popupProps.onVisibleChange) === null || _popupProps$onVisible === void 0 ? void 0 : _popupProps$onVisible.call(popupProps, visible, context);
  };

  React.Children.forEach(arrayChildren, function (child, idx) {
    if (_typeof(child) !== "object") return;

    if (child.type === DropdownMenu) {
      content = /*#__PURE__*/React.cloneElement(child, {
        onClick: handleMenuClick
      });
      arrayChildren.splice(idx, 1);
    }
  });

  var popupParams = _objectSpread({
    disabled: disabled,
    placement: placement,
    trigger: trigger,
    showArrow: false,
    overlayClassName: classNames(dropdownClass, className),
    content: content || DropdownContent()
  }, omit_1(popupProps, "onVisibleChange"));

  return /* @__PURE__ */React.createElement(Popup, _objectSpread({
    expandAnimation: true,
    destroyOnClose: true,
    visible: isPopupVisible,
    onVisibleChange: handleVisibleChange
  }, popupParams), arrayChildren);
};

Dropdown.DropdownMenu = DropdownMenu;
Dropdown.DropdownItem = DropdownItem;
Dropdown.displayName = "Dropdown";
Dropdown.defaultProps = dropdownDefaultProps;

export { Dropdown as default };
//# sourceMappingURL=Dropdown.js.map
