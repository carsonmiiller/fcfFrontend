/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-744640f5.js';
import React, { useCallback } from 'react';
import { ErrorCircleFilledIcon, CheckCircleFilledIcon } from 'tdesign-icons-react';
import { Button } from '../../button/index.js';
import { Loading } from '../../loading/index.js';
import useConfig from '../../_util/useConfig.js';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import { abridgeName, returnFileSize, getCurrentDate } from '../util.js';
import '../../_chunks/dep-0e5be0b2.js';
import '../../button/Button.js';
import '../../_chunks/dep-08260abc.js';
import '../../_chunks/dep-8ff4a741.js';
import 'classnames';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_chunks/dep-e3ed7551.js';
import '../../_chunks/dep-12690e1d.js';
import '../../_chunks/dep-ac0cc4dd.js';
import '../../_chunks/dep-e3ab6b0d.js';
import '../../_chunks/dep-cc4f2bae.js';
import '../../_chunks/dep-531703d1.js';
import '../../_chunks/dep-21baa91f.js';
import '../../_chunks/dep-4705ff31.js';
import '../../_chunks/dep-38424935.js';
import '../../_chunks/dep-ad150068.js';
import '../../_chunks/dep-d5f141ac.js';
import '../../_chunks/dep-1b27e5c2.js';
import '../../_chunks/dep-6963df41.js';
import '../../_chunks/dep-8fb1642c.js';
import '../../_chunks/dep-bcb59ae2.js';
import '../../_chunks/dep-12718f01.js';
import '../../_chunks/dep-09c318fb.js';
import '../../_chunks/dep-048c506f.js';
import '../../_chunks/dep-febf8cf9.js';
import '../../_chunks/dep-074143e4.js';
import '../../_chunks/dep-a1fd625f.js';
import '../../_chunks/dep-f5ab8a5c.js';
import '../../_chunks/dep-67009882.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../config-provider/zh_CN_config.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-60c49e74.js';
import '../../_util/easing.js';
import '../../button/defaultProps.js';
import '../../loading/Loading.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../loading/style/index.js';
import '../../loading/type.js';
import '../../button/style/index.js';
import '../../button/type.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';

var DraggerProgress = function DraggerProgress(props) {
  var file = props.file,
      onUpload = props.onUpload,
      onRemove = props.onRemove,
      display = props.display,
      onTrigger = props.onTrigger,
      onCancel = props.onCancel;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = useLocaleReceiver("upload"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var triggerUploadText = locale.triggerUploadText,
      infoText = locale.file,
      cancelUploadText = locale.cancelUploadText;

  var reUpload = function reUpload(e) {
    onRemove === null || onRemove === void 0 ? void 0 : onRemove({
      e: e,
      file: file,
      index: 0
    });
    onTrigger === null || onTrigger === void 0 ? void 0 : onTrigger();
  };

  var showResultOperate = React.useMemo(function () {
    return ["success", "fail"].includes(file === null || file === void 0 ? void 0 : file.status);
  }, [file]);

  var handleRemove = function handleRemove(e) {
    onRemove === null || onRemove === void 0 ? void 0 : onRemove({
      e: e,
      file: file,
      index: 0
    });
  };

  var renderUploading = useCallback(function () {
    if ((file === null || file === void 0 ? void 0 : file.status) === "fail") {
      return /* @__PURE__ */React.createElement(ErrorCircleFilledIcon, null);
    }

    if ((file === null || file === void 0 ? void 0 : file.status) === "progress") {
      return /* @__PURE__ */React.createElement("div", {
        className: "t-upload__single-progress"
      }, /* @__PURE__ */React.createElement(Loading, {
        loading: true,
        size: "small"
      }), /* @__PURE__ */React.createElement("span", {
        className: "t-upload__single-percent"
      }, Math.min((file === null || file === void 0 ? void 0 : file.percent) || 0, 99), "%"));
    }
  }, [file]);
  return /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-progress")
  }, display === "image" && /* @__PURE__ */React.createElement("div", {
    className: "t-upload__dragger-img-wrap"
  }, file && /* @__PURE__ */React.createElement("img", {
    src: (file === null || file === void 0 ? void 0 : file.url) || "default.png",
    alt: ""
  })), /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-progress-info")
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-text")
  }, /* @__PURE__ */React.createElement("span", {
    className: "".concat(classPrefix, "-upload__single-name")
  }, abridgeName(file === null || file === void 0 ? void 0 : file.name)), (file === null || file === void 0 ? void 0 : file.status) !== "success" && renderUploading(), (file === null || file === void 0 ? void 0 : file.status) === "success" && /* @__PURE__ */React.createElement(CheckCircleFilledIcon, null)), /* @__PURE__ */React.createElement("small", {
    className: "".concat(classPrefix, "-size-s")
  }, t(infoText.fileSizeText), "\uFF1A", returnFileSize(file === null || file === void 0 ? void 0 : file.size)), /* @__PURE__ */React.createElement("small", {
    className: "".concat(classPrefix, "-size-s")
  }, t(infoText.fileOperationDateText), "\uFF1A", getCurrentDate()), !["success", "fail"].includes(file === null || file === void 0 ? void 0 : file.status) && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-btns")
  }, /* @__PURE__ */React.createElement(Button, {
    theme: "primary",
    variant: "text",
    className: "".concat(classPrefix, "-upload__dragger-progress-cancel"),
    onClick: onCancel
  }, t(cancelUploadText)), /* @__PURE__ */React.createElement(Button, {
    theme: "primary",
    variant: "text",
    onClick: onUpload
  }, t(triggerUploadText.normal))), showResultOperate && /* @__PURE__ */React.createElement("div", {
    className: "t-upload__dragger-btns"
  }, /* @__PURE__ */React.createElement(Button, {
    theme: "primary",
    variant: "text",
    className: "t-upload__dragger-progress-cancel",
    onClick: reUpload
  }, t(triggerUploadText.reupload)), /* @__PURE__ */React.createElement(Button, {
    theme: "primary",
    variant: "text",
    onClick: handleRemove
  }, t(triggerUploadText["delete"])))));
};

export { DraggerProgress as default };
//# sourceMappingURL=dragger-progress.js.map
