/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../../_chunks/dep-08260abc.js';
import { _ as _slicedToArray } from '../../../_chunks/dep-744640f5.js';
import React, { useState, useCallback } from 'react';
import classNames from 'classnames';
import useConfig from '../../../_util/useConfig.js';
import { useLocaleReceiver } from '../../../locale/LocalReceiver.js';
import { Button } from '../../../button/index.js';
import ImgList from './img-list.js';
import FileList from './file-list.js';
import BooleanRender from '../../boolean-render.js';
import '../../../_chunks/dep-0e5be0b2.js';
import '../../../_chunks/dep-e3ed7551.js';
import '../../../_chunks/dep-12690e1d.js';
import '../../../_chunks/dep-ac0cc4dd.js';
import '../../../_chunks/dep-e3ab6b0d.js';
import '../../../_chunks/dep-cc4f2bae.js';
import '../../../_chunks/dep-531703d1.js';
import '../../../_chunks/dep-21baa91f.js';
import '../../../_chunks/dep-4705ff31.js';
import '../../../_chunks/dep-38424935.js';
import '../../../_chunks/dep-ad150068.js';
import '../../../_chunks/dep-d5f141ac.js';
import '../../../_chunks/dep-1b27e5c2.js';
import '../../../_chunks/dep-6963df41.js';
import '../../../_chunks/dep-8fb1642c.js';
import '../../../_chunks/dep-bcb59ae2.js';
import '../../../_chunks/dep-12718f01.js';
import '../../../_chunks/dep-09c318fb.js';
import '../../../_chunks/dep-048c506f.js';
import '../../../_chunks/dep-febf8cf9.js';
import '../../../_chunks/dep-074143e4.js';
import '../../../_chunks/dep-a1fd625f.js';
import '../../../_chunks/dep-f5ab8a5c.js';
import '../../../_chunks/dep-67009882.js';
import '../../../locale/zh_CN.js';
import '../../../_common/js/global-config/locale/zh_CN.js';
import '../../../config-provider/zh_CN_config.js';
import '../../../config-provider/index.js';
import '../../../config-provider/ConfigProvider.js';
import '../../../button/Button.js';
import '../../../_chunks/dep-8ff4a741.js';
import '../../../_util/useRipple.js';
import '../../../_util/useAnimation.js';
import '../../../_util/setStyle.js';
import '../../../_util/dom.js';
import 'raf';
import '../../../_chunks/dep-60c49e74.js';
import '../../../_util/easing.js';
import '../../../loading/index.js';
import '../../../loading/Loading.js';
import '../../../common/Portal.js';
import 'react-dom';
import '../../../loading/gradient.js';
import '../../../_common/js/loading/circle-adapter.js';
import '../../../_common/js/utils/set-style.js';
import '../../../_common/js/utils/helper.js';
import '../../../loading/defaultProps.js';
import '../../../loading/plugin.js';
import '../../../loading/style/index.js';
import '../../../loading/type.js';
import '../../../button/defaultProps.js';
import '../../../button/style/index.js';
import '../../../button/type.js';
import 'tdesign-icons-react';
import '../../util.js';

var Index = function Index(props) {
  var _classNames;

  var listFiles = props.files,
      _props$toUploadFiles = props.toUploadFiles,
      toUploadFiles = _props$toUploadFiles === void 0 ? [] : _props$toUploadFiles,
      _props$showUploadProg = props.showUploadProgress,
      showUploadProgress = _props$showUploadProg === void 0 ? false : _props$showUploadProg,
      placeholder = props.placeholder,
      display = props.display,
      onImgPreview = props.onImgPreview,
      remove = props.remove,
      upload = props.upload,
      cancel = props.cancel,
      onChange = props.onChange,
      onDragenter = props.onDragenter,
      onDragleave = props.onDragleave,
      _props$children = props.children,
      children = _props$children === void 0 ? null : _props$children;
  var target = React.useRef();

  var _useConfig = useConfig(),
      prefix = _useConfig.classPrefix;

  var _useLocaleReceiver = useLocaleReceiver("upload"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var UPLOAD_NAME = "".concat(prefix, "-upload");

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      dragActive = _useState2[0],
      setDragActive = _useState2[1];

  var showInitial = !listFiles.length;
  var failedList = toUploadFiles.filter(function (file) {
    return file.status === "fail";
  });
  var isUploading = toUploadFiles.filter(function (file) {
    return file.status === "progress";
  }).length > 0;
  var allowUpload = toUploadFiles.length > 0 && !isUploading;
  var progress = locale.progress,
      triggerUploadText = locale.triggerUploadText;
  var uploadText = failedList.length ? t(triggerUploadText.reupload) : t(triggerUploadText.normal);
  if (isUploading) uploadText = t(progress.uploadingText);

  var handleDrop = function handleDrop(event) {
    event.preventDefault();
    onChange === null || onChange === void 0 ? void 0 : onChange(event.dataTransfer.files);
    onDragleave === null || onDragleave === void 0 ? void 0 : onDragleave(event);
    setDragActive(false);
  };

  var handleDragenter = function handleDragenter(event) {
    event.preventDefault();
    onDragenter === null || onDragenter === void 0 ? void 0 : onDragenter(event);
    setDragActive(true);
  };

  var handleDragleave = function handleDragleave(event) {
    if (event.target !== target.current) return;
    event.preventDefault();
    onDragleave === null || onDragleave === void 0 ? void 0 : onDragleave(event);
    setDragActive(false);
  };

  var handleDragover = function handleDragover(event) {
    event.preventDefault();
  };

  var onInternalImgPreview = useCallback(function (file, event) {
    if (!onImgPreview) return;
    event.preventDefault();
    onImgPreview(file, event);
  }, [onImgPreview]);

  var renderDragger = function renderDragger() {
    return /* @__PURE__ */React.createElement("div", {
      ref: target,
      className: "".concat(UPLOAD_NAME, "__flow-empty"),
      onDrop: handleDrop,
      onDragEnter: handleDragenter,
      onDragOver: handleDragover,
      onDragLeave: handleDragleave
    }, dragActive ? t(locale.dragger.dragDropText) : t(locale.dragger.clickAndDragText));
  };

  var wrapperClassNames = classNames((_classNames = {}, _defineProperty(_classNames, "".concat(UPLOAD_NAME, "__flow"), true), _defineProperty(_classNames, "".concat(UPLOAD_NAME, "__flow-").concat(display), true), _classNames));
  return /* @__PURE__ */React.createElement("div", {
    className: wrapperClassNames
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(UPLOAD_NAME, "__flow-op")
  }, children, /* @__PURE__ */React.createElement("small", {
    className: "".concat(UPLOAD_NAME, "__small ").concat(UPLOAD_NAME, "__flow-placeholder")
  }, placeholder)), /* @__PURE__ */React.createElement(BooleanRender, {
    boolExpression: display === "file-flow"
  }, /* @__PURE__ */React.createElement(FileList, {
    listFiles: listFiles,
    showInitial: showInitial,
    renderDragger: renderDragger,
    showUploadProgress: showUploadProgress,
    remove: remove
  })), /* @__PURE__ */React.createElement(BooleanRender, {
    boolExpression: display === "image-flow"
  }, /* @__PURE__ */React.createElement(ImgList, {
    listFiles: listFiles,
    showInitial: showInitial,
    renderDragger: renderDragger,
    onImgPreview: onInternalImgPreview,
    remove: remove
  })), /* @__PURE__ */React.createElement("div", {
    className: "".concat(UPLOAD_NAME, "__flow-bottom")
  }, /* @__PURE__ */React.createElement(Button, {
    theme: "default",
    onClick: cancel
  }, t(locale.cancelUploadText)), /* @__PURE__ */React.createElement(Button, {
    disabled: !allowUpload,
    theme: "primary",
    onClick: function onClick(e) {
      return upload(toUploadFiles, e);
    }
  }, uploadText)));
};

export { Index as default };
//# sourceMappingURL=index.js.map
