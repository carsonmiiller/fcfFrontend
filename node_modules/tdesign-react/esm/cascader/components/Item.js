/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-08260abc.js';
import React, { forwardRef, useRef, useMemo } from 'react';
import classNames from 'classnames';
import { ChevronRightIcon } from 'tdesign-icons-react';
import useConfig from '../../_util/useConfig.js';
import useCommonClassName from '../../_util/useCommonClassName.js';
import useRipple from '../../_util/useRipple.js';
import { getLabelIsEllipsis, getCascaderItemClass, getCascaderItemIconClass } from '../utils/item.js';
import { getFullPathLabel } from '../utils/helper.js';
import { Loading } from '../../loading/index.js';
import Tooltip from '../../tooltip/Tooltip.js';
import { C as Checkbox } from '../../_chunks/dep-6a955d55.js';
import '../../_chunks/dep-e3ed7551.js';
import '../../_chunks/dep-12690e1d.js';
import '../../_chunks/dep-ac0cc4dd.js';
import '../../_chunks/dep-e3ab6b0d.js';
import '../../_chunks/dep-cc4f2bae.js';
import '../../_chunks/dep-531703d1.js';
import '../../_chunks/dep-21baa91f.js';
import '../../_chunks/dep-4705ff31.js';
import '../../_chunks/dep-38424935.js';
import '../../_chunks/dep-ad150068.js';
import '../../_chunks/dep-d5f141ac.js';
import '../../_chunks/dep-1b27e5c2.js';
import '../../_chunks/dep-6963df41.js';
import '../../_chunks/dep-8fb1642c.js';
import '../../_chunks/dep-bcb59ae2.js';
import '../../_chunks/dep-12718f01.js';
import '../../_chunks/dep-09c318fb.js';
import '../../_chunks/dep-048c506f.js';
import '../../_chunks/dep-febf8cf9.js';
import '../../_chunks/dep-074143e4.js';
import '../../_chunks/dep-a1fd625f.js';
import '../../_chunks/dep-f5ab8a5c.js';
import '../../_chunks/dep-67009882.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../config-provider/zh_CN_config.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-60c49e74.js';
import '../../_util/easing.js';
import '../../_chunks/dep-bd2639ad.js';
import '../../_chunks/dep-0e5be0b2.js';
import '../../loading/Loading.js';
import '../../_chunks/dep-744640f5.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../_chunks/dep-8ff4a741.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../loading/style/index.js';
import '../../loading/type.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../hooks/useControlled.js';
import '../../_chunks/dep-0db6b692.js';
import '../../_chunks/dep-6d2697ef.js';
import '../../_chunks/dep-42701b6c.js';
import '../../_chunks/dep-e8f6f682.js';
import '../../_chunks/dep-863396c0.js';
import '../../_util/noop.js';
import '../../_util/composeRefs.js';
import '../../popup/hooks/useTriggerProps.js';
import '../../_util/useClickOutside.js';
import '../../popup/utils/getTransitionParams.js';
import '../../_util/useMutationObserver.js';
import '../../_chunks/dep-0a541e21.js';
import '../../_chunks/dep-5ed520e8.js';
import '../../_util/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../popup/style/index.js';
import '../../popup/type.js';
import '../../tooltip/defaultProps.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_util/helper.js';
import '../../_chunks/dep-9be29560.js';
import '../../_chunks/dep-1feb6aff.js';
import '../../checkbox/defaultProps.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var RenderLabelInner = function RenderLabelInner(name, node, cascaderContext) {
  var filterActive = cascaderContext.filterActive,
      inputVal = cascaderContext.inputVal;
  var labelText = filterActive ? getFullPathLabel(node) : node.label;
  var isEllipsis = getLabelIsEllipsis(labelText, cascaderContext.size);
  var EllipsisNode = isEllipsis ? /* @__PURE__ */React.createElement("div", {
    className: "".concat(name, "-label--ellipsis")
  }, /* @__PURE__ */React.createElement(Tooltip, {
    content: labelText,
    placement: "top-left"
  })) : null;

  if (filterActive) {
    var texts = labelText.split(inputVal);
    var doms = [];

    for (var index = 0; index < texts.length; index++) {
      doms.push( /* @__PURE__ */React.createElement("span", {
        key: index
      }, texts[index]));
      if (index === texts.length - 1) break;
      doms.push( /* @__PURE__ */React.createElement("span", {
        key: "".concat(index, "filter"),
        className: "".concat(name, "-label--filter")
      }, inputVal));
    }

    return /* @__PURE__ */React.createElement(React.Fragment, null, doms, EllipsisNode);
  }

  return /* @__PURE__ */React.createElement(React.Fragment, null, labelText, EllipsisNode);
};

var RenderLabelContent = function RenderLabelContent(node, cascaderContext) {
  var _useConfig = useConfig(),
      prefix = _useConfig.classPrefix;

  var name = "".concat(prefix, "-cascader__item");
  var label = RenderLabelInner(name, node, cascaderContext);
  return /* @__PURE__ */React.createElement("span", {
    className: "".concat(name, "-label"),
    role: "label"
  }, label);
};

var RenderCheckBox = function RenderCheckBox(node, cascaderContext, handleChange) {
  var _useConfig2 = useConfig(),
      prefix = _useConfig2.classPrefix;

  var name = "".concat(prefix, "-cascader__item");
  var checkProps = cascaderContext.checkProps,
      value = cascaderContext.value,
      max = cascaderContext.max;
  var label = RenderLabelInner(name, node, cascaderContext);
  return /* @__PURE__ */React.createElement(Checkbox, _objectSpread(_objectSpread({}, checkProps), {}, {
    checked: node.checked,
    indeterminate: node.indeterminate,
    disabled: node.isDisabled() || value && value.length >= max && max !== 0,
    name: node.value,
    onChange: handleChange
  }), label);
};

var Item = /*#__PURE__*/forwardRef(function (props, ref) {
  var node = props.node,
      _props$cascaderContex = props.cascaderContext,
      multiple = _props$cascaderContex.multiple,
      loadingText = _props$cascaderContex.loadingText,
      onClick = props.onClick,
      onChange = props.onChange,
      onMouseEnter = props.onMouseEnter,
      cascaderContext = props.cascaderContext;

  var _useConfig3 = useConfig(),
      prefix = _useConfig3.classPrefix;

  var itemRef = useRef();
  useRipple(ref || itemRef);
  var CLASSNAMES = useCommonClassName();
  var itemClass = useMemo(function () {
    return classNames(getCascaderItemClass(prefix, node, CLASSNAMES, cascaderContext));
  }, [prefix, node, CLASSNAMES, cascaderContext]);
  var iconClass = useMemo(function () {
    return classNames(getCascaderItemIconClass(prefix, node, CLASSNAMES, cascaderContext));
  }, [prefix, node, CLASSNAMES, cascaderContext]);

  var handleClick = function handleClick(e) {
    var _e$nativeEvent, _e$nativeEvent$stopIm;

    e.stopPropagation();
    e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$stopIm = _e$nativeEvent.stopImmediatePropagation) === null || _e$nativeEvent$stopIm === void 0 ? void 0 : _e$nativeEvent$stopIm.call(_e$nativeEvent);
    var ctx = {
      e: e,
      node: node
    };
    onClick(ctx);
  };

  var handleChange = function handleChange(e) {
    var ctx = {
      e: e,
      node: node
    };
    onChange(ctx);
  };

  var handleMouseenter = function handleMouseenter(e) {
    e.stopPropagation();
    var ctx = {
      e: e,
      node: node
    };
    onMouseEnter(ctx);
  };

  return /* @__PURE__ */React.createElement("li", {
    ref: ref || itemRef,
    className: itemClass,
    onClick: handleClick,
    onMouseEnter: handleMouseenter
  }, multiple ? RenderCheckBox(node, cascaderContext, handleChange) : RenderLabelContent(node, cascaderContext), node.children && (node.loading ? /* @__PURE__ */React.createElement(Loading, {
    className: iconClass,
    loading: true,
    text: loadingText,
    size: "small"
  }) : /* @__PURE__ */React.createElement(ChevronRightIcon, {
    className: iconClass
  })));
});

export { Item as default };
//# sourceMappingURL=Item.js.map
