/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../_chunks/dep-4705ff31.js';
import { f as fetchListInstance, l as listMap } from '../_chunks/dep-777489ae.js';
import '../_chunks/dep-08260abc.js';
import 'react';
import 'classnames';
import 'tdesign-icons-react';
import '../_chunks/dep-bd2639ad.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_chunks/dep-744640f5.js';
import 'react-dom';
import '../_util/useConfig.js';
import '../_chunks/dep-e3ed7551.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-ac0cc4dd.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-febf8cf9.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-67009882.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/zh_CN_config.js';
import '../_util/noop.js';
import './defaultProps.js';

var renderNotification = function renderNotification(theme, options) {
  if (_typeof(options) !== "object") return;

  var placement = function () {
    if (["top-left", "top-right", "bottom-left", "bottom-right"].indexOf(options.placement) >= 0) {
      return options.placement;
    }

    return "top-right";
  }();

  var attach = function () {
    if (options.attach && typeof options.attach === "string") {
      var element2 = document.querySelector(options.attach);
      if (element2 instanceof HTMLElement) return element2;
    }

    if (options.attach instanceof HTMLElement) return options.attach;
    var containerId = "tdesign-notification-".concat(placement);
    var container = document.querySelector("#".concat(containerId));

    if (container && container instanceof HTMLElement) {
      return container;
    }

    var element = document.createElement("div");
    element.setAttribute("id", containerId);
    document.body.appendChild(element);
    return element;
  }();

  var zIndex = options.zIndex || 6e3;
  return fetchListInstance(placement, attach, zIndex).then(function (listInstance) {
    return listInstance.push(theme, options);
  });
};

var NotificationPlugin = function NotificationPlugin(theme, props) {
  return renderNotification(theme, props);
};

NotificationPlugin.info = function (options) {
  return renderNotification("info", options);
};

NotificationPlugin.success = function (options) {
  return renderNotification("success", options);
};

NotificationPlugin.warning = function (options) {
  return renderNotification("warning", options);
};

NotificationPlugin.error = function (options) {
  return renderNotification("error", options);
};

NotificationPlugin.close = function (promise) {
  return promise.then(function (instance) {
    return instance.close();
  });
};

NotificationPlugin.closeAll = function () {
  return listMap.forEach(function (list) {
    return list.removeAll();
  });
};

export { NotificationPlugin };
//# sourceMappingURL=NotificationPlugin.js.map
