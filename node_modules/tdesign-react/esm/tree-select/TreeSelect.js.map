{"version":3,"file":"TreeSelect.js","sources":["../../src/tree-select/TreeSelect.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, forwardRef, ElementRef, useEffect } from 'react';\n\nimport classNames from 'classnames';\nimport type { TdTreeSelectProps, TreeSelectValue } from './type';\nimport type { StyledProps } from '../common';\nimport useConfig from '../_util/useConfig';\nimport useControlled from '../hooks/useControlled';\n\nimport Tree, { TreeProps } from '../tree';\nimport SelectInput, { SelectInputProps } from '../select-input/SelectInput';\n\nimport { usePersistFn } from '../_util/usePersistFn';\nimport useSwitch from '../_util/useSwitch';\nimport noop from '../_util/noop';\nimport { useTreeSelectUtils } from './useTreeSelectUtils';\nimport { SelectArrow } from './SelectArrow';\nimport { useTreeSelectPassThroughProps } from './useTreeSelectPassthoughProps';\nimport { useTreeSelectLocale } from './useTreeSelectLocale';\nimport { treeSelectDefaultProps } from './defaultProps';\n\nexport interface TreeSelectProps extends TdTreeSelectProps, StyledProps {}\n\nexport interface NodeOptions {\n  label: string;\n  value: string | number;\n}\n\nconst useMergeFn = <T extends any[]>(...fns: Array<(...args: T) => void>) =>\n  usePersistFn((...args: T) => fns.forEach((fn) => fn?.(...args)));\n\nconst TreeSelect = forwardRef((props: TreeSelectProps, ref: React.Ref<HTMLDivElement>) => {\n  /* ---------------------------------config---------------------------------------- */\n\n  // 国际化文本初始化\n  const { placeholder, empty, loadingItem } = useTreeSelectLocale(props);\n\n  const { classPrefix } = useConfig();\n\n  /* ---------------------------------state---------------------------------------- */\n\n  const {\n    className,\n    onInputChange,\n    readonly,\n    disabled,\n    multiple,\n    prefixIcon,\n    loading,\n    size,\n    max,\n    data,\n    filter = (text, option) => option.label.includes(text),\n    filterable: rawFilterable,\n    onClear,\n    valueDisplay,\n    treeProps,\n    inputProps,\n    onBlur,\n    onFocus,\n    onSearch,\n    onRemove,\n  } = props;\n\n  const selectInputProps = useTreeSelectPassThroughProps(props);\n  const [value, onChange] = useControlled(props, 'value', props.onChange);\n  const [popupVisible, setPopupVisible] = useControlled(props, 'popupVisible', props.onPopupVisibleChange);\n  const [hover, hoverAction] = useSwitch();\n  const [filterInput, setFilterInput] = useControlled(props, 'inputValue', onInputChange);\n\n  const treeRef = useRef<ElementRef<typeof Tree>>();\n\n  const { normalizeValue, formatValue, getNodeItem } = useTreeSelectUtils(props, treeRef);\n\n  /* ---------------------------------computed value---------------------------------------- */\n\n  const filterable = rawFilterable || !!props.filter;\n\n  const normalizedValue = useMemo(() => {\n    const calcValue: TreeSelectValue[] = Array.isArray(value) ? value : [value];\n    return calcValue.reduce<NodeOptions[]>((result, value) => {\n      const normalized = normalizeValue(value);\n      normalized.value && result.push(normalized);\n      return result;\n    }, []);\n  }, [normalizeValue, value]);\n\n  const internalInputValue = useMemo(() => {\n    if (multiple) return normalizedValue;\n    // 可筛选、单选、弹框时内容为过滤值\n    return filterable && popupVisible ? filterInput : normalizedValue[0] || '';\n  }, [multiple, normalizedValue, filterable, popupVisible, filterInput]);\n\n  const inputPlaceholader = useMemo(() => {\n    // 可筛选、单选、弹框且有值时提示当前值\n    if (filterable && !multiple && popupVisible && normalizedValue.length) {\n      return typeof normalizedValue[0].label === 'string' ? normalizedValue[0].label : String(normalizedValue[0].value);\n    }\n    return placeholder;\n  }, [filterable, multiple, popupVisible, normalizedValue, placeholder]);\n\n  const showLoading = !disabled && loading;\n\n  // 多选不能过滤时需要展示假的 placeholder\n  const showFakePlaceholder = multiple && !filterable && !normalizedValue.length;\n\n  /* ---------------------------------handler---------------------------------------- */\n\n  const handleFilter = useCallback<TreeProps['filter']>(\n    (node) => (filterable ? filter(filterInput as string, node) : true),\n    [filter, filterInput, filterable],\n  );\n\n  const handleSingleChange = usePersistFn<TreeProps['onActive']>((value, context) => {\n    const $value = value.length ? value[0] : null;\n    onChange(formatValue($value, context.node.label), { ...context, trigger: $value === null ? 'uncheck' : 'check' });\n    // 单选选择后收起弹框\n    setPopupVisible(false, { trigger: 'trigger-element-click' });\n  });\n\n  const handleMultiChange = usePersistFn<TreeProps['onChange']>((value, context) => {\n    (max === 0 || value.length <= max) &&\n      onChange(\n        value.map((value) => formatValue(value, getNodeItem(value)?.label)),\n        { ...context, trigger: value.length > normalizedValue.length ? 'check' : 'uncheck' },\n      );\n  });\n\n  const handleClear = usePersistFn<SelectInputProps['onClear']>((ctx) => {\n    ctx.e.stopPropagation();\n    onChange(multiple ? [] : formatValue(null), {\n      node: null,\n      trigger: 'clear',\n      e: ctx.e as React.MouseEvent<any, any>,\n    });\n    onClear?.(ctx);\n    // 清空后收起弹框\n    setPopupVisible(false, { trigger: 'trigger-element-click' });\n  });\n\n  const handleRemove = usePersistFn((index: number, e?: React.MouseEvent<any, any>) => {\n    const node = getNodeItem(normalizedValue[index].value);\n    onChange(\n      normalizedValue.filter((value, i) => i !== index).map(({ value, label }) => formatValue(value, label)),\n      { node, trigger: 'tag-remove', e },\n    );\n    onRemove?.({ value: node.value, data: { value: node.value, label: node.label }, e });\n  });\n\n  const handleTagChange = usePersistFn<SelectInputProps['onTagChange']>((tags, ctx) => {\n    switch (ctx.trigger) {\n      case 'clear':\n        handleClear({ e: ctx.e as React.MouseEvent<SVGElement, MouseEvent> });\n        break;\n      case 'tag-remove':\n        handleRemove(ctx.index, ctx.e as React.MouseEvent<SVGElement, MouseEvent>);\n        break;\n      case 'backspace':\n        handleRemove(ctx.index);\n    }\n  });\n\n  const handleBlur = usePersistFn<SelectInputProps['onBlur']>((v, ctx) => {\n    onBlur?.({ value: multiple ? normalizedValue : normalizedValue[0], e: ctx.e });\n  });\n\n  const handleFocus = usePersistFn<SelectInputProps['onFocus']>((v, ctx) => {\n    onFocus?.({ value: multiple ? normalizedValue : normalizedValue[0], e: ctx.e });\n  });\n\n  const handleEnter = usePersistFn<SelectInputProps['onEnter']>((text) => {\n    onSearch?.(text as string);\n  });\n\n  const handleFilterChange = usePersistFn<SelectInputProps['onInputChange']>((value) => setFilterInput(value));\n\n  /* ---------------------------------effect---------------------------------------- */\n\n  useEffect(() => {\n    // 显示时清空过滤，隐藏时清空有动画会导致闪动\n    popupVisible && setFilterInput('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [popupVisible]);\n\n  useEffect(() => {\n    // 选中值时清空过滤项\n    setFilterInput('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  /* ---------------------------------render---------------------------------------- */\n\n  const renderTree = () => {\n    if (readonly) return empty;\n    if (showLoading) return loadingItem;\n    return (\n      <Tree\n        ref={treeRef}\n        hover\n        transition\n        expandAll\n        filter={handleFilter}\n        data={data}\n        disabled={disabled}\n        empty={empty}\n        allowFoldNodeOnFilter={true}\n        {...(multiple\n          ? {\n              checkable: true,\n              onChange: handleMultiChange,\n              value: normalizedValue.map(({ value }) => value),\n            }\n          : {\n              activable: true,\n              actived: normalizedValue.map(({ value }) => value),\n              onActive: handleSingleChange,\n            })}\n        {...treeProps}\n      />\n    );\n  };\n\n  const renderCollapsedItems = useMemo(\n    () =>\n      props.collapsedItems\n        ? () =>\n            props.collapsedItems({\n              value: normalizedValue,\n              collapsedSelectedItems: normalizedValue.slice(props.minCollapsedNum, normalizedValue.length),\n              count: normalizedValue.length - props.minCollapsedNum,\n            })\n        : null,\n    [normalizedValue, props],\n  );\n\n  const renderLabel = () =>\n    showFakePlaceholder ? (\n      <>\n        {prefixIcon}\n        <span className={`${classPrefix}-tree-select--placeholder`}>{placeholder}</span>\n      </>\n    ) : (\n      prefixIcon\n    );\n\n  const normalizedValueDisplay = () => {\n    if (typeof valueDisplay === 'string') return valueDisplay;\n    if (multiple) return ({ onClose }) => valueDisplay({ value: normalizedValue, onClose });\n    return normalizedValue.length ? (valueDisplay({ value: normalizedValue[0], onClose: noop }) as string) : '';\n  };\n\n  return (\n    <SelectInput\n      {...props.selectInputProps}\n      {...selectInputProps}\n      ref={ref}\n      className={classNames(\n        `${classPrefix}-tree-select`,\n        {\n          [`${classPrefix}-tree-select--without-input`]: multiple && !filterable,\n        },\n        className,\n      )}\n      value={internalInputValue}\n      inputValue={filterInput}\n      panel={renderTree()}\n      allowInput={multiple || filterable}\n      inputProps={{ ...inputProps, size }}\n      tagInputProps={{ size, excessTagsDisplayType: 'break-line', inputProps, tagProps: props.tagProps }}\n      placeholder={inputPlaceholader}\n      popupVisible={popupVisible && !disabled}\n      onInputChange={handleFilterChange}\n      onPopupVisibleChange={useMergeFn(setPopupVisible)}\n      onFocus={useMergeFn(handleFocus, () => setPopupVisible(true, { trigger: 'trigger-element-click' }))}\n      onBlur={useMergeFn(handleBlur)}\n      onClear={handleClear}\n      onTagChange={handleTagChange}\n      onEnter={handleEnter}\n      onMouseenter={hoverAction.on}\n      onMouseleave={hoverAction.off}\n      suffixIcon={\n        readonly ? null : (\n          <SelectArrow isActive={popupVisible} isHighlight={hover || popupVisible} disabled={disabled} />\n        )\n      }\n      collapsedItems={renderCollapsedItems}\n      label={renderLabel()}\n      valueDisplay={valueDisplay && normalizedValueDisplay()}\n    />\n  );\n});\n\nTreeSelect.displayName = 'TreeSelect';\nTreeSelect.defaultProps = treeSelectDefaultProps;\n\nexport default TreeSelect;\n"],"names":["useMergeFn","fns","usePersistFn","args","forEach","fn","TreeSelect","forwardRef","props","ref","useTreeSelectLocale","placeholder","empty","loadingItem","useConfig","classPrefix","className","onInputChange","readonly","disabled","multiple","prefixIcon","loading","size","max","data","filter","text","option","label","includes","rawFilterable","filterable","onClear","valueDisplay","treeProps","inputProps","onBlur","onFocus","onSearch","onRemove","selectInputProps","useTreeSelectPassThroughProps","useControlled","onChange","value","onPopupVisibleChange","popupVisible","setPopupVisible","useSwitch","hover","hoverAction","filterInput","setFilterInput","treeRef","useRef","useTreeSelectUtils","normalizeValue","formatValue","getNodeItem","normalizedValue","useMemo","calcValue","Array","isArray","reduce","result","value2","normalized","push","internalInputValue","inputPlaceholader","length","String","showLoading","showFakePlaceholder","handleFilter","useCallback","node","handleSingleChange","context","$value","trigger","handleMultiChange","map","value3","handleClear","ctx","e","stopPropagation","handleRemove","index","i","handleTagChange","tags","handleBlur","v","handleFocus","handleEnter","handleFilterChange","useEffect","renderTree","React","createElement","Tree","transition","expandAll","allowFoldNodeOnFilter","checkable","activable","actived","onActive","renderCollapsedItems","collapsedItems","collapsedSelectedItems","slice","minCollapsedNum","count","renderLabel","Fragment","normalizedValueDisplay","onClose","noop","SelectInput","classNames","inputValue","panel","allowInput","tagInputProps","excessTagsDisplayType","tagProps","onTagChange","onEnter","onMouseenter","on","onMouseleave","off","suffixIcon","SelectArrow","isActive","isHighlight","displayName","defaultProps","treeSelectDefaultProps"],"mappings":"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"}