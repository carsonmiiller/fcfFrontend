/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-08260abc.js';
import { useMemo } from 'react';
import { TreeStore } from '../_common/js/tree/tree-store.js';
import { usePersistFn } from '../_util/usePersistFn.js';
import '../_chunks/dep-48a49a3a.js';
import '../_chunks/dep-0874974f.js';
import '../_chunks/dep-12690e1d.js';
import '../_chunks/dep-b8db0e27.js';
import '../_chunks/dep-e3ab6b0d.js';
import '../_chunks/dep-cc4f2bae.js';
import '../_chunks/dep-531703d1.js';
import '../_chunks/dep-21baa91f.js';
import '../_chunks/dep-4705ff31.js';
import '../_chunks/dep-38424935.js';
import '../_chunks/dep-ad150068.js';
import '../_chunks/dep-d5f141ac.js';
import '../_chunks/dep-1b27e5c2.js';
import '../_chunks/dep-b029028f.js';
import '../_chunks/dep-e8f6f682.js';
import '../_chunks/dep-a1fd625f.js';
import '../_chunks/dep-863396c0.js';
import '../_chunks/dep-12718f01.js';
import '../_chunks/dep-09c318fb.js';
import '../_chunks/dep-3cff266a.js';
import '../_chunks/dep-43a6fda3.js';
import '../_chunks/dep-074143e4.js';
import '../_chunks/dep-6963df41.js';
import '../_chunks/dep-8fb1642c.js';
import '../_chunks/dep-bcb59ae2.js';
import '../_chunks/dep-048c506f.js';
import '../_chunks/dep-9be29560.js';
import '../_chunks/dep-0db6b692.js';
import '../_chunks/dep-6d2697ef.js';
import '../_chunks/dep-42701b6c.js';
import '../_common/js/tree/tree-node.js';
import '../_chunks/dep-191c9ee3.js';
import '../_chunks/dep-bd2639ad.js';
import '../_chunks/dep-0e5be0b2.js';
import '../_chunks/dep-71b3c60f.js';
import '../_chunks/dep-084711a9.js';
import '../_common/js/tree/tree-node-model.js';
import '../_chunks/dep-14dc871a.js';
import '../_chunks/dep-d8cdbac1.js';
import '../_chunks/dep-f5ab8a5c.js';
import '../_chunks/dep-b9ff0943.js';
import '../_common/js/log/log.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var useTreeSelectUtils = function useTreeSelectUtils(_ref, treeRef) {
  var data = _ref.data,
      treeProps = _ref.treeProps,
      valueType = _ref.valueType;
  var defaultStore = useMemo(function () {
    var store = new TreeStore(_objectSpread({}, treeProps));
    store.append(data);
    return store;
  }, [data, treeProps]);
  var getNodeItem = usePersistFn(function (value) {
    var _defaultStore$getNode;

    if (treeRef.current) {
      return treeRef.current.getItem(value);
    }

    return (_defaultStore$getNode = defaultStore.getNode(value)) === null || _defaultStore$getNode === void 0 ? void 0 : _defaultStore$getNode.getModel();
  });
  var formatValue = usePersistFn(function (value) {
    var _treeProps$keys$value, _treeProps$keys, _treeProps$keys$label, _treeProps$keys2, _ref2;

    var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(value);
    var valueKey = (_treeProps$keys$value = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys = treeProps.keys) === null || _treeProps$keys === void 0 ? void 0 : _treeProps$keys.value) !== null && _treeProps$keys$value !== void 0 ? _treeProps$keys$value : "value";
    var labelKey = (_treeProps$keys$label = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys2 = treeProps.keys) === null || _treeProps$keys2 === void 0 ? void 0 : _treeProps$keys2.label) !== null && _treeProps$keys$label !== void 0 ? _treeProps$keys$label : "label";
    return value && valueType === "object" ? (_ref2 = {}, _defineProperty(_ref2, valueKey, value), _defineProperty(_ref2, labelKey, label), _ref2) : value;
  });
  var normalizeValue = usePersistFn(function (value) {
    var _treeProps$keys$value2, _treeProps$keys3, _node$label;

    var valueKey = (_treeProps$keys$value2 = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys3 = treeProps.keys) === null || _treeProps$keys3 === void 0 ? void 0 : _treeProps$keys3.value) !== null && _treeProps$keys$value2 !== void 0 ? _treeProps$keys$value2 : "value";
    var realValue = valueType === "value" ? value : value === null || value === void 0 ? void 0 : value[valueKey];
    var node = getNodeItem(realValue);
    return {
      value: realValue,
      label: (_node$label = node === null || node === void 0 ? void 0 : node.label) !== null && _node$label !== void 0 ? _node$label : String(realValue)
    };
  });
  return {
    getNodeItem: getNodeItem,
    formatValue: formatValue,
    normalizeValue: normalizeValue
  };
};

export { useTreeSelectUtils };
//# sourceMappingURL=useTreeSelectUtils.js.map
