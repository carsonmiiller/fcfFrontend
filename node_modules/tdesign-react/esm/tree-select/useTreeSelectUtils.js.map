{"version":3,"file":"useTreeSelectUtils.js","sources":["../../src/tree-select/useTreeSelectUtils.ts"],"sourcesContent":["import { ElementRef, MutableRefObject, useMemo } from 'react';\nimport type { TreeSelectValue } from './type';\nimport Tree, { TreeNodeValue } from '../tree';\nimport TreeStore from '../_common/js/tree/tree-store';\nimport { usePersistFn } from '../_util/usePersistFn';\nimport type { NodeOptions, TreeSelectProps } from './TreeSelect';\n\nexport const useTreeSelectUtils = (\n  { data, treeProps, valueType }: TreeSelectProps,\n  treeRef: MutableRefObject<ElementRef<typeof Tree>>,\n) => {\n  const defaultStore = useMemo(() => {\n    const store = new TreeStore({ ...treeProps });\n    store.append(data);\n    return store;\n  }, [data, treeProps]);\n\n  const getNodeItem = usePersistFn((value: string | number) => {\n    if (treeRef.current) {\n      return treeRef.current.getItem(value);\n    }\n    return defaultStore.getNode(value)?.getModel();\n  });\n\n  const formatValue = usePersistFn((value: TreeNodeValue | null, label = String(value)) => {\n    const valueKey = treeProps?.keys?.value ?? 'value';\n    const labelKey = treeProps?.keys?.label ?? 'label';\n    return value && valueType === 'object' ? { [valueKey]: value, [labelKey]: label } : value;\n  });\n\n  const normalizeValue = usePersistFn((value: TreeSelectValue) => {\n    const valueKey = treeProps?.keys?.value ?? 'value';\n    const realValue = valueType === 'value' ? (value as string) : (value as NodeOptions)?.[valueKey];\n    const node = getNodeItem(realValue);\n    return {\n      value: realValue,\n      label: node?.label ?? String(realValue),\n    };\n  });\n\n  return {\n    getNodeItem,\n    formatValue,\n    normalizeValue,\n  };\n};\n"],"names":["useTreeSelectUtils","treeRef","data","treeProps","valueType","defaultStore","useMemo","store","TreeStore","append","getNodeItem","usePersistFn","value","current","getItem","getNode","getModel","formatValue","label","String","valueKey","keys","labelKey","normalizeValue","realValue","node"],"mappings":"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"}