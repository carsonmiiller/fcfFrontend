/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-08260abc.js';
import React from 'react';
import classNames from 'classnames';
import useConfig from '../../_util/useConfig.js';
import { extractTimeObj } from '../../_common/js/date-picker/utils-new.js';
import '../../_chunks/dep-e3ed7551.js';
import '../../_chunks/dep-12690e1d.js';
import '../../_chunks/dep-ac0cc4dd.js';
import '../../_chunks/dep-e3ab6b0d.js';
import '../../_chunks/dep-cc4f2bae.js';
import '../../_chunks/dep-531703d1.js';
import '../../_chunks/dep-21baa91f.js';
import '../../_chunks/dep-4705ff31.js';
import '../../_chunks/dep-38424935.js';
import '../../_chunks/dep-ad150068.js';
import '../../_chunks/dep-d5f141ac.js';
import '../../_chunks/dep-1b27e5c2.js';
import '../../_chunks/dep-6963df41.js';
import '../../_chunks/dep-8fb1642c.js';
import '../../_chunks/dep-bcb59ae2.js';
import '../../_chunks/dep-12718f01.js';
import '../../_chunks/dep-09c318fb.js';
import '../../_chunks/dep-048c506f.js';
import '../../_chunks/dep-febf8cf9.js';
import '../../_chunks/dep-074143e4.js';
import '../../_chunks/dep-a1fd625f.js';
import '../../_chunks/dep-f5ab8a5c.js';
import '../../_chunks/dep-67009882.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../config-provider/zh_CN_config.js';
import '../../_chunks/dep-744640f5.js';
import '../../_chunks/dep-0e5be0b2.js';
import '../../_chunks/dep-3d09d1f3.js';
import '../../_chunks/dep-42701b6c.js';
import '../../_chunks/dep-87214e71.js';
import '../../_chunks/dep-5ed520e8.js';
import '../../_chunks/dep-863396c0.js';
import 'dayjs';

var DatePickerCell = function DatePickerCell(props) {
  var _classNames;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var text = props.text,
      value = props.value,
      timeValue = props.timeValue,
      active = props.active,
      highlight = props.highlight,
      disabled = props.disabled,
      startOfRange = props.startOfRange,
      endOfRange = props.endOfRange,
      hoverHighlight = props.hoverHighlight,
      hoverStartOfRange = props.hoverStartOfRange,
      hoverEndOfRange = props.hoverEndOfRange,
      additional = props.additional,
      now = props.now,
      firstDayOfMonth = props.firstDayOfMonth,
      lastDayOfMonth = props.lastDayOfMonth,
      onClick = props.onClick,
      onMouseEnter = props.onMouseEnter;
  var cellClass = classNames("".concat(classPrefix, "-date-picker__cell"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--now"), now), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--active"), active), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--highlight"), highlight), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--hover-highlight"), hoverHighlight), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--active-start"), startOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--active-end"), endOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--hover-start"), hoverStartOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--hover-end"), hoverEndOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--additional"), additional), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--first-day-of-month"), firstDayOfMonth), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--last-day-of-month"), lastDayOfMonth), _classNames));

  function handleClick(e) {
    if (disabled) return;

    if (timeValue) {
      var _extractTimeObj = extractTimeObj(timeValue),
          hours = _extractTimeObj.hours,
          minutes = _extractTimeObj.minutes,
          seconds = _extractTimeObj.seconds,
          milliseconds = _extractTimeObj.milliseconds,
          meridiem = _extractTimeObj.meridiem;

      var nextHours = hours;
      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
      value.setHours(nextHours);
      value.setMinutes(minutes);
      value.setSeconds(seconds);
      value.setMilliseconds(milliseconds);
    }

    onClick === null || onClick === void 0 ? void 0 : onClick(value, {
      e: e
    });
  }

  function handleMouseEnter() {
    if (disabled) return;

    if (timeValue) {
      var _extractTimeObj2 = extractTimeObj(timeValue),
          hours = _extractTimeObj2.hours,
          minutes = _extractTimeObj2.minutes,
          seconds = _extractTimeObj2.seconds,
          milliseconds = _extractTimeObj2.milliseconds,
          meridiem = _extractTimeObj2.meridiem;

      var nextHours = hours;
      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
      value.setHours(nextHours);
      value.setMinutes(minutes);
      value.setSeconds(seconds);
      value.setMilliseconds(milliseconds);
    }

    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(value);
  }

  return /* @__PURE__ */React.createElement("td", {
    className: cellClass,
    onClick: handleClick,
    onMouseEnter: handleMouseEnter
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-date-picker__cell-inner")
  }, text));
};

DatePickerCell.displayName = "DatePickerCell";

export { DatePickerCell as default };
//# sourceMappingURL=Cell.js.map
