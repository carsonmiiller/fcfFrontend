{"version":3,"file":"useFormat.js","sources":["../../../src/date-picker/hooks/useFormat.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport type { DateValue, TdDatePickerProps, TdDateRangePickerProps } from '../type';\nimport { extractTimeFormat } from '../../_common/js/date-picker/utils-new';\n\nexport interface formatProps {\n  mode: TdDatePickerProps['mode'];\n  format: TdDatePickerProps['format'];\n  valueType: TdDatePickerProps['valueType'];\n  enableTimePicker: TdDatePickerProps['enableTimePicker'];\n  value: TdDatePickerProps['value'] | TdDateRangePickerProps['value'];\n}\n\nexport const TIME_FORMAT = 'HH:mm:ss';\n\nexport default function useFormat(props: formatProps) {\n  const { mode, enableTimePicker, format: formatFromProps, valueType: valueTypeFromProps, value } = props;\n  const { format, valueType, timeFormat } = getDefaultFormat({\n    mode,\n    enableTimePicker,\n    format: formatFromProps,\n    valueType: valueTypeFromProps,\n  });\n\n  if (enableTimePicker) {\n    if (!extractTimeFormat(format)) console.error(`format: ${format} 不规范，包含时间选择必须要有时间格式化 HH:mm:ss`);\n    if (!extractTimeFormat(valueType) && valueType !== 'time-stamp')\n      console.error(`valueType: ${valueType} 不规范，包含时间选择必须要有时间格式化 HH:mm:ss`);\n  }\n\n  // 日期格式化\n  const formatDate = (newDate: DateValue | DateValue[], type = 'format') => {\n    const formatMap = { format, valueType };\n    const targetFormat = formatMap[type];\n\n    let result;\n\n    if (Array.isArray(newDate)) {\n      result = formatRange({ newDate, format, targetFormat });\n      // 格式化失败提示\n      if (result.some((r) => r === 'Invalid Date')) {\n        console.error(\n          `请检查 format、valueType、value 格式是否有效.\\nformat: '${format}' valueType: '${valueType}' value: '${value}'`,\n        );\n        return [];\n      }\n    } else {\n      result = formatSingle({ newDate, format, targetFormat });\n      // 格式化失败提示\n      if (result === 'Invalid Date') {\n        console.error(\n          `请检查 format、valueType、value 格式是否有效.\\nformat: '${format}' valueType: '${valueType}' value: '${value}'`,\n        );\n        return '';\n      }\n    }\n\n    return result;\n  };\n\n  function isValidDate(value: DateValue | DateValue[], type = 'format') {\n    const formatMap = { format, valueType };\n    const realFormat = formatMap[type];\n\n    if (Array.isArray(value)) {\n      if (realFormat === 'time-stamp') return value.every((v) => dayjs(v).isValid());\n      return value.every((v) => dayjs(v, realFormat, true).isValid());\n    }\n\n    if (realFormat === 'time-stamp') return dayjs(value).isValid();\n    return dayjs(value, realFormat, true).isValid();\n  }\n\n  function formatTime(value: DateValue | DateValue[]) {\n    let result;\n\n    if (Array.isArray(value)) {\n      result = value.map((v) => dayjs(v).format(timeFormat));\n    } else {\n      result = dayjs(value as DateValue).format(timeFormat);\n    }\n\n    return result;\n  }\n\n  return {\n    format,\n    valueType,\n    isValidDate,\n    timeFormat,\n    formatTime,\n    formatDate,\n    getDefaultFormat,\n  };\n}\n\n// 格式化 range\nfunction formatRange({ newDate, format, targetFormat }) {\n  if (!newDate || !Array.isArray(newDate)) return [];\n\n  const dayjsDateList = newDate.map((d) => d && (dayjs(d).isValid() ? dayjs(d) : dayjs(d, format)));\n\n  // 保证后面的时间大于前面的时间\n  if (\n    dayjsDateList[0] &&\n    dayjsDateList[1] &&\n    dayjsDateList[0].toDate().getTime() > dayjsDateList[1].toDate().getTime()\n  ) {\n    dayjsDateList.fill(dayjsDateList[1]);\n  }\n\n  // valueType = 'time-stamp' 返回时间戳\n  if (targetFormat === 'time-stamp') {\n    return dayjsDateList.map((da) => da && da.toDate().getTime());\n  }\n\n  return dayjsDateList.map((da) => da && da.format(targetFormat));\n}\n\n// 格式化单选\nfunction formatSingle({ newDate, format, targetFormat }) {\n  if (!newDate) return '';\n\n  const dayJsDate = dayjs(newDate).isValid() ? dayjs(newDate) : dayjs(newDate, format);\n\n  // valueType = 'time-stamp' 返回时间戳\n  if (targetFormat === 'time-stamp') return dayJsDate.toDate().getTime();\n\n  return dayJsDate.format(targetFormat);\n}\n\n// 根据不同 mode 给出格式化默认值\nexport function getDefaultFormat({\n  mode = 'date',\n  format,\n  valueType,\n  enableTimePicker,\n}: {\n  mode?: string;\n  format?: string;\n  valueType?: string;\n  enableTimePicker?: boolean;\n}) {\n  if (mode === 'year') {\n    return {\n      format: format || 'YYYY',\n      valueType: valueType || 'YYYY',\n      timeFormat: extractTimeFormat(format || 'YYYY') || TIME_FORMAT,\n    };\n  }\n  if (mode === 'month') {\n    return {\n      format: format || 'YYYY-MM',\n      valueType: valueType || 'YYYY-MM',\n      timeFormat: extractTimeFormat(format || 'YYYY-MM') || TIME_FORMAT,\n    };\n  }\n  if (mode === 'date') {\n    return {\n      format: format || `YYYY-MM-DD${enableTimePicker ? ' HH:mm:ss' : ''}`,\n      valueType: valueType || `YYYY-MM-DD${enableTimePicker ? ' HH:mm:ss' : ''}`,\n      timeFormat: extractTimeFormat(format || `YYYY-MM-DD${enableTimePicker ? ' HH:mm:ss' : ''}`) || TIME_FORMAT,\n    };\n  }\n}\n"],"names":["TIME_FORMAT","useFormat","props","mode","enableTimePicker","formatFromProps","format","valueTypeFromProps","valueType","value","getDefaultFormat","timeFormat","extractTimeFormat","console","error","formatDate","newDate","type","formatMap","targetFormat","result","Array","isArray","formatRange","some","r","formatSingle","isValidDate","value2","realFormat","every","v","dayjs","isValid","formatTime","map","dayjsDateList","d","toDate","getTime","fill","da","dayJsDate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,WAAW,GAAG,WAApB;AACQ,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,EAAA,IAAQC,IAAR,GAAkGD,KAAlG,CAAQC,IAAR;AAAA,MAAcC,gBAAd,GAAkGF,KAAlG,CAAcE,gBAAd;AAAA,MAAwCC,eAAxC,GAAkGH,KAAlG,CAAgCI,MAAhC;AAAA,MAAoEC,kBAApE,GAAkGL,KAAlG,CAAyDM,SAAzD;AAAA,MAAwFC,KAAxF,GAAkGP,KAAlG,CAAwFO,KAAxF,CAAA;;AACA,EAAA,IAAA,iBAAA,GAA0CC,gBAAgB,CAAC;AACzDP,IAAAA,IAAI,EAAJA,IADyD;AAEzDC,IAAAA,gBAAgB,EAAhBA,gBAFyD;AAGzDE,IAAAA,MAAM,EAAED,eAHiD;AAIzDG,IAAAA,SAAS,EAAED,kBAAAA;AAJ8C,GAAD,CAA1D;MAAQD,MAAR,qBAAQA,MAAR;MAAgBE,SAAhB,qBAAgBA,SAAhB;MAA2BG,UAA3B,qBAA2BA,UAA3B,CAAA;;AAMA,EAAA,IAAIP,gBAAJ,EAAsB;IACpB,IAAI,CAACQ,iBAAiB,CAACN,MAAD,CAAtB,EACEO,OAAO,CAACC,KAAR,CAAA,UAAA,CAAA,MAAA,CAAyBR,MAAzB,EAAA,8HAAA,CAAA,CAAA,CAAA;AACF,IAAA,IAAI,CAACM,iBAAiB,CAACJ,SAAD,CAAlB,IAAiCA,SAAS,KAAK,YAAnD,EACEK,OAAO,CAACC,KAAR,sBAA4BN,SAA5B,EAAA,8HAAA,CAAA,CAAA,CAAA;AACH,GAAA;;AACD,EAAA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAA8B;IAAA,IAApBC,IAAoB,uEAAb,QAAa,CAAA;AAC/C,IAAA,IAAMC,SAAS,GAAG;AAAEZ,MAAAA,MAAM,EAANA,MAAF;AAAUE,MAAAA,SAAS,EAATA,SAAAA;KAA5B,CAAA;AACA,IAAA,IAAMW,YAAY,GAAGD,SAAS,CAACD,IAAD,CAA9B,CAAA;AACA,IAAA,IAAIG,MAAJ,CAAA;;AACA,IAAA,IAAIC,KAAK,CAACC,OAAN,CAAcN,OAAd,CAAJ,EAA4B;MAC1BI,MAAM,GAAGG,WAAW,CAAC;AAAEP,QAAAA,OAAO,EAAPA,OAAF;AAAWV,QAAAA,MAAM,EAANA,MAAX;AAAmBa,QAAAA,YAAY,EAAZA,YAAAA;AAAnB,OAAD,CAApB,CAAA;;AACA,MAAA,IAAIC,MAAM,CAACI,IAAP,CAAY,UAACC,CAAD,EAAA;QAAA,OAAOA,CAAC,KAAK,cAAb,CAAA;AAAA,OAAZ,CAAJ,EAA8C;AAC5CZ,QAAAA,OAAO,CAACC,KAAR,CAAA,sGAAA,CAAA,MAAA,CACGR,MADH,EAC0BE,gBAAAA,CAAAA,CAAAA,MAAAA,CAAAA,SAD1B,uBACgDC,KADhD,EAAA,GAAA,CAAA,CAAA,CAAA;AAEA,QAAA,OAAO,EAAP,CAAA;AACD,OAAA;AACF,KAPD,MAOO;MACLW,MAAM,GAAGM,YAAY,CAAC;AAAEV,QAAAA,OAAO,EAAPA,OAAF;AAAWV,QAAAA,MAAM,EAANA,MAAX;AAAmBa,QAAAA,YAAY,EAAZA,YAAAA;AAAnB,OAAD,CAArB,CAAA;;MACA,IAAIC,MAAM,KAAK,cAAf,EAA+B;AAC7BP,QAAAA,OAAO,CAACC,KAAR,CAAA,sGAAA,CAAA,MAAA,CACGR,MADH,EAC0BE,gBAAAA,CAAAA,CAAAA,MAAAA,CAAAA,SAD1B,uBACgDC,KADhD,EAAA,GAAA,CAAA,CAAA,CAAA;AAEA,QAAA,OAAO,EAAP,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAOW,MAAP,CAAA;GAnBF,CAAA;;EAqBA,SAASO,WAAT,CAAqBC,MAArB,EAA8C;IAAA,IAAjBX,IAAiB,uEAAV,QAAU,CAAA;AAC5C,IAAA,IAAMC,SAAS,GAAG;AAAEZ,MAAAA,MAAM,EAANA,MAAF;AAAUE,MAAAA,SAAS,EAATA,SAAAA;KAA5B,CAAA;AACA,IAAA,IAAMqB,UAAU,GAAGX,SAAS,CAACD,IAAD,CAA5B,CAAA;;AACA,IAAA,IAAII,KAAK,CAACC,OAAN,CAAcM,MAAd,CAAJ,EAA2B;MACzB,IAAIC,UAAU,KAAK,YAAnB,EACE,OAAOD,MAAM,CAACE,KAAP,CAAa,UAACC,CAAD,EAAA;AAAA,QAAA,OAAOC,KAAK,CAACD,CAAD,CAAL,CAASE,OAAT,EAAP,CAAA;AAAA,OAAb,CAAP,CAAA;AACF,MAAA,OAAOL,MAAM,CAACE,KAAP,CAAa,UAACC,CAAD,EAAA;QAAA,OAAOC,KAAK,CAACD,CAAD,EAAIF,UAAJ,EAAgB,IAAhB,CAAL,CAA2BI,OAA3B,EAAP,CAAA;AAAA,OAAb,CAAP,CAAA;AACD,KAAA;;IACD,IAAIJ,UAAU,KAAK,YAAnB,EACE,OAAOG,KAAK,CAACJ,MAAD,CAAL,CAAcK,OAAd,EAAP,CAAA;IACF,OAAOD,KAAK,CAACJ,MAAD,EAASC,UAAT,EAAqB,IAArB,CAAL,CAAgCI,OAAhC,EAAP,CAAA;AACD,GAAA;;EACD,SAASC,UAAT,CAAoBN,MAApB,EAA4B;AAC1B,IAAA,IAAIR,MAAJ,CAAA;;AACA,IAAA,IAAIC,KAAK,CAACC,OAAN,CAAcM,MAAd,CAAJ,EAA2B;AACzBR,MAAAA,MAAM,GAAGQ,MAAM,CAACO,GAAP,CAAW,UAACJ,CAAD,EAAA;QAAA,OAAOC,KAAK,CAACD,CAAD,CAAL,CAASzB,MAAT,CAAgBK,UAAhB,CAAP,CAAA;AAAA,OAAX,CAAT,CAAA;AACD,KAFD,MAEO;MACLS,MAAM,GAAGY,KAAK,CAACJ,MAAD,CAAL,CAActB,MAAd,CAAqBK,UAArB,CAAT,CAAA;AACD,KAAA;;AACD,IAAA,OAAOS,MAAP,CAAA;AACD,GAAA;;EACD,OAAO;AACLd,IAAAA,MAAM,EAANA,MADK;AAELE,IAAAA,SAAS,EAATA,SAFK;AAGLmB,IAAAA,WAAW,EAAXA,WAHK;AAILhB,IAAAA,UAAU,EAAVA,UAJK;AAKLuB,IAAAA,UAAU,EAAVA,UALK;AAMLnB,IAAAA,UAAU,EAAVA,UANK;AAOLL,IAAAA,gBAAgB,EAAhBA,gBAAAA;GAPF,CAAA;AASD,CAAA;;AACD,SAASa,WAAT,CAAwD,IAAA,EAAA;EAAA,IAAjCP,OAAiC,QAAjCA,OAAiC;MAAxBV,MAAwB,QAAxBA,MAAwB;MAAhBa,YAAgB,QAAhBA,YAAgB,CAAA;AACtD,EAAA,IAAI,CAACH,OAAD,IAAY,CAACK,KAAK,CAACC,OAAN,CAAcN,OAAd,CAAjB,EACE,OAAO,EAAP,CAAA;AACF,EAAA,IAAMoB,aAAa,GAAGpB,OAAO,CAACmB,GAAR,CAAY,UAACE,CAAD,EAAA;IAAA,OAAOA,CAAC,KAAKL,KAAK,CAACK,CAAD,CAAL,CAASJ,OAAT,EAAqBD,GAAAA,KAAK,CAACK,CAAD,CAA1B,GAAgCL,KAAK,CAACK,CAAD,EAAI/B,MAAJ,CAA1C,CAAR,CAAA;AAAA,GAAZ,CAAtB,CAAA;;AACA,EAAA,IAAI8B,aAAa,CAAC,CAAD,CAAb,IAAoBA,aAAa,CAAC,CAAD,CAAjC,IAAwCA,aAAa,CAAC,CAAD,CAAb,CAAiBE,MAAjB,EAA0BC,CAAAA,OAA1B,EAAsCH,GAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBE,MAAjB,EAAA,CAA0BC,OAA1B,EAAlF,EAAuH;AACrHH,IAAAA,aAAa,CAACI,IAAd,CAAmBJ,aAAa,CAAC,CAAD,CAAhC,CAAA,CAAA;AACD,GAAA;;EACD,IAAIjB,YAAY,KAAK,YAArB,EAAmC;AACjC,IAAA,OAAOiB,aAAa,CAACD,GAAd,CAAkB,UAACM,EAAD,EAAA;AAAA,MAAA,OAAQA,EAAE,IAAIA,EAAE,CAACH,MAAH,EAAA,CAAYC,OAAZ,EAAd,CAAA;AAAA,KAAlB,CAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAOH,aAAa,CAACD,GAAd,CAAkB,UAACM,EAAD,EAAA;AAAA,IAAA,OAAQA,EAAE,IAAIA,EAAE,CAACnC,MAAH,CAAUa,YAAV,CAAd,CAAA;AAAA,GAAlB,CAAP,CAAA;AACD,CAAA;;AACD,SAASO,YAAT,CAAyD,KAAA,EAAA;EAAA,IAAjCV,OAAiC,SAAjCA,OAAiC;MAAxBV,MAAwB,SAAxBA,MAAwB;MAAhBa,YAAgB,SAAhBA,YAAgB,CAAA;AACvD,EAAA,IAAI,CAACH,OAAL,EACE,OAAO,EAAP,CAAA;AACF,EAAA,IAAM0B,SAAS,GAAGV,KAAK,CAAChB,OAAD,CAAL,CAAeiB,OAAf,EAAA,GAA2BD,KAAK,CAAChB,OAAD,CAAhC,GAA4CgB,KAAK,CAAChB,OAAD,EAAUV,MAAV,CAAnE,CAAA;EACA,IAAIa,YAAY,KAAK,YAArB,EACE,OAAOuB,SAAS,CAACJ,MAAV,EAAmBC,CAAAA,OAAnB,EAAP,CAAA;AACF,EAAA,OAAOG,SAAS,CAACpC,MAAV,CAAiBa,YAAjB,CAAP,CAAA;AACD,CAAA;;AACM,SAAST,gBAAT,CAKJ,KAAA,EAAA;AAAA,EAAA,IAAA,UAAA,GAAA,KAAA,CAJDP,IAIC;MAJDA,IAIC,2BAJM,MAIN,GAAA,UAAA;MAHDG,MAGC,SAHDA,MAGC;MAFDE,SAEC,SAFDA,SAEC;MADDJ,gBACC,SADDA,gBACC,CAAA;;EACD,IAAID,IAAI,KAAK,MAAb,EAAqB;IACnB,OAAO;MACLG,MAAM,EAAEA,MAAM,IAAI,MADb;MAELE,SAAS,EAAEA,SAAS,IAAI,MAFnB;AAGLG,MAAAA,UAAU,EAAEC,iBAAiB,CAACN,MAAM,IAAI,MAAX,CAAjB,IAAuCN,WAAAA;KAHrD,CAAA;AAKD,GAAA;;EACD,IAAIG,IAAI,KAAK,OAAb,EAAsB;IACpB,OAAO;MACLG,MAAM,EAAEA,MAAM,IAAI,SADb;MAELE,SAAS,EAAEA,SAAS,IAAI,SAFnB;AAGLG,MAAAA,UAAU,EAAEC,iBAAiB,CAACN,MAAM,IAAI,SAAX,CAAjB,IAA0CN,WAAAA;KAHxD,CAAA;AAKD,GAAA;;EACD,IAAIG,IAAI,KAAK,MAAb,EAAqB;IACnB,OAAO;MACLG,MAAM,EAAEA,MAAM,IAAiBF,YAAAA,CAAAA,MAAAA,CAAAA,gBAAgB,GAAG,WAAH,GAAiB,EAAlD,CADT;MAELI,SAAS,EAAEA,SAAS,IAAiBJ,YAAAA,CAAAA,MAAAA,CAAAA,gBAAgB,GAAG,WAAH,GAAiB,EAAlD,CAFf;AAGLO,MAAAA,UAAU,EAAEC,iBAAiB,CAACN,MAAM,IAAiBF,YAAAA,CAAAA,MAAAA,CAAAA,gBAAgB,GAAG,WAAH,GAAiB,EAAlD,CAAP,CAAjB,IAAmFJ,WAAAA;KAHjG,CAAA;AAKD,GAAA;AACF;;;;"}