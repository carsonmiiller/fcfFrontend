{"version":3,"file":"dep-37aba3d2.js","sources":["../../src/avatar/AvararGroup.tsx","../../src/avatar/Avatar.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Avatar from './Avatar';\nimport Popup from '../popup/Popup';\nimport useConfig from '../_util/useConfig';\nimport { AvatarContextProvider } from './AvatarContext';\nimport { TdAvatarGroupProps } from './type';\nimport { StyledProps } from '../common';\nimport { avatarGroupDefaultProps } from './defaultProps';\n\nexport interface AvatarGroupProps extends TdAvatarGroupProps, StyledProps {\n  children?: React.ReactNode;\n}\nconst AvatarGroup = (props: AvatarGroupProps) => {\n  const { classPrefix } = useConfig();\n  const preClass = `${classPrefix}-avatar`;\n  const { className, cascading, collapseAvatar, max, placement, popupProps, size, children, ...avatarGroupProps } =\n    props;\n\n  const childrenList = React.Children.toArray(children);\n  let allChildrenList;\n  if (childrenList.length > 0) {\n    allChildrenList = childrenList.map((child: JSX.Element, index: number) =>\n      React.cloneElement(child, { key: `avatar-group-item-${index}`, ...child.props }),\n    );\n  }\n  const groupClass = classNames(`${preClass}-group`, className, {\n    [`${preClass}--offset-right`]: cascading === 'right-up',\n    [`${preClass}--offset-left`]: cascading === 'left-up',\n  });\n  const childrenCount = childrenList.length;\n  if (max && childrenCount > max) {\n    const showList = allChildrenList.slice(0, max);\n    const hiddenList = allChildrenList.slice(max, childrenCount);\n    const popupNum = `+${childrenCount - max}`;\n    const popupMergeProps = { ...popupProps, placement };\n    const popupNodes = popupProps ? (\n      <Popup {...popupMergeProps}>\n        {collapseAvatar ? <Avatar size={size}>{collapseAvatar}</Avatar> : <Avatar size={size}>{popupNum}</Avatar>}\n      </Popup>\n    ) : (\n      <Popup key=\"avatar-popup-key\" placement={placement} content={hiddenList} trigger=\"hover\" showArrow>\n        {collapseAvatar ? <Avatar size={size}>{collapseAvatar}</Avatar> : <Avatar size={size}>{popupNum}</Avatar>}\n      </Popup>\n    );\n    showList.push(popupNodes);\n    return (\n      <AvatarContextProvider size={size}>\n        <div className={groupClass}>{showList}</div>\n      </AvatarContextProvider>\n    );\n  }\n  return (\n    <AvatarContextProvider size={size}>\n      <div className={groupClass} {...avatarGroupProps}>\n        {allChildrenList}\n      </div>\n    </AvatarContextProvider>\n  );\n};\n\nAvatarGroup.displayName = 'AvatarGroup';\nAvatarGroup.defaultProps = avatarGroupDefaultProps;\n\nexport default AvatarGroup;\n","import React, { useRef, useState, useEffect, useContext, Ref } from 'react';\nimport useResizeObserver from 'use-resize-observer';\nimport classNames from 'classnames';\nimport useConfig from '../_util/useConfig';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport useCommonClassName from '../_util/useCommonClassName';\nimport composeRefs from '../_util/composeRefs';\nimport { TdAvatarProps } from './type';\nimport { StyledProps } from '../common';\nimport AvatarContext from './AvatarContext';\nimport AvatarGroup from './AvararGroup';\nimport { avatarDefaultProps } from './defaultProps';\n\nexport interface AvatarProps extends TdAvatarProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nconst Avatar = forwardRefWithStatics(\n  (props: AvatarProps, ref: Ref<HTMLElement>) => {\n    const {\n      alt,\n      hideOnLoadFailed,\n      icon,\n      image,\n      shape,\n      size: avatarSize,\n      onError,\n      children,\n      style,\n      className,\n      ...avatarProps\n    } = props;\n    const groupSize = useContext(AvatarContext);\n    const { classPrefix } = useConfig();\n    const [scale, setScale] = useState(1);\n    const [isImgExist, setIsImgExist] = useState(true);\n    const avatarRef = useRef<HTMLElement>(null);\n    const avatarChildrenRef = useRef<HTMLElement>(null);\n    const size = avatarSize === 'default' ? groupSize : avatarSize;\n    const gap = 4;\n    const handleScale = () => {\n      if (!avatarChildrenRef.current || !avatarRef.current) {\n        return;\n      }\n      const childrenWidth = avatarChildrenRef.current.offsetWidth;\n      const avatarWidth = avatarRef.current.offsetWidth;\n\n      if (childrenWidth !== 0 && avatarWidth !== 0) {\n        if (gap * 2 < avatarWidth) {\n          setScale(avatarWidth - gap * 2 < childrenWidth ? (avatarWidth - gap * 2) / childrenWidth : 1);\n        }\n      }\n    };\n    const { ref: observerRef } = useResizeObserver<HTMLDivElement>({\n      onResize: handleScale,\n    });\n\n    const handleImgLoadError = () => {\n      onError && onError();\n      !hideOnLoadFailed && setIsImgExist(false);\n    };\n\n    useEffect(() => {\n      setIsImgExist(true);\n      setScale(1);\n    }, [props.image]);\n\n    useEffect(() => {\n      handleScale();\n    }, []);\n\n    const { SIZE } = useCommonClassName();\n    const numSizeStyle: React.CSSProperties =\n      size && !SIZE[size]\n        ? {\n            width: size,\n            height: size,\n            fontSize: `${Number.parseInt(size, 10) / 2}px`,\n          }\n        : {};\n    const imageStyle: React.CSSProperties =\n      size && !SIZE[size]\n        ? {\n            width: size,\n            height: size,\n          }\n        : {};\n\n    const preClass = `${classPrefix}-avatar`;\n\n    const avatarClass = classNames(preClass, className, {\n      [SIZE[size]]: !!SIZE[size],\n      [`${preClass}--${shape}`]: !!shape,\n      [`${preClass}-icon`]: !!icon,\n    });\n\n    let content;\n    if (image && isImgExist) {\n      content = <img src={image} alt={alt} style={imageStyle} onError={handleImgLoadError} />;\n    } else if (icon) {\n      content = icon;\n    } else {\n      const childrenStyle: React.CSSProperties = {\n        transform: `scale(${scale})`,\n      };\n      content = (\n        <span ref={composeRefs(ref, avatarChildrenRef, observerRef) as any} style={childrenStyle}>\n          {children}\n        </span>\n      );\n    }\n    return (\n      <div\n        ref={composeRefs(ref, avatarRef) as any}\n        className={avatarClass}\n        style={{ ...numSizeStyle, ...style }}\n        {...avatarProps}\n      >\n        {content}\n      </div>\n    );\n  },\n  { Group: AvatarGroup },\n);\n\nAvatar.displayName = 'Avatar';\nAvatar.defaultProps = avatarDefaultProps;\n\nexport default Avatar;\n"],"names":["AvatarGroup","props","useConfig","classPrefix","preClass","className","cascading","collapseAvatar","max","placement","popupProps","size","children","avatarGroupProps","_excluded","childrenList","React","Children","toArray","allChildrenList","length","map","child","index","cloneElement","_objectSpread","key","groupClass","classNames","childrenCount","showList","slice","hiddenList","popupNum","popupMergeProps","popupNodes","createElement","Popup","Avatar","content","trigger","showArrow","push","AvatarContextProvider","displayName","defaultProps","avatarGroupDefaultProps","forwardRefWithStatics","ref","alt","hideOnLoadFailed","icon","image","shape","avatarSize","onError","style","avatarProps","groupSize","useContext","AvatarContext","useState","scale","setScale","isImgExist","setIsImgExist","avatarRef","useRef","avatarChildrenRef","gap","handleScale","current","childrenWidth","offsetWidth","avatarWidth","useResizeObserver","onResize","observerRef","handleImgLoadError","useEffect","useCommonClassName","SIZE","numSizeStyle","width","height","fontSize","Number","parseInt","imageStyle","avatarClass","src","childrenStyle","transform","composeRefs","Group","avatarDefaultProps"],"mappings":"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"}