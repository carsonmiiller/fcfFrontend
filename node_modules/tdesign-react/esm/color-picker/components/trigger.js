/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-08260abc.js';
import { _ as _slicedToArray } from '../../_chunks/dep-744640f5.js';
import React, { useState, useEffect } from 'react';
import classNames from 'classnames';
import { Input } from '../../input/index.js';
import { Color } from '../../_common/js/color-picker/color.js';
import useClassname from '../hooks/useClassname.js';
import '../../_chunks/dep-0e5be0b2.js';
import '../../input/Input.js';
import '../../_chunks/dep-4705ff31.js';
import '../../_chunks/dep-8ff4a741.js';
import 'tdesign-icons-react';
import '../../_chunks/dep-531703d1.js';
import '../../_chunks/dep-12690e1d.js';
import '../../_chunks/dep-21baa91f.js';
import '../../_chunks/dep-38424935.js';
import '../../_chunks/dep-ad150068.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../_util/useConfig.js';
import '../../_chunks/dep-e3ed7551.js';
import '../../_chunks/dep-ac0cc4dd.js';
import '../../_chunks/dep-e3ab6b0d.js';
import '../../_chunks/dep-cc4f2bae.js';
import '../../_chunks/dep-d5f141ac.js';
import '../../_chunks/dep-1b27e5c2.js';
import '../../_chunks/dep-6963df41.js';
import '../../_chunks/dep-8fb1642c.js';
import '../../_chunks/dep-bcb59ae2.js';
import '../../_chunks/dep-12718f01.js';
import '../../_chunks/dep-09c318fb.js';
import '../../_chunks/dep-048c506f.js';
import '../../_chunks/dep-febf8cf9.js';
import '../../_chunks/dep-074143e4.js';
import '../../_chunks/dep-a1fd625f.js';
import '../../_chunks/dep-f5ab8a5c.js';
import '../../_chunks/dep-67009882.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../config-provider/zh_CN_config.js';
import '../../_util/helper.js';
import '../../_chunks/dep-9be29560.js';
import '../../_chunks/dep-e8f6f682.js';
import '../../_chunks/dep-863396c0.js';
import '../../_chunks/dep-0db6b692.js';
import '../../_chunks/dep-6d2697ef.js';
import '../../_chunks/dep-42701b6c.js';
import '../../input/InputGroup.js';
import '../../hooks/useControlled.js';
import '../../_util/noop.js';
import '../../locale/LocalReceiver.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../input/defaultProps.js';
import '../../input/style/index.js';
import '../../input/type.js';
import '../../_chunks/dep-48a49a3a.js';
import 'tinycolor2';
import '../../_common/js/color-picker/cmyk.js';
import '../../_common/js/color-picker/gradient.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ColorPickerTrigger = function ColorPickerTrigger(props) {
  var baseClassName = useClassname();
  var _props$color = props.color,
      color = _props$color === void 0 ? "" : _props$color,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      _props$inputProps = props.inputProps,
      inputProps = _props$inputProps === void 0 ? {
    autoWidth: true
  } : _props$inputProps,
      onTriggerChange = props.onTriggerChange;

  var _useState = useState(color),
      _useState2 = _slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  var handleChange = function handleChange(input) {
    if (Color.isValid(input)) {
      setValue(input);
    } else {
      setValue(color);
    }
  };

  useEffect(function () {
    onTriggerChange(value);
  }, [value]);
  useEffect(function () {
    setValue(color);
  }, [color]);
  return /* @__PURE__ */React.createElement("div", {
    className: "".concat(baseClassName, "__trigger--default")
  }, /* @__PURE__ */React.createElement(Input, _objectSpread(_objectSpread({}, inputProps), {}, {
    value: value,
    disabled: disabled,
    label: /* @__PURE__ */React.createElement("div", {
      className: classNames("".concat(baseClassName, "__trigger--default__color"), "".concat(baseClassName, "--bg-alpha"))
    }, /* @__PURE__ */React.createElement("span", {
      className: "color-inner",
      style: {
        background: value
      }
    })),
    onBlur: handleChange,
    onChange: function onChange(v) {
      return setValue(v);
    }
  })));
};

var ColorTrigger = /*#__PURE__*/React.memo(ColorPickerTrigger);

export { ColorTrigger as default };
//# sourceMappingURL=trigger.js.map
