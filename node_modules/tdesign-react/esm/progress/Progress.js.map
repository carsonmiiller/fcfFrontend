{"version":3,"file":"Progress.js","sources":["../../src/progress/Progress.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport {\n  CheckCircleIcon,\n  CloseCircleIcon,\n  ErrorCircleIcon,\n  CheckCircleFilledIcon,\n  CloseCircleFilledIcon,\n  ErrorCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport useConfig from '../_util/useConfig';\nimport getBackgroundColor from '../_util/linearGradient';\nimport { StyledProps } from '../common';\nimport { TdProgressProps } from './type';\nimport { progressDefaultProps } from './defaultProps';\n\nexport interface ProgressProps extends TdProgressProps, StyledProps {}\n/**\n * 按钮组件\n */\nconst Progress = forwardRef((props: ProgressProps, ref: React.Ref<HTMLDivElement>) => {\n  const { theme, percentage, label, color = '', trackColor, strokeWidth, size, className } = props;\n  let { status } = props;\n  if (!status && percentage >= 100) {\n    status = 'success';\n  }\n  let iconMap = {\n    success: CheckCircleFilledIcon,\n    error: CloseCircleFilledIcon,\n    warning: ErrorCircleFilledIcon,\n  };\n  const { classPrefix } = useConfig();\n  // 进度条展示内容\n  const getInfoContent = () => {\n    if (!label) {\n      return '';\n    }\n    let info: React.ReactNode;\n    // 为布尔值，默认百分百展示，否则之间展示label内容\n    if (typeof label === 'boolean') {\n      info = <div className={`${classPrefix}-progress__info`}>{`${percentage}%`}</div>;\n      if (['success', 'error', 'warning'].includes(status)) {\n        const Icon = iconMap[status];\n        info = (\n          <div className={`${classPrefix}-progress__info`}>\n            <Icon className={`${classPrefix}-progress__icon`} />\n          </div>\n        );\n      }\n    } else {\n      info = <div className={`${classPrefix}-progress__info`}>{label}</div>;\n    }\n    return info;\n  };\n  const statusClassName = `${classPrefix}-progress--status--${status}`;\n  let progressDom;\n  if (theme === 'circle') {\n    iconMap = {\n      success: CheckCircleIcon,\n      error: CloseCircleIcon,\n      warning: ErrorCircleIcon,\n    };\n    // 获取直径\n    const getDiameter = (): number => {\n      let diameter = 112;\n      if (!size) {\n        return diameter;\n      }\n      switch (size) {\n        default:\n          diameter = Number(size);\n          break;\n        case 'small':\n          diameter = 72;\n          break;\n        case 'medium':\n          diameter = 112;\n          break;\n        case 'large':\n          diameter = 160;\n          break;\n      }\n      return diameter;\n    };\n    // 获取环形进度条 环的宽度\n    const getCircleStokeWidth = (): number => {\n      if (!strokeWidth) {\n        if (size === 'small') {\n          return 4;\n        }\n      }\n      if (typeof strokeWidth !== 'number' || Number.isNaN(strokeWidth)) {\n        return 6;\n      }\n      return strokeWidth;\n    };\n    // 环形进度条尺寸(进度条占位空间，长宽占位)\n    const circleStokeWidth = getCircleStokeWidth();\n    // 直径\n    const diameter = getDiameter();\n    // 半径\n    const radius = diameter / 2;\n    // 内环半径\n    const innerRadius = radius - circleStokeWidth;\n\n    const perimeter = Math.PI * 2 * radius;\n    const percent = percentage / 100;\n    const strokeDasharray = `${perimeter * percent}  ${perimeter * (1 - percent)}`;\n    // 自适应文字，根据半路，适度调整\n    const fontSizeRatio = innerRadius * 0.27;\n    const circleBoxStyle = {\n      width: diameter,\n      height: diameter,\n      fontSize: 4 + fontSizeRatio,\n    } as React.CSSProperties;\n    const circlePathStyle = {\n      stroke: color,\n      strokeLinecap: circleStokeWidth < 30 ? 'round' : 'buff',\n    } as React.CSSProperties;\n    const circleCenterInViewBox = radius + circleStokeWidth / 2;\n    progressDom = (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-progress--circle`, {\n          [`${statusClassName}`]: status,\n        })}\n        style={circleBoxStyle}\n      >\n        {getInfoContent()}\n        <svg\n          width={diameter}\n          height={diameter}\n          viewBox={`0 0 ${diameter + circleStokeWidth} ${diameter + circleStokeWidth}`}\n        >\n          <circle\n            cx={circleCenterInViewBox}\n            cy={circleCenterInViewBox}\n            r={radius}\n            strokeWidth={circleStokeWidth}\n            stroke={trackColor || 'var(--td-bg-color-component)'}\n            fill=\"none\"\n          ></circle>\n          {percentage > 0 && (\n            <circle\n              cx={circleCenterInViewBox}\n              cy={circleCenterInViewBox}\n              r={radius}\n              strokeWidth={circleStokeWidth}\n              fill=\"none\"\n              transform={`matrix(0,-1,1,0,0,${diameter + circleStokeWidth})`}\n              strokeDasharray={strokeDasharray}\n              className={`${classPrefix}-progress__circle-inner`}\n              style={circlePathStyle}\n            ></circle>\n          )}\n        </svg>\n      </div>\n    );\n    return <div className={className}>{progressDom}</div>;\n  }\n  // 进度条轨道高度\n  const getHeight = (): string => {\n    if (strokeWidth) {\n      return typeof strokeWidth === 'string' ? strokeWidth : `${strokeWidth}px`;\n    }\n  };\n  const trackStyle = {\n    height: getHeight(),\n    backgroundColor: trackColor,\n    borderRadius: getHeight(),\n  } as React.CSSProperties;\n  const barStyle = {\n    width: `${percentage}%`,\n    background: getBackgroundColor(color),\n    borderRadius: getHeight(),\n  } as React.CSSProperties;\n  if (theme === 'plump') {\n    const PLUMP_SEPARATE = 10;\n    progressDom = (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-progress__bar`, `${classPrefix}-progress--plump`, {\n          [`${statusClassName}`]: status,\n          [`${classPrefix}-progress--over-ten`]: percentage > PLUMP_SEPARATE,\n          [`${classPrefix}-progress--under-ten`]: percentage <= PLUMP_SEPARATE,\n        })}\n        style={trackStyle}\n      >\n        {percentage > PLUMP_SEPARATE ? (\n          <div className={`${classPrefix}-progress__inner`} style={barStyle}>\n            {label && (\n              <div className={`${classPrefix}-progress__info`} style={{ color: '#fff' }}>{`${percentage}%`}</div>\n            )}\n          </div>\n        ) : (\n          <>\n            <div className={`${classPrefix}-progress__inner`} style={barStyle}></div>\n            {label && <div className={`${classPrefix}-progress__info`}>{`${percentage}%`}</div>}\n          </>\n        )}\n      </div>\n    );\n  } else {\n    progressDom = (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-progress--thin`, {\n          [`${statusClassName}`]: status,\n        })}\n      >\n        <div className={`${classPrefix}-progress__bar`} style={trackStyle}>\n          <div className={`${classPrefix}-progress__inner`} style={barStyle}></div>\n        </div>\n        {getInfoContent()}\n      </div>\n    );\n  }\n  return <div className={className}>{progressDom}</div>;\n});\n\nProgress.displayName = 'Progress';\nProgress.defaultProps = progressDefaultProps;\n\nexport default Progress;\n"],"names":["Progress","forwardRef","props","ref","theme","percentage","label","color","trackColor","strokeWidth","size","className","status","iconMap","success","CheckCircleFilledIcon","error","CloseCircleFilledIcon","warning","ErrorCircleFilledIcon","useConfig","classPrefix","getInfoContent","info","React","createElement","includes","Icon","statusClassName","progressDom","CheckCircleIcon","CloseCircleIcon","ErrorCircleIcon","getDiameter","diameter2","Number","getCircleStokeWidth","isNaN","circleStokeWidth","diameter","radius","innerRadius","perimeter","Math","PI","percent","strokeDasharray","fontSizeRatio","circleBoxStyle","width","height","fontSize","circlePathStyle","stroke","strokeLinecap","circleCenterInViewBox","classNames","style","viewBox","cx","cy","r","fill","transform","getHeight","trackStyle","backgroundColor","borderRadius","barStyle","background","getBackgroundColor","PLUMP_SEPARATE","Fragment","displayName","defaultProps","progressDefaultProps"],"mappings":"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"}