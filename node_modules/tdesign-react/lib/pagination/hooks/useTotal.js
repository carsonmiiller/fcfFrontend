/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-3cf9becb.js');
var React = require('react');
var _util_useConfig = require('../../_util/useConfig.js');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
require('../../_chunks/dep-19841e1d.js');
require('../../_chunks/dep-38a46f48.js');
require('../../_chunks/dep-a1655de1.js');
require('../../_chunks/dep-8a149e9f.js');
require('../../_chunks/dep-3b69722d.js');
require('../../_chunks/dep-fde4d28a.js');
require('../../_chunks/dep-e266830c.js');
require('../../_chunks/dep-fcf32c81.js');
require('../../_chunks/dep-3405bda4.js');
require('../../_chunks/dep-15a4424e.js');
require('../../_chunks/dep-c40d75ac.js');
require('../../_chunks/dep-910dcfa3.js');
require('../../_chunks/dep-633a5671.js');
require('../../_chunks/dep-9c339ffc.js');
require('../../_chunks/dep-b1a67107.js');
require('../../_chunks/dep-ab43c961.js');
require('../../_chunks/dep-9cacaf01.js');
require('../../_chunks/dep-c72c7229.js');
require('../../_chunks/dep-8e0a771d.js');
require('../../_chunks/dep-c90cc28f.js');
require('../../_chunks/dep-542cc308.js');
require('../../_chunks/dep-c6637e11.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../config-provider/zh_CN_config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function useTotal(props) {
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("pagination"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var name = "".concat(classPrefix, "-pagination");
  var totalContent = props.totalContent,
      pageSize = props.pageSize,
      current = props.current,
      total = props.total;
  var totalContrl = null;
  if (totalContent === false) return {
    totalContrl: totalContrl
  };

  var renderTotalContent = function renderTotalContent() {
    if (typeof totalContent === "boolean") {
      return totalContent ? t(locale.total, {
        total: total
      }) : null;
    }

    if (typeof totalContent === "function") {
      var start = (current - 1) * pageSize;
      var end = Math.min(total, start + pageSize);
      return totalContent(total, [start + 1, end]);
    }

    return totalContent;
  };

  totalContrl = /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(name, "__total")
  }, renderTotalContent());
  return {
    totalContrl: totalContrl
  };
}

exports["default"] = useTotal;
//# sourceMappingURL=useTotal.js.map
