/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var slicedToArray = require('../_chunks/dep-3cf9becb.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var _util_noop = require('../_util/noop.js');
var hooks_useControlled = require('../hooks/useControlled.js');
var _util_useConfig = require('../_util/useConfig.js');
var rangeInput_index = require('../range-input/index.js');
var timePicker_panel_TimePickerPanel = require('./panel/TimePickerPanel.js');
var timePicker_hooks_useTimePickerTextConfig = require('./hooks/useTimePickerTextConfig.js');
var _common_js_timePicker_utils = require('../_common/js/time-picker/utils.js');
var _common_js_timePicker_const = require('../_common/js/time-picker/const.js');
var timePicker_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-19841e1d.js');
require('../_chunks/dep-f3090217.js');
require('../_chunks/dep-d4a0b3f0.js');
require('../_chunks/dep-6dfb2577.js');
require('../_chunks/dep-86abec96.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-cb0f33ac.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-e266830c.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');
require('../range-input/RangeInput.js');
require('../_chunks/dep-23535a52.js');
require('../input/index.js');
require('../input/Input.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../_util/helper.js');
require('../_chunks/dep-e3db5727.js');
require('../input/InputGroup.js');
require('../locale/LocalReceiver.js');
require('../input/defaultProps.js');
require('../range-input/defaultProps.js');
require('../range-input/RangeInputPopup.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../_util/useAnimation.js');
require('../_util/composeRefs.js');
require('../common/Portal.js');
require('react-dom');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-1d819290.js');
require('../_util/easing.js');
require('../popup/hooks/useTriggerProps.js');
require('../_util/useClickOutside.js');
require('../popup/utils/getTransitionParams.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-85b3eaa4.js');
require('../_chunks/dep-e19f22f6.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../select-input/useOverlayStyle.js');
require('dayjs');
require('../_chunks/dep-486c2bda.js');
require('../_chunks/dep-837b19c6.js');
require('../_chunks/dep-d97f1281.js');
require('../button/index.js');
require('../button/Button.js');
require('../_util/useRipple.js');
require('../_util/setStyle.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../button/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var defaultArrVal = [void 0, void 0];

var TimeRangePicker = function TimeRangePicker(props) {
  var TEXT_CONFIG = timePicker_hooks_useTimePickerTextConfig.useTimePickerTextConfig();
  var allowInput = props.allowInput,
      clearable = props.clearable,
      disabled = props.disabled,
      format = props.format,
      hideDisabledTime = props.hideDisabledTime,
      _props$placeholder = props.placeholder,
      placeholder = _props$placeholder === void 0 ? TEXT_CONFIG.rangePlaceholder : _props$placeholder,
      size = props.size,
      steps = props.steps,
      disableTime = props.disableTime,
      _props$onBlur = props.onBlur,
      onBlur = _props$onBlur === void 0 ? _util_noop["default"] : _props$onBlur,
      _props$onFocus = props.onFocus,
      onFocus = _props$onFocus === void 0 ? _util_noop["default"] : _props$onFocus,
      _props$onInput = props.onInput,
      onInput = _props$onInput === void 0 ? _util_noop["default"] : _props$onInput,
      style = props.style,
      className = props.className;

  var _useControlled = hooks_useControlled["default"](props, "value", props.onChange),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      value = _useControlled2[0],
      onChange = _useControlled2[1];

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      isPanelShowed = _useState2[0],
      setPanelShow = _useState2[1];

  var _useState3 = React.useState(void 0),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      currentPanelIdx = _useState4[0],
      setCurrentPanelIdx = _useState4[1];

  var _useState5 = React.useState(["", ""]),
      _useState6 = slicedToArray._slicedToArray(_useState5, 2),
      currentValue = _useState6[0],
      setCurrentValue = _useState6[1];

  var name = "".concat(classPrefix, "-time-picker");
  var inputClasses = classNames__default["default"]("".concat(name, "__group"), defineProperty._defineProperty({}, "".concat(classPrefix, "-is-focused"), isPanelShowed));

  var handleShowPopup = function handleShowPopup(visible) {
    setPanelShow(visible);
  };

  var handleClear = function handleClear(context) {
    var e = context.e;
    e.stopPropagation();
    onChange(void 0);
  };

  var handleClick = function handleClick(_ref) {
    var position = _ref.position;
    setCurrentPanelIdx(position === "first" ? 0 : 1);
  };

  var handleTimeChange = function handleTimeChange(newValue) {
    if (currentPanelIdx === 0) {
      var _currentValue$;

      setCurrentValue([newValue, (_currentValue$ = currentValue[1]) !== null && _currentValue$ !== void 0 ? _currentValue$ : newValue]);
    } else {
      var _currentValue$2;

      setCurrentValue([(_currentValue$2 = currentValue[0]) !== null && _currentValue$2 !== void 0 ? _currentValue$2 : newValue, newValue]);
    }
  };

  var handleInputBlur = function handleInputBlur(value2, _ref2) {
    var e = _ref2.e;

    if (allowInput) {
      var isValidTime = _common_js_timePicker_utils.validateInputValue(currentValue[currentPanelIdx], format);

      if (isValidTime) {
        var _currentValue$3, _currentValue$4;

        var formattedVal = _common_js_timePicker_utils.formatInputValue(currentValue[currentPanelIdx], format);
        currentPanelIdx === 0 ? setCurrentValue([formattedVal, (_currentValue$3 = currentValue[1]) !== null && _currentValue$3 !== void 0 ? _currentValue$3 : formattedVal]) : setCurrentValue([(_currentValue$4 = currentValue[0]) !== null && _currentValue$4 !== void 0 ? _currentValue$4 : formattedVal, formattedVal]);
      }
    }

    onBlur({
      value: value2,
      e: e
    });
  };

  var handleInputChange = function handleInputChange(inputVal, _ref3) {
    var e = _ref3.e,
        position = _ref3.position;
    setCurrentValue(inputVal);
    onInput({
      value: value,
      e: e,
      position: position
    });
  };

  var handleClickConfirm = function handleClickConfirm() {
    var isValidTime = !currentValue.find(function (v) {
      return !_common_js_timePicker_utils.validateInputValue(v, format);
    });
    if (isValidTime) onChange(currentValue);
    setPanelShow(false);
  };

  var handleFocus = function handleFocus(value2, _ref4) {
    var e = _ref4.e,
        position = _ref4.position;
    onFocus({
      value: value2,
      e: e,
      position: position
    });
  };

  React.useEffect(function () {
    setCurrentValue(isPanelShowed ? value !== null && value !== void 0 ? value : _common_js_timePicker_const.TIME_PICKER_EMPTY : defaultArrVal);
    if (!isPanelShowed) setCurrentPanelIdx(void 0);
  }, [isPanelShowed]);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](name, className),
    style: style
  }, /* @__PURE__ */React__default["default"].createElement(rangeInput_index.RangeInputPopup, {
    style: style,
    disabled: disabled,
    popupVisible: isPanelShowed,
    onPopupVisibleChange: handleShowPopup,
    popupProps: _objectSpread({
      overlayStyle: {
        width: "auto"
      }
    }, props.popupProps),
    onInputChange: handleInputChange,
    inputValue: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : defaultArrVal,
    rangeInputProps: _objectSpread({
      size: size,
      clearable: clearable,
      className: inputClasses,
      value: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : void 0,
      placeholder: placeholder,
      suffixIcon: /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.TimeIcon, null),
      onClear: handleClear,
      onClick: handleClick,
      onFocus: handleFocus,
      onBlur: handleInputBlur,
      readonly: !allowInput,
      activeIndex: currentPanelIdx
    }, props.rangeInputProps),
    panel: /* @__PURE__ */React__default["default"].createElement(timePicker_panel_TimePickerPanel["default"], {
      steps: steps,
      format: format,
      disableTime: disableTime,
      hideDisabledTime: hideDisabledTime,
      isFooterDisplay: true,
      value: currentValue[currentPanelIdx || 0],
      onChange: handleTimeChange,
      handleConfirmClick: handleClickConfirm,
      position: currentPanelIdx === 0 ? "start" : "end"
    })
  }));
};

TimeRangePicker.displayName = "TimeRangePicker";
TimeRangePicker.defaultProps = timePicker_defaultProps.timeRangePickerDefaultProps;

exports["default"] = TimeRangePicker;
//# sourceMappingURL=TimeRangePicker.js.map
