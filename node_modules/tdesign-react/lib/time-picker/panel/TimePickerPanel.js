/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-a1655de1.js');
var React = require('react');
var dayjs = require('dayjs');
var timePicker_panel_SinglePanel = require('../../_chunks/dep-486c2bda.js');
var _util_useConfig = require('../../_util/useConfig.js');
var button_index = require('../../button/index.js');
var timePicker_hooks_useTimePickerTextConfig = require('../hooks/useTimePickerTextConfig.js');
var _common_js_timePicker_const = require('../../_common/js/time-picker/const.js');
require('../../_chunks/dep-3cf9becb.js');
require('../../_chunks/dep-19841e1d.js');
require('classnames');
require('../../_chunks/dep-fcf32c81.js');
require('../../_chunks/dep-3405bda4.js');
require('../../_chunks/dep-85b3eaa4.js');
require('../../_chunks/dep-15a4424e.js');
require('../../_chunks/dep-e19f22f6.js');
require('../../_chunks/dep-cb0f33ac.js');
require('../../_chunks/dep-b1a67107.js');
require('../../_chunks/dep-86abec96.js');
require('../../_chunks/dep-c90cc28f.js');
require('../../_chunks/dep-d4a0b3f0.js');
require('../../_chunks/dep-6dfb2577.js');
require('../../_chunks/dep-837b19c6.js');
require('../../_chunks/dep-d97f1281.js');
require('../../_chunks/dep-c6637e11.js');
require('../../_chunks/dep-c40d75ac.js');
require('../../_chunks/dep-633a5671.js');
require('../../_chunks/dep-e266830c.js');
require('../../_chunks/dep-9c339ffc.js');
require('../../_chunks/dep-542cc308.js');
require('../../_util/noop.js');
require('../../_common/js/time-picker/utils.js');
require('../../_chunks/dep-38a46f48.js');
require('../../_chunks/dep-8a149e9f.js');
require('../../_chunks/dep-3b69722d.js');
require('../../_chunks/dep-fde4d28a.js');
require('../../_chunks/dep-910dcfa3.js');
require('../../_chunks/dep-ab43c961.js');
require('../../_chunks/dep-9cacaf01.js');
require('../../_chunks/dep-c72c7229.js');
require('../../_chunks/dep-8e0a771d.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../config-provider/zh_CN_config.js');
require('../../button/Button.js');
require('../../_chunks/dep-23535a52.js');
require('../../_util/useRipple.js');
require('../../_util/useAnimation.js');
require('../../_util/setStyle.js');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-1d819290.js');
require('../../_util/easing.js');
require('../../loading/index.js');
require('../../loading/Loading.js');
require('../../common/Portal.js');
require('react-dom');
require('../../loading/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('../../loading/defaultProps.js');
require('../../loading/plugin.js');
require('../../button/defaultProps.js');
require('../../locale/LocalReceiver.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var TimePickerPanel = function TimePickerPanel(props) {
  var _props$format = props.format,
      format = _props$format === void 0 ? _common_js_timePicker_const.DEFAULT_FORMAT : _props$format,
      _props$steps = props.steps,
      steps = _props$steps === void 0 ? _common_js_timePicker_const.DEFAULT_STEPS : _props$steps,
      handleConfirmClick = props.handleConfirmClick,
      isFooterDisplay = props.isFooterDisplay,
      onChange = props.onChange,
      value = props.value;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var TEXT_CONFIG = timePicker_hooks_useTimePickerTextConfig.useTimePickerTextConfig();
  var panelClassName = "".concat(classPrefix, "-time-picker__panel");
  var showNowTimeBtn = !!steps.filter(function (v) {
    return v > 1;
  }).length;
  var defaultValue = React.useMemo(function () {
    var isStepsSet = !!steps.filter(function (v) {
      return v > 1;
    }).length;

    if (value) {
      return dayjs__default["default"](value, format);
    }

    if (isStepsSet) {
      return dayjs__default["default"]().hour(0).minute(0).second(0);
    }

    return dayjs__default["default"]();
  }, [value, format, steps]);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: panelClassName
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(panelClassName, "-section-body")
  }, /* @__PURE__ */React__default["default"].createElement(timePicker_panel_SinglePanel.SinglePanel, _objectSpread(_objectSpread({}, props), {}, {
    format: format,
    steps: steps,
    value: value
  }))), isFooterDisplay ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(panelClassName, "-section-footer")
  }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "primary",
    variant: "base",
    onClick: function onClick() {
      handleConfirmClick(defaultValue);
    },
    size: "small"
  }, TEXT_CONFIG.confirm), !showNowTimeBtn ? /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "primary",
    variant: "text",
    size: "small",
    onClick: function onClick() {
      return onChange(dayjs__default["default"]().format(format));
    }
  }, TEXT_CONFIG.nowTime) : null) : null);
};

exports["default"] = TimePickerPanel;
//# sourceMappingURL=TimePickerPanel.js.map
