{"version":3,"file":"Collapse.js","sources":["../../src/collapse/Collapse.tsx"],"sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { TdCollapseProps, CollapsePanelValue, CollapseValue } from './type';\nimport { StyledProps } from '../common';\nimport useConfig from '../_util/useConfig';\nimport useControlled from '../hooks/useControlled';\nimport CollapsePanel from './CollapsePanel';\nimport CollapseContext from './CollapseContext';\nimport { collapseDefaultProps } from './defaultProps';\n\nexport interface CollapseProps extends TdCollapseProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nconst Collapse = (props: CollapseProps) => {\n  const { classPrefix } = useConfig();\n  const componentName = `${classPrefix}-collapse`;\n  const borderlessClass = `${classPrefix}--border-less`;\n  const { defaultExpandAll, disabled, expandIconPlacement, expandOnRowClick, expandIcon, ...rest } = props;\n  const { children, className, style, expandMutex, borderless, onChange } = rest;\n  const [collapseValue, setCollapseValue] = useControlled(props, 'value', onChange);\n\n  const updateCollapseValue = (value: CollapsePanelValue) => {\n    let newValue: CollapseValue = [].concat(collapseValue || []);\n    const index = newValue.indexOf(value);\n    if (index >= 0) {\n      newValue.splice(index, 1);\n    } else if (expandMutex) {\n      newValue = [value];\n    } else {\n      newValue.push(value);\n    }\n    setCollapseValue(newValue);\n  };\n\n  const classes = [\n    componentName,\n    {\n      [borderlessClass]: !!borderless,\n    },\n    className,\n  ];\n\n  const childrenList = React.Children.toArray(children).filter(\n    (child: JSX.Element) => child.type.displayName === CollapsePanel.displayName,\n  );\n\n  const collapsePanelList = () =>\n    childrenList.map((child: React.ReactElement, index: number) => {\n      const key = child.key || String(index);\n      const childProps = {\n        key,\n        index: index + 1,\n        ...child.props,\n      };\n      return React.cloneElement(child, childProps);\n    });\n\n  return (\n    <CollapseContext.Provider\n      value={{\n        defaultExpandAll,\n        disabled,\n        expandIconPlacement,\n        expandOnRowClick,\n        expandIcon,\n        updateCollapseValue,\n        collapseValue,\n      }}\n    >\n      <div className={classnames(classes)} style={style}>\n        {collapsePanelList()}\n      </div>\n    </CollapseContext.Provider>\n  );\n};\n\nCollapse.Panel = CollapsePanel;\nCollapse.displayName = 'Collapse';\nCollapse.defaultProps = collapseDefaultProps;\n\nexport default Collapse;\n"],"names":["Collapse","props","useConfig","classPrefix","componentName","borderlessClass","defaultExpandAll","disabled","expandIconPlacement","expandOnRowClick","expandIcon","rest","children","className","style","expandMutex","borderless","onChange","useControlled","_slicedToArray","collapseValue","setCollapseValue","updateCollapseValue","value","newValue","concat","index","indexOf","splice","push","classes","childrenList","React","Children","toArray","filter","child","type","displayName","CollapsePanel","collapsePanelList","map","key","String","childProps","cloneElement","createElement","CollapseContext","Provider","classnames","Panel","defaultProps","collapseDefaultProps"],"mappings":"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"}