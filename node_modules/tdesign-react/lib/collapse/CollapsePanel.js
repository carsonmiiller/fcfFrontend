/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var React = require('react');
var classNames = require('classnames');
var reactTransitionGroup = require('react-transition-group');
var collapse_CollapseContext = require('./CollapseContext.js');
var common_FakeArrow = require('../common/FakeArrow.js');
var _util_useConfig = require('../_util/useConfig.js');
var collapse_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-e266830c.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var CollapsePanel = function CollapsePanel(props) {
  var value = props.value,
      disabled = props.disabled,
      destroyOnCollapse = props.destroyOnCollapse,
      expandIcon = props.expandIcon,
      className = props.className,
      style = props.style,
      header = props.header,
      headerRightContent = props.headerRightContent,
      children = props.children,
      index = props.index;

  var _useCollapseContext = collapse_CollapseContext.useCollapseContext(),
      disableAll = _useCollapseContext.disabled,
      defaultExpandAll = _useCollapseContext.defaultExpandAll,
      expandIconPlacement = _useCollapseContext.expandIconPlacement,
      expandOnRowClick = _useCollapseContext.expandOnRowClick,
      expandIconAll = _useCollapseContext.expandIcon,
      updateCollapseValue = _useCollapseContext.updateCollapseValue,
      collapseValue = _useCollapseContext.collapseValue;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var componentName = "".concat(classPrefix, "-collapse-panel");
  var innerValue = value || index;
  var showExpandIcon = expandIcon === void 0 ? expandIconAll : expandIcon;
  var headRef = React.useRef();
  var contentRef = React.useRef();
  var bodyRef = React.useRef();
  var isDisabled = disabled || disableAll;

  if (defaultExpandAll) {
    updateCollapseValue(innerValue);
  }

  var isActive = Array.isArray(collapseValue) ? collapseValue.includes(innerValue) : collapseValue === innerValue;
  var classes = classNames__default["default"](componentName, defineProperty._defineProperty({}, "".concat(classPrefix, "-is-disabled"), isDisabled), className);

  var handleClick = function handleClick(e) {
    var canExpand = expandOnRowClick && e.target === headRef.current || ["svg", "path"].includes(e.target.tagName);

    if (canExpand && !isDisabled) {
      updateCollapseValue(innerValue);
    }
  };

  var renderIcon = function renderIcon(direction) {
    return /* @__PURE__ */React__default["default"].createElement(common_FakeArrow["default"], {
      isActive: isActive,
      overlayClassName: classNames__default["default"]("".concat(componentName, "__icon"), "".concat(componentName, "__icon--").concat(direction))
    });
  };

  var renderHeader = function renderHeader() {
    var cls = ["".concat(componentName, "__header"), defineProperty._defineProperty({}, "".concat(classPrefix, "-is-clickable"), expandOnRowClick && !isDisabled)];
    return /* @__PURE__ */React__default["default"].createElement("div", {
      ref: headRef,
      className: classNames__default["default"](cls),
      onClick: handleClick
    }, showExpandIcon && expandIconPlacement === "left" ? renderIcon(expandIconPlacement) : null, header && header, /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(componentName, "__header--blank")
    }), headerRightContent && headerRightContent, showExpandIcon && expandIconPlacement === "right" ? renderIcon(expandIconPlacement) : null);
  };

  var renderBody = function renderBody() {
    var transitionCallbacks = {
      onEnter: function onEnter() {
        bodyRef.current.style.height = "".concat(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current.clientHeight, "px");
      },
      onEntered: function onEntered() {
        bodyRef.current.style.height = "auto";
      },
      onExit: function onExit() {
        bodyRef.current.style.height = "".concat(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current.clientHeight, "px");
      },
      onExiting: function onExiting() {
        bodyRef.current.style.height = "0px";
      }
    };
    return /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, _objectSpread({
      "in": isActive,
      appear: true,
      timeout: 300,
      nodeRef: bodyRef,
      unmountOnExit: destroyOnCollapse
    }, transitionCallbacks), /* @__PURE__ */React__default["default"].createElement("div", {
      style: {
        height: 0
      },
      className: classNames__default["default"]("".concat(componentName, "__body"), "".concat(classPrefix, "-slide-down-enter-active"), defineProperty._defineProperty({}, "".concat(componentName, "__body--collapsed"), !isActive)),
      ref: bodyRef
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(componentName, "__content"),
      ref: contentRef
    }, children)));
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classes,
    style: _objectSpread({}, style)
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(componentName, "__wrapper")
  }, renderHeader(), renderBody()));
};

CollapsePanel.displayName = "CollapsePanel";
CollapsePanel.defaultProps = collapse_defaultProps.collapsePanelDefaultProps;

exports["default"] = CollapsePanel;
//# sourceMappingURL=CollapsePanel.js.map
