/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var objectWithoutProperties = require('../_chunks/dep-23535a52.js');
var React = require('react');
var classNames = require('classnames');
var _util_useConfig = require('../_util/useConfig.js');
var _util_useRipple = require('../_util/useRipple.js');
var loading_index = require('../loading/index.js');
var button_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-e266830c.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');
require('../_util/useAnimation.js');
require('../_util/setStyle.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-1d819290.js');
require('../_util/easing.js');
require('../loading/Loading.js');
require('../_chunks/dep-3cf9becb.js');
require('../_chunks/dep-19841e1d.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["type", "theme", "variant", "icon", "disabled", "loading", "size", "block", "ghost", "shape", "children", "content", "className", "onClick"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _classNames;

  var type = _ref.type,
      theme = _ref.theme,
      variant = _ref.variant,
      icon = _ref.icon,
      disabled = _ref.disabled,
      loading = _ref.loading,
      size = _ref.size,
      block = _ref.block,
      ghost = _ref.ghost,
      shape = _ref.shape,
      children = _ref.children,
      content = _ref.content,
      className = _ref.className,
      onClick = _ref.onClick,
      buttonProps = objectWithoutProperties._objectWithoutProperties(_ref, _excluded);

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var btnRef = React.useRef();
  _util_useRipple["default"](ref || btnRef);
  var hasChildren = typeof children !== "undefined";
  var hasContent = typeof content !== "undefined";
  var childrenNode = children;

  if (!hasChildren && hasContent) {
    childrenNode = content;
  }

  var iconNode = icon;
  if (loading) iconNode = /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, {
    loading: loading,
    inheritColor: true
  });
  var renderTheme = theme;

  if (!theme) {
    if (variant === "base") {
      renderTheme = "primary";
    } else {
      renderTheme = "default";
    }
  }

  return /* @__PURE__ */React__default["default"].createElement("button", _objectSpread(_objectSpread({}, buttonProps), {}, {
    ref: ref || btnRef,
    type: type,
    className: classNames__default["default"](className, ["".concat(classPrefix, "-button"), "".concat(classPrefix, "-button--theme-").concat(renderTheme), "".concat(classPrefix, "-button--variant-").concat(variant)], (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-button--shape-").concat(shape), shape !== "rectangle"), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-button--ghost"), ghost), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-loading"), loading), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled || loading), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-size-full-width"), block), _classNames)),
    onClick: !disabled && !loading ? onClick : void 0,
    disabled: disabled || loading
  }), iconNode ? /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, iconNode, (hasChildren || hasContent) && /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(classPrefix, "-button__text")
  }, childrenNode)) : /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(classPrefix, "-button__text")
  }, childrenNode));
});
Button.displayName = "Button";
Button.defaultProps = button_defaultProps.buttonDefaultProps;

exports["default"] = Button;
//# sourceMappingURL=Button.js.map
