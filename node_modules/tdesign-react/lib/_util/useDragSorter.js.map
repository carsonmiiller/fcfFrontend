{"version":3,"file":"useDragSorter.js","sources":["../../src/_util/useDragSorter.tsx"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\ninterface DragSortProps<T> {\n  sortOnDraggable: boolean;\n  onDragSort?: (context: DragSortContext<T>) => void;\n  onDragOverCheck?: {\n    x?: boolean;\n    targetClassNameRegExp?: RegExp;\n  };\n}\n\ntype DragFnType = (e?: React.DragEvent<HTMLTableRowElement>, index?: number, record?: any) => void;\ninterface DragSortInnerData {\n  dragging?: boolean;\n  onDragStart?: DragFnType;\n  onDragOver?: DragFnType;\n  onDrop?: DragFnType;\n  onDragEnd?: DragFnType;\n}\n\nexport interface DragSortInnerProps extends DragSortInnerData {\n  getDragProps?: (index?: number, record?: any) => DragSortInnerData;\n}\n\nexport interface DragSortContext<T> {\n  currentIndex: number;\n  current: T;\n  targetIndex: number;\n  target: T;\n}\n\nfunction useDragSorter<T>(props: DragSortProps<T>): DragSortInnerProps {\n  const { sortOnDraggable, onDragSort, onDragOverCheck } = props;\n  const [draggingIndex, setDraggingIndex] = useState(-1);\n  const [dragStartData, setDragStartData] = useState(null);\n  const [isDropped, setIsDropped] = useState(null);\n  const [startInfo, setStartInfo] = useState({ nodeX: 0, nodeWidth: 0, mouseX: 0 });\n\n  const onDragSortRef = useRef(onDragSort);\n  const onDragOver = useCallback(\n    (e, index, record: T) => {\n      e.preventDefault();\n      if (draggingIndex === index || draggingIndex === -1) return;\n      if (onDragOverCheck?.targetClassNameRegExp && !onDragOverCheck?.targetClassNameRegExp.test(e.target?.className)) {\n        return;\n      }\n\n      if (onDragOverCheck?.x) {\n        if (!startInfo.nodeWidth) return;\n\n        const { x, width } = e.target.getBoundingClientRect();\n        const targetNodeMiddleX = x + width / 2;\n        const draggingNodeLeft = e.clientX - (startInfo.mouseX - startInfo.nodeX);\n        const draggingNodeRight = draggingNodeLeft + startInfo.nodeWidth;\n\n        let overlap = false;\n        if (draggingNodeLeft > x && draggingNodeLeft < x + width) {\n          overlap = draggingNodeLeft < targetNodeMiddleX;\n        } else {\n          overlap = draggingNodeRight > targetNodeMiddleX;\n        }\n\n        if (!overlap) return;\n      }\n\n      onDragSortRef.current?.({\n        currentIndex: draggingIndex,\n        current: dragStartData,\n        target: record,\n        targetIndex: index,\n      });\n      setDraggingIndex(index);\n    },\n    [\n      draggingIndex,\n      onDragOverCheck?.targetClassNameRegExp,\n      onDragOverCheck?.x,\n      dragStartData,\n      startInfo.nodeWidth,\n      startInfo.mouseX,\n      startInfo.nodeX,\n    ],\n  );\n\n  if (!sortOnDraggable) {\n    return {};\n  }\n\n  function onDragStart(e, index, record: T) {\n    setDraggingIndex(index);\n    setDragStartData(record);\n    if (onDragOverCheck) {\n      const { x, width } = e.target.getBoundingClientRect();\n      setStartInfo({\n        nodeX: x,\n        nodeWidth: width,\n        mouseX: e.clientX,\n      });\n    }\n  }\n\n  function onDrop() {\n    setIsDropped(true);\n  }\n  function onDragEnd() {\n    if (!isDropped) {\n      // 取消排序，待扩展api，输出dragStartData\n    }\n    setIsDropped(false);\n    setDraggingIndex(-1);\n    setDragStartData(null);\n  }\n  function getDragProps(index, record: T) {\n    if (sortOnDraggable) {\n      return {\n        draggable: true,\n        onDragStart: (e) => {\n          onDragStart(e, index, record);\n        },\n        onDragOver: (e) => {\n          onDragOver(e, index, record);\n        },\n        onDrop: () => {\n          onDrop();\n        },\n        onDragEnd: () => {\n          onDragEnd();\n        },\n      };\n    }\n    return {};\n  }\n\n  return { onDragStart, onDragOver, onDrop, onDragEnd, getDragProps, dragging: draggingIndex !== -1 };\n}\n\nexport default useDragSorter;\n"],"names":["useDragSorter","props","sortOnDraggable","onDragSort","onDragOverCheck","useState","_slicedToArray","draggingIndex","setDraggingIndex","dragStartData","setDragStartData","setIsDropped","nodeX","nodeWidth","mouseX","startInfo","setStartInfo","onDragSortRef","useRef","onDragOver","useCallback","e","index","record","preventDefault","targetClassNameRegExp","test","target","className","x","getBoundingClientRect","width","targetNodeMiddleX","draggingNodeLeft","clientX","draggingNodeRight","overlap","current","currentIndex","targetIndex","onDragStart","onDrop","onDragEnd","getDragProps","draggable","dragging"],"mappings":"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"}