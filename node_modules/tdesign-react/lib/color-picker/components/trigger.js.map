{"version":3,"file":"trigger.js","sources":["../../../src/color-picker/components/trigger.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Input } from '../../input';\nimport ColorLib from '../../_common/js/color-picker/color';\nimport { TdColorPickerProps } from '..';\nimport useClassname from '../hooks/useClassname';\nimport { TdColorContext } from '../interface';\n\nexport interface ColorTriggerProps extends TdColorPickerProps {\n  color?: string;\n  onTriggerChange?: (v?: string, context?: TdColorContext) => {};\n}\n\nconst ColorPickerTrigger = (props: ColorTriggerProps) => {\n  const baseClassName = useClassname();\n  const {\n    color = '',\n    disabled = false,\n    inputProps = {\n      autoWidth: true,\n    },\n    onTriggerChange,\n  } = props;\n\n  const [value, setValue] = useState(color);\n\n  const handleChange = (input: string) => {\n    if (ColorLib.isValid(input)) {\n      setValue(input);\n    } else {\n      setValue(color);\n    }\n  };\n\n  useEffect(() => {\n    onTriggerChange(value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  useEffect(() => {\n    setValue(color);\n  }, [color]);\n\n  return (\n    <div className={`${baseClassName}__trigger--default`}>\n      <Input\n        {...inputProps}\n        value={value}\n        disabled={disabled}\n        label={\n          <div className={classNames(`${baseClassName}__trigger--default__color`, `${baseClassName}--bg-alpha`)}>\n            <span\n              className={'color-inner'}\n              style={{\n                background: value,\n              }}\n            ></span>\n          </div>\n        }\n        onBlur={handleChange}\n        onChange={(v: string) => setValue(v)}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ColorPickerTrigger);\n"],"names":["ColorPickerTrigger","props","baseClassName","useClassname","color","disabled","inputProps","autoWidth","onTriggerChange","useState","_slicedToArray","value","setValue","handleChange","input","ColorLib","isValid","useEffect","React","createElement","className","Input","label","classNames","style","background","onBlur","onChange","v","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;EACpC,IAAMC,aAAa,GAAGC,yCAAY,EAAlC,CAAA;EACA,IAOIF,YAAAA,GAAAA,KAPJ,CACEG,KADF;MACEA,KADF,6BACU,EADV,GAAA,YAAA;MAOIH,eAAAA,GAAAA,KAPJ,CAEEI,QAFF;MAEEA,QAFF,gCAEa,KAFb,GAAA,eAAA;MAOIJ,iBAAAA,GAAAA,KAPJ,CAGEK,UAHF;AAAA,MAGEA,UAHF,GAGe,iBAAA,KAAA,KAAA,CAAA,GAAA;AACXC,IAAAA,SAAS,EAAE,IAAA;GAJf,GAAA,iBAAA;AAAA,MAMEC,eANF,GAOIP,KAPJ,CAMEO,eANF,CAAA;;EAQA,IAA0BC,SAAAA,GAAAA,cAAQ,CAACL,KAAD,CAAlC;AAAA,MAAA,UAAA,GAAAM,4BAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAAOC,KAAP,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAAcC,QAAd,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA;;AACA,EAAA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,IAAA,IAAIC,kCAAQ,CAACC,OAAT,CAAiBF,KAAjB,CAAJ,EAA6B;MAC3BF,QAAQ,CAACE,KAAD,CAAR,CAAA;AACD,KAFD,MAEO;MACLF,QAAQ,CAACR,KAAD,CAAR,CAAA;AACD,KAAA;GALH,CAAA;;AAOAa,EAAAA,eAAS,CAAC,YAAM;IACdT,eAAe,CAACG,KAAD,CAAf,CAAA;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAAA;AAGAM,EAAAA,eAAS,CAAC,YAAM;IACdL,QAAQ,CAACR,KAAD,CAAR,CAAA;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAAA;AAGA,EAAA,sBAAuBc,yBAAK,CAACC,aAAN,CAAoB,KAApB,EAA2B;AAChDC,IAAAA,SAAS,YAAKlB,aAAL,EAAA,oBAAA,CAAA;GADY,iBAEJgB,yBAAK,CAACC,aAAN,CAAoBE,iBAApB,kCACdf,UADc,CAAA,EAAA,EAAA,EAAA;AAEjBK,IAAAA,KAAK,EAALA,KAFiB;AAGjBN,IAAAA,QAAQ,EAARA,QAHiB;AAIjBiB,IAAAA,KAAK,iBAAkBJ,yBAAK,CAACC,aAAN,CAAoB,KAApB,EAA2B;AAChDC,MAAAA,SAAS,EAAEG,8BAAU,CAAIrB,EAAAA,CAAAA,MAAAA,CAAAA,aAAJ,0CAAiDA,aAAjD,EAAA,YAAA,CAAA,CAAA;AAD2B,KAA3B,iBAEJgB,yBAAK,CAACC,aAAN,CAAoB,MAApB,EAA4B;AAC7CC,MAAAA,SAAS,EAAE,aADkC;AAE7CI,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAEd,KAAAA;AADP,OAAA;AAFsC,KAA5B,CAFI,CAJN;AAYjBe,IAAAA,MAAM,EAAEb,YAZS;IAajBc,QAAQ,EAAE,kBAACC,CAAD,EAAA;MAAA,OAAOhB,QAAQ,CAACgB,CAAD,CAAf,CAAA;AAAA,KAAA;AAbO,GAAA,CAAA,CAFI,CAAvB,CAAA;AAiBD,CAzCD,CAAA;;AA0CA,mBAAA,aAAeV,yBAAK,CAACW,IAAN,CAAW7B,kBAAX,CAAf;;;;"}