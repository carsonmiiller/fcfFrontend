/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var toConsumableArray = require('../../../_chunks/dep-f6a4bdd5.js');
var React = require('react');
var cloneDeep = require('../../../_chunks/dep-1f7e83e9.js');
var classNames = require('classnames');
var colorPicker_hooks_useClassname = require('../../hooks/useClassname.js');
var _common_js_colorPicker_color = require('../../../_common/js/color-picker/color.js');
var _util_useCommonClassName = require('../../../_util/useCommonClassName.js');
var colorPicker_const = require('../../const.js');
var inputNumber_index = require('../../../input-number/index.js');
require('../../../_chunks/dep-19841e1d.js');
require('../../../_chunks/dep-ce5aa35f.js');
require('../../../_chunks/dep-8a149e9f.js');
require('../../../_chunks/dep-3b69722d.js');
require('../../../_chunks/dep-fde4d28a.js');
require('../../../_chunks/dep-e266830c.js');
require('../../../_chunks/dep-fcf32c81.js');
require('../../../_chunks/dep-3405bda4.js');
require('../../../_chunks/dep-15a4424e.js');
require('../../../_chunks/dep-c40d75ac.js');
require('../../../_chunks/dep-910dcfa3.js');
require('../../../_chunks/dep-633a5671.js');
require('../../../_chunks/dep-9c339ffc.js');
require('../../../_chunks/dep-b1a67107.js');
require('../../../_chunks/dep-ab43c961.js');
require('../../../_chunks/dep-9cacaf01.js');
require('../../../_chunks/dep-c72c7229.js');
require('../../../_chunks/dep-8e0a771d.js');
require('../../../_chunks/dep-c90cc28f.js');
require('../../../_chunks/dep-542cc308.js');
require('../../../_chunks/dep-dfcfc710.js');
require('../../../_chunks/dep-ec5420f8.js');
require('../../../_chunks/dep-029baf10.js');
require('../../../_util/useConfig.js');
require('../../../_chunks/dep-38a46f48.js');
require('../../../_chunks/dep-a1655de1.js');
require('../../../_chunks/dep-c6637e11.js');
require('../../../_common/js/global-config/locale/zh_CN.js');
require('../../../config-provider/zh_CN_config.js');
require('../../../_chunks/dep-3cf9becb.js');
require('../../../_chunks/dep-b8367f2e.js');
require('tinycolor2');
require('../../../_common/js/color-picker/cmyk.js');
require('../../../_common/js/color-picker/gradient.js');
require('../../../input-number/InputNumber.js');
require('../../../_chunks/dep-23535a52.js');
require('../../../_util/useUpdateEffect.js');
require('../../../_util/useLayoutEffect.js');
require('../../../_util/dom.js');
require('raf');
require('../../../_chunks/dep-1d819290.js');
require('../../../_util/easing.js');
require('../../../input-number/StepHandler.js');
require('tdesign-icons-react');
require('../../../button/index.js');
require('../../../button/Button.js');
require('../../../_util/useRipple.js');
require('../../../_util/useAnimation.js');
require('../../../_util/setStyle.js');
require('../../../loading/index.js');
require('../../../loading/Loading.js');
require('../../../common/Portal.js');
require('react-dom');
require('../../../loading/gradient.js');
require('../../../_common/js/loading/circle-adapter.js');
require('../../../_common/js/utils/set-style.js');
require('../../../_common/js/utils/helper.js');
require('../../../loading/defaultProps.js');
require('../../../loading/plugin.js');
require('../../../button/defaultProps.js');
require('../../../input-number/utils/numberUtils.js');
require('../../../input/index.js');
require('../../../input/Input.js');
require('../../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../../_util/helper.js');
require('../../../_chunks/dep-e3db5727.js');
require('../../../_chunks/dep-86abec96.js');
require('../../../_chunks/dep-cb0f33ac.js');
require('../../../_chunks/dep-f3090217.js');
require('../../../_chunks/dep-d4a0b3f0.js');
require('../../../_chunks/dep-6dfb2577.js');
require('../../../input/InputGroup.js');
require('../../../hooks/useControlled.js');
require('../../../_util/noop.js');
require('../../../locale/LocalReceiver.js');
require('../../../input/defaultProps.js');
require('../../../input-number/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var DELETE_KEYS = ["delete", "backspace"];

var LinearGradient = function LinearGradient(props) {
  var onChange = props.onChange,
      color = props.color,
      disabled = props.disabled;
  var baseClassName = colorPicker_hooks_useClassname["default"]();

  var _useCommonClassName = _util_useCommonClassName["default"](),
      statusClassNames = _useCommonClassName.STATUS;

  var refSlider = React.useRef(null);
  var sliderRectRef = React.useRef({
    left: 0,
    width: colorPicker_const.GRADIENT_SLIDER_DEFAULT_WIDTH
  });
  var isDragging = React.useRef(false);
  var isMoved = React.useRef(false);
  var degree = React.useRef(props.color.gradientDegree);
  var selectedId = React.useRef(props.color.gradientSelectedId);
  var colors = React.useRef(cloneDeep.cloneDeep_1(color.gradientColors));
  React.useEffect(function () {
    degree.current = color === null || color === void 0 ? void 0 : color.gradientDegree;
    selectedId.current = color.gradientSelectedId;
    colors.current = cloneDeep.cloneDeep_1(color.gradientColors);
  }, [color]);

  var updateSliderRect = function updateSliderRect() {
    var rect = refSlider.current.getBoundingClientRect();
    sliderRectRef.current = {
      left: rect.left,
      width: rect.width || colorPicker_const.GRADIENT_SLIDER_DEFAULT_WIDTH
    };
  };

  var handleChange = React.useCallback(function (key, payload, addUsedColor) {
    if (disabled) {
      return;
    }

    onChange({
      key: key,
      payload: payload,
      addUsedColor: addUsedColor
    });
  }, [onChange, disabled]);

  var handleDegreeChange = function handleDegreeChange(value) {
    if (props.disabled || value === props.color.gradientDegree) {
      return;
    }

    degree.current = value;
    handleChange("degree", value, true);
  };

  var handleSelectedIdChange = function handleSelectedIdChange(value) {
    if (props.disabled) {
      return;
    }

    selectedId.current = value;
    handleChange("selectedId", value);
  };

  var handleColorsChange = React.useCallback(function (value, isEnded) {
    if (props.disabled) {
      return;
    }

    colors.current = value;
    handleChange("colors", value, isEnded);
  }, [props.disabled, handleChange]);
  var updateActiveThumbLeft = React.useCallback(function (left) {
    var index = colors.current.findIndex(function (c) {
      return c.id === selectedId.current;
    });

    if (index === -1) {
      return;
    }

    var point = colors.current[index];
    var formatLeft = Math.max(0, Math.min(sliderRectRef.current.width, left));
    var percentLeft = formatLeft / sliderRectRef.current.width * 100;
    var newColors = colors.current.map(function (item, i) {
      return index !== i ? item : {
        color: point.color,
        left: percentLeft,
        id: point.id
      };
    });
    handleColorsChange(newColors);
  }, [handleColorsChange]);

  var handleStart = function handleStart(id, e) {
    if (isDragging.current || props.disabled) {
      return;
    }

    isMoved.current = false;
    isDragging.current = true;
    e.preventDefault();
    e.stopPropagation();
    refSlider.current.focus();
  };

  var handleMove = React.useCallback(function (e) {
    if (!isDragging.current || disabled) {
      return;
    }

    var rect = refSlider.current.getBoundingClientRect();
    var left = e.clientX - rect.x;
    isMoved.current = true;
    updateActiveThumbLeft(left);
  }, [disabled, updateActiveThumbLeft]);
  var handleEnd = React.useCallback(function () {
    if (!isDragging.current) {
      return;
    }

    setTimeout(function () {
      isDragging.current = false;
    }, 0);

    if (isMoved.current) {
      handleColorsChange(colors.current, true);
      isMoved.current = false;
    }
  }, [handleColorsChange]);

  var handleKeyup = function handleKeyup(e) {
    if (props.disabled) {
      return;
    }

    var points = toConsumableArray._toConsumableArray(colors.current);

    var pos = points.findIndex(function (c) {
      return c.id === selectedId.current;
    });
    var length = points.length;

    if (DELETE_KEYS.includes(e.key.toLocaleLowerCase()) && length > 2 && pos >= 0 && pos <= length - 1) {
      points.splice(pos, 1);

      if (!points[pos]) {
        pos = points[pos + 1] ? pos + 1 : points[pos - 1] ? pos - 1 : 0;
      }

      var current = points[pos];
      handleColorsChange(points, true);
      handleSelectedIdChange(current === null || current === void 0 ? void 0 : current.id);
    }
  };

  var handleThumbBarClick = function handleThumbBarClick(e) {
    if (props.disabled) {
      return;
    }

    updateSliderRect();
    var left = e.clientX - sliderRectRef.current.left;
    left = Math.max(0, Math.min(sliderRectRef.current.width, left));
    var percentLeft = left / sliderRectRef.current.width * 100;
    var newPoint = _common_js_colorPicker_color.genGradientPoint(percentLeft, props.color.rgba);

    var newColors = toConsumableArray._toConsumableArray(colors.current);

    newColors.push(newPoint);
    handleColorsChange(newColors, true);
    handleSelectedIdChange(newPoint.id);
  };

  React.useEffect(function () {
    updateSliderRect();
    window.addEventListener("mousemove", handleMove, false);
    window.addEventListener("mouseup", handleEnd, false);
    window.addEventListener("contextmenu", handleEnd, false);
    return function () {
      window.removeEventListener("mousemove", handleMove, false);
      window.removeEventListener("mouseup", handleEnd, false);
      window.removeEventListener("contextmenu", handleEnd, false);
    };
  }, []);
  var _props$color = props.color,
      linearGradient = _props$color.linearGradient,
      gradientColors = _props$color.gradientColors;
  var thumbBackground = _common_js_colorPicker_color.gradientColors2string({
    points: gradientColors,
    degree: 90
  });

  var handleClickThumb = function handleClickThumb(e) {
    return e.stopPropagation();
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(baseClassName, "__gradient")
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(baseClassName, "__gradient-slider")
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(baseClassName, "__slider"), "".concat(baseClassName, "--bg-alpha")),
    onKeyUp: handleKeyup,
    tabIndex: 0,
    ref: refSlider
  }, /* @__PURE__ */React__default["default"].createElement("ul", {
    className: "gradient-thumbs",
    onClick: handleThumbBarClick,
    style: {
      background: thumbBackground
    }
  }, colors.current.map(function (t) {
    var left = "".concat(Math.round(t.left * 100) / 100, "%");
    return /* @__PURE__ */React__default["default"].createElement("li", {
      className: classNames__default["default"](["".concat(baseClassName, "__thumb"), "gradient-thumbs__item", selectedId.current === t.id ? statusClassNames.active : ""]),
      key: t.id,
      title: "".concat(t.color, " ").concat(left),
      style: {
        color: t.color,
        left: left
      },
      onClick: handleClickThumb,
      onMouseDown: function onMouseDown(e) {
        return handleStart(t.id, e);
      }
    }, /* @__PURE__ */React__default["default"].createElement("span", {
      className: classNames__default["default"](["gradient-thumbs__item-inner", "".concat(baseClassName, "--bg-alpha")])
    }));
  })))), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(baseClassName, "__gradient-degree"),
    title: "".concat(degree, "deg")
  }, /* @__PURE__ */React__default["default"].createElement(inputNumber_index.InputNumber, {
    theme: "normal",
    min: 0,
    max: 360,
    step: 1,
    format: function format(value) {
      return "".concat(value, "\xB0");
    },
    value: degree.current,
    onBlur: handleDegreeChange,
    onEnter: handleDegreeChange,
    disabled: props.disabled
  })), /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](["".concat(baseClassName, "__gradient-preview"), "".concat(baseClassName, "--bg-alpha")])
  }, /* @__PURE__ */React__default["default"].createElement("span", {
    className: "preview-inner",
    style: {
      background: linearGradient
    }
  })));
};

var LinearGradient$1 = /*#__PURE__*/React__default["default"].memo(LinearGradient);

exports["default"] = LinearGradient$1;
//# sourceMappingURL=linear-gradient.js.map
