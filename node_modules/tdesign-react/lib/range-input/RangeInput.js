/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var slicedToArray = require('../_chunks/dep-3cf9becb.js');
var objectWithoutProperties = require('../_chunks/dep-23535a52.js');
var React = require('react');
var classNames = require('classnames');
var isFunction = require('../_chunks/dep-e266830c.js');
var tdesignIconsReact = require('tdesign-icons-react');
var input_index = require('../input/index.js');
var _util_useConfig = require('../_util/useConfig.js');
var hooks_useControlled = require('../hooks/useControlled.js');
var rangeInput_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-19841e1d.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-15a4424e.js');
require('../input/Input.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../_util/helper.js');
require('../_chunks/dep-e3db5727.js');
require('../_chunks/dep-86abec96.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-cb0f33ac.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-f3090217.js');
require('../_chunks/dep-d4a0b3f0.js');
require('../_chunks/dep-6dfb2577.js');
require('../input/InputGroup.js');
require('../locale/LocalReceiver.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');
require('../input/defaultProps.js');
require('../_util/noop.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["className", "style", "activeIndex", "disabled", "format", "inputProps", "label", "placeholder", "readonly", "separator", "status", "size", "tips", "suffix", "prefixIcon", "suffixIcon", "clearable", "showClearIconOnEmpty", "onClick", "onEnter", "onClear", "onFocus", "onBlur", "onMouseenter", "onMouseleave", "onChange"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function calcArrayValue(value) {
  if (Array.isArray(value)) {
    return value;
  }

  return [value, value];
}

var renderIcon = function renderIcon(classPrefix, type, icon) {
  var result = null;
  if (icon) result = icon;
  if (typeof icon === "function") result = icon();
  var iconClassName = icon ? "".concat(classPrefix, "-range-input__").concat(type, "-icon") : "";

  if (result) {
    result = /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(classPrefix, "-range-input__").concat(type, " ").concat(iconClassName)
    }, result);
  }

  return result;
};

var RangeInput = /*#__PURE__*/React__default["default"].forwardRef(function (props, ref) {
  var _classNames;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var className = props.className,
      style = props.style,
      activeIndex = props.activeIndex,
      disabled = props.disabled,
      format = props.format,
      inputProps = props.inputProps,
      label = props.label,
      placeholder = props.placeholder,
      readonly = props.readonly,
      separator = props.separator,
      status = props.status,
      size = props.size,
      tips = props.tips,
      suffix = props.suffix,
      prefixIcon = props.prefixIcon,
      suffixIcon = props.suffixIcon,
      clearable = props.clearable,
      showClearIconOnEmpty = props.showClearIconOnEmpty,
      _onClick = props.onClick,
      onEnter = props.onEnter,
      onClear = props.onClear,
      onFocus = props.onFocus,
      onBlur = props.onBlur,
      onMouseenter = props.onMouseenter,
      onMouseleave = props.onMouseleave,
      onChangeFromProps = props.onChange,
      restProps = objectWithoutProperties._objectWithoutProperties(props, _excluded);

  var name = "".concat(classPrefix, "-range-input");
  var wrapperRef = React.useRef();
  var inputRefs = {
    firstInputRef: React.useRef(),
    secondInputRef: React.useRef()
  };

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      isFocused = _useState2[0],
      toggleIsFocused = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      isHover = _useState4[0],
      toggleIsHover = _useState4[1];

  var _calcArrayValue = calcArrayValue(format),
      _calcArrayValue2 = slicedToArray._slicedToArray(_calcArrayValue, 2),
      firstFormat = _calcArrayValue2[0],
      secondFormat = _calcArrayValue2[1];

  var _calcArrayValue3 = calcArrayValue(placeholder),
      _calcArrayValue4 = slicedToArray._slicedToArray(_calcArrayValue3, 2),
      _calcArrayValue4$ = _calcArrayValue4[0],
      firstPlaceholder = _calcArrayValue4$ === void 0 ? "\u8BF7\u8F93\u5165\u5185\u5BB9" : _calcArrayValue4$,
      _calcArrayValue4$2 = _calcArrayValue4[1],
      secondPlaceholder = _calcArrayValue4$2 === void 0 ? "\u8BF7\u8F93\u5165\u5185\u5BB9" : _calcArrayValue4$2;

  var _calcArrayValue5 = calcArrayValue(inputProps),
      _calcArrayValue6 = slicedToArray._slicedToArray(_calcArrayValue5, 2),
      firstInputProps = _calcArrayValue6[0],
      secondInputProps = _calcArrayValue6[1];

  var _useControlled = hooks_useControlled["default"](props, "value", onChangeFromProps),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      value = _useControlled2[0],
      _onChange = _useControlled2[1];

  var _ref = value || [],
      _ref2 = slicedToArray._slicedToArray(_ref, 2),
      firstValue = _ref2[0],
      secondValue = _ref2[1];

  var isShowClearIcon = (clearable && (value === null || value === void 0 ? void 0 : value.length) && !disabled || showClearIconOnEmpty) && isHover;
  var suffixIconNew = suffixIcon;

  if (isShowClearIcon) {
    suffixIconNew = /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CloseCircleFilledIcon, {
      className: "".concat(name, "__suffix-clear"),
      onClick: handleClear
    });
  }

  var labelContent = isFunction.isFunction_1(label) ? label() : label;
  var prefixIconContent = renderIcon(classPrefix, "prefix", prefixIcon);
  var suffixContent = isFunction.isFunction_1(suffix) ? suffix() : suffix;
  var suffixIconContent = renderIcon(classPrefix, "suffix", suffixIconNew);

  function handleClear(e) {
    onClear === null || onClear === void 0 ? void 0 : onClear({
      e: e
    });
    _onChange === null || _onChange === void 0 ? void 0 : _onChange(["", ""], {
      e: e,
      trigger: "clear",
      position: "all"
    });
  }

  function handleEnter(rangeValue, context) {
    onEnter === null || onEnter === void 0 ? void 0 : onEnter(rangeValue, context);
  }

  function handleFocus(rangeValue, context) {
    onFocus === null || onFocus === void 0 ? void 0 : onFocus(rangeValue, context);
    toggleIsFocused(true);
  }

  function handleBlur(rangeValue, context) {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(rangeValue, context);
    toggleIsFocused(false);
  }

  function handleMouseEnter(e) {
    toggleIsHover(true);
    onMouseenter === null || onMouseenter === void 0 ? void 0 : onMouseenter({
      e: e
    });
  }

  function handleMouseLeave(e) {
    toggleIsHover(false);
    onMouseleave === null || onMouseleave === void 0 ? void 0 : onMouseleave({
      e: e
    });
  }

  React.useImperativeHandle(ref, function () {
    return {
      currentElement: wrapperRef.current,
      firstInputElement: inputRefs.firstInputRef.current,
      secondInputElement: inputRefs.secondInputRef.current,
      focus: function focus(options) {
        var _inputRefs$$current;

        var _ref3 = options || {},
            _ref3$position = _ref3.position,
            position = _ref3$position === void 0 ? "first" : _ref3$position;

        (_inputRefs$$current = inputRefs["".concat(position, "InputRef")].current) === null || _inputRefs$$current === void 0 ? void 0 : _inputRefs$$current.focus();
      },
      blur: function blur(options) {
        var _inputRefs$$current2;

        var _ref4 = options || {},
            _ref4$position = _ref4.position,
            position = _ref4$position === void 0 ? "first" : _ref4$position;

        (_inputRefs$$current2 = inputRefs["".concat(position, "InputRef")].current) === null || _inputRefs$$current2 === void 0 ? void 0 : _inputRefs$$current2.blur();
      },
      select: function select(options) {
        var _inputRefs$$current3;

        var _ref5 = options || {},
            _ref5$position = _ref5.position,
            position = _ref5$position === void 0 ? "first" : _ref5$position;

        (_inputRefs$$current3 = inputRefs["".concat(position, "InputRef")].current) === null || _inputRefs$$current3 === void 0 ? void 0 : _inputRefs$$current3.select();
      }
    };
  });
  return /* @__PURE__ */React__default["default"].createElement("div", _objectSpread({
    ref: wrapperRef,
    style: style,
    className: classNames__default["default"](name, className, (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-focused"), isFocused), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(status), status), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _classNames)),
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave
  }, restProps), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(name, "__inner")
  }, prefixIconContent, labelContent ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-input__prefix")
  }, labelContent) : null, /* @__PURE__ */React__default["default"].createElement(input_index.Input, _objectSpread({
    ref: inputRefs.firstInputRef,
    className: "".concat(name, "__inner-left"),
    inputClass: classNames__default["default"](defineProperty._defineProperty({}, "".concat(classPrefix, "-is-focused"), activeIndex === 0)),
    placeholder: firstPlaceholder,
    disabled: disabled,
    readonly: readonly,
    format: firstFormat,
    value: firstValue,
    onClick: function onClick(_ref6) {
      var e = _ref6.e;
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e: e,
        position: "first"
      });
    },
    onClear: function onClear() {
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([], {
        position: "first",
        trigger: "input"
      });
    },
    onEnter: function onEnter(val, _ref7) {
      var e = _ref7.e;
      return handleEnter([val, secondValue], {
        e: e,
        position: "first"
      });
    },
    onFocus: function onFocus(val, _ref8) {
      var e = _ref8.e;
      return handleFocus([val, secondValue], {
        e: e,
        position: "first"
      });
    },
    onBlur: function onBlur(val, _ref9) {
      var e = _ref9.e;
      return handleBlur([val, secondValue], {
        e: e,
        position: "first"
      });
    },
    onChange: function onChange(val, _ref10) {
      var e = _ref10.e;
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([val, secondValue], {
        e: e,
        position: "first",
        trigger: "input"
      });
    }
  }, firstInputProps)), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(name, "__inner-separator")
  }, separator), /* @__PURE__ */React__default["default"].createElement(input_index.Input, _objectSpread({
    ref: inputRefs.secondInputRef,
    className: "".concat(name, "__inner-right"),
    inputClass: classNames__default["default"](defineProperty._defineProperty({}, "".concat(classPrefix, "-is-focused"), activeIndex === 1)),
    placeholder: secondPlaceholder,
    disabled: disabled,
    readonly: readonly,
    format: secondFormat,
    value: secondValue,
    onClick: function onClick(_ref11) {
      var e = _ref11.e;
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e: e,
        position: "second"
      });
    },
    onClear: function onClear() {
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([], {
        position: "second",
        trigger: "input"
      });
    },
    onEnter: function onEnter(val, _ref12) {
      var e = _ref12.e;
      return handleEnter([firstValue, val], {
        e: e,
        position: "second"
      });
    },
    onFocus: function onFocus(val, _ref13) {
      var e = _ref13.e;
      return handleFocus([firstValue, val], {
        e: e,
        position: "second"
      });
    },
    onBlur: function onBlur(val, _ref14) {
      var e = _ref14.e;
      return handleBlur([firstValue, val], {
        e: e,
        position: "second"
      });
    },
    onChange: function onChange(val, _ref15) {
      var e = _ref15.e;
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([firstValue, val], {
        e: e,
        position: "second",
        trigger: "input"
      });
    }
  }, secondInputProps)), suffixContent ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(name, "__suffix")
  }, suffixContent) : null, suffixIconContent), tips && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(name, "__tips")
  }, tips));
});
RangeInput.displayName = "RangeInput";
RangeInput.defaultProps = rangeInput_defaultProps.rangeInputDefaultProps;

exports["default"] = RangeInput;
//# sourceMappingURL=RangeInput.js.map
