/// <reference types="react" />
import defaultLocale from '../locale/zh_CN';
import { GlobalConfigProvider } from './type';
export declare enum EAnimationType {
    ripple = "ripple",
    expand = "expand",
    fade = "fade"
}
export declare const defaultClassPrefix = "t";
export declare const defaultAnimation: {
    include: EAnimationType[];
    exclude: any[];
};
export declare const defaultGlobalConfig: {
    alert?: import("./type").AlertConfig;
    anchor?: import("./type").AnchorConfig;
    animation: Partial<Record<"include" | "exclude", import("./type").AnimationType[]>> | {
        include: EAnimationType[];
        exclude: any[];
    };
    calendar?: import("./type").CalendarConfig;
    cascader?: import("./type").CascaderConfig;
    classPrefix: string;
    colorPicker?: import("./type").ColorPickerConfig;
    datePicker?: import("./type").DatePickerConfig;
    dialog?: import("./type").DialogConfig;
    drawer?: import("./type").DrawerConfig;
    form?: import("./type").FormConfig;
    input?: import("./type").InputConfig;
    list?: import("./type").ListConfig;
    pagination?: import("./type").PaginationConfig;
    popconfirm?: import("./type").PopconfirmConfig;
    select?: import("./type").SelectConfig;
    steps?: import("./type").StepsConfig;
    table?: import("./type").TableConfig;
    tag?: import("./type").TagConfig;
    timePicker?: import("./type").TimePickerConfig;
    transfer?: import("./type").TransferConfig;
    tree?: import("./type").TreeConfig;
    treeSelect?: import("./type").TreeSelectConfig;
    upload?: import("./type").UploadConfig;
};
export declare type Locale = typeof defaultLocale;
export declare type GlobalConfig = typeof defaultGlobalConfig;
export interface Config {
    globalConfig?: GlobalConfigProvider;
}
export declare const defaultContext: {
    globalConfig: GlobalConfig;
};
declare const ConfigContext: import("react").Context<{
    globalConfig: GlobalConfig;
}>;
export default ConfigContext;
