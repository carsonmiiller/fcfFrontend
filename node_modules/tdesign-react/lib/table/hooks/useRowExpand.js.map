{"version":3,"file":"useRowExpand.js","sources":["../../../src/table/hooks/useRowExpand.tsx"],"sourcesContent":["import React, { MouseEvent, ReactNode } from 'react';\nimport { ChevronRightCircleIcon } from 'tdesign-icons-react';\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\nimport classNames from 'classnames';\nimport {\n  TdPrimaryTableProps,\n  PrimaryTableCol,\n  TableRowData,\n  PrimaryTableCellParams,\n  TableExpandedRowParams,\n  RowEventContext,\n} from '../type';\nimport useClassName from './useClassName';\nimport useControlled from '../../hooks/useControlled';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\n\nexport default function useRowExpand(props: TdPrimaryTableProps) {\n  const { expandIcon } = props;\n  const [locale] = useLocaleReceiver('table');\n  const { tableExpandClasses, positiveRotate90, tableFullRowClasses } = useClassName();\n  // controlled and uncontrolled\n  const [tExpandedRowKeys, setTExpandedRowKeys] = useControlled(props, 'expandedRowKeys', props.onExpandChange);\n\n  const showExpandedRow = Boolean(props.expandedRow);\n\n  const showExpandIconColumn = props.expandIcon !== false && showExpandedRow;\n\n  const isFirstColumnFixed = props.columns?.[0]?.fixed === 'left';\n\n  const onToggleExpand = (e: MouseEvent<HTMLSpanElement>, row: TableRowData) => {\n    props.expandOnRowClick && e.stopPropagation();\n    const currentId = get(row, props.rowKey || 'id');\n    const index = tExpandedRowKeys.indexOf(currentId);\n    const newKeys = [...tExpandedRowKeys];\n    index !== -1 ? newKeys.splice(index, 1) : newKeys.push(currentId);\n    setTExpandedRowKeys(newKeys, {\n      expandedRowData: props.data.filter((t) => newKeys.includes(get(t, props.rowKey || 'id'))),\n    });\n  };\n\n  const renderExpandIcon = (p: PrimaryTableCellParams<TableRowData>, expandIcon: TdPrimaryTableProps['expandIcon']) => {\n    const { row, rowIndex } = p;\n    const currentId = get(row, props.rowKey || 'id');\n    const expanded = tExpandedRowKeys.includes(currentId);\n    const defaultIcon: ReactNode = locale.expandIcon || <ChevronRightCircleIcon />;\n    let icon = defaultIcon;\n    if (expandIcon === false || expandIcon === null) {\n      icon = null;\n    } else if (isFunction(expandIcon)) {\n      icon = expandIcon({ row, index: rowIndex });\n    }\n    const classes = [\n      tableExpandClasses.iconBox,\n      tableExpandClasses[expanded ? 'expanded' : 'collapsed'],\n      { [positiveRotate90]: expanded },\n    ];\n    return (\n      <span className={classNames(classes)} onClick={(e: MouseEvent<HTMLSpanElement>) => onToggleExpand(e, row)}>\n        {icon}\n      </span>\n    );\n  };\n\n  const getExpandColumn = () => {\n    const expandCol: PrimaryTableCol<TableRowData> = {\n      colKey: '__EXPAND_ROW_ICON_COLUMN__',\n      width: 64,\n      className: tableExpandClasses.iconCell,\n      fixed: isFirstColumnFixed ? 'left' : undefined,\n      cell: (p) => renderExpandIcon(p, expandIcon),\n    };\n    return expandCol;\n  };\n\n  const renderExpandedRow = (\n    p: TableExpandedRowParams<TableRowData> & { tableWidth: number; isWidthOverflow: boolean },\n  ) => {\n    const rowId = get(p.row, props.rowKey || 'id');\n    if (!tExpandedRowKeys.includes(rowId)) return null;\n    const isFixedLeft = p.isWidthOverflow && props.columns.find((item) => item.fixed === 'left');\n    return (\n      <tr\n        key={`expand_${rowId}`}\n        className={classNames([tableExpandClasses.row, { [tableFullRowClasses.base]: isFixedLeft }])}\n      >\n        <td colSpan={p.columns.length}>\n          <div\n            className={classNames([tableExpandClasses.rowInner, { [tableFullRowClasses.innerFullRow]: isFixedLeft }])}\n            style={isFixedLeft ? { width: `${p.tableWidth}px` } : {}}\n          >\n            <div className={tableFullRowClasses.innerFullElement}>{props.expandedRow(p)}</div>\n          </div>\n        </td>\n      </tr>\n    );\n  };\n\n  const onInnerExpandRowClick = (p: RowEventContext<TableRowData>) => {\n    onToggleExpand(p.e, p.row);\n  };\n\n  return {\n    showExpandedRow,\n    showExpandIconColumn,\n    getExpandColumn,\n    renderExpandedRow,\n    onInnerExpandRowClick,\n  };\n}\n"],"names":["useRowExpand","props","expandIcon","useLocaleReceiver","_slicedToArray","locale","useClassName","tableExpandClasses","positiveRotate90","tableFullRowClasses","useControlled","onExpandChange","tExpandedRowKeys","setTExpandedRowKeys","showExpandedRow","Boolean","expandedRow","showExpandIconColumn","isFirstColumnFixed","columns","fixed","onToggleExpand","e","row","expandOnRowClick","stopPropagation","currentId","get","rowKey","index","indexOf","newKeys","splice","push","expandedRowData","data","filter","t","includes","renderExpandIcon","p","expandIcon2","rowIndex","expanded","defaultIcon","React","createElement","ChevronRightCircleIcon","icon","isFunction","classes","iconBox","className","classNames","onClick","getExpandColumn","expandCol","colKey","width","iconCell","cell","renderExpandedRow","rowId","isFixedLeft","isWidthOverflow","find","item","key","_defineProperty","base","colSpan","length","rowInner","innerFullRow","style","tableWidth","innerFullElement","onInnerExpandRowClick"],"mappings":"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"}