/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var toConsumableArray = require('../../_chunks/dep-f6a4bdd5.js');
var defineProperty = require('../../_chunks/dep-a1655de1.js');
var slicedToArray = require('../../_chunks/dep-3cf9becb.js');
var React = require('react');
var isFunction = require('../../_chunks/dep-e266830c.js');
var table_SorterButton = require('../SorterButton.js');
var hooks_useControlled = require('../../hooks/useControlled.js');
require('../../_chunks/dep-19841e1d.js');
require('../../_chunks/dep-fcf32c81.js');
require('../../_chunks/dep-3405bda4.js');
require('../../_chunks/dep-15a4424e.js');
require('tdesign-icons-react');
require('classnames');
require('./useClassName.js');
require('../../_util/useConfig.js');
require('../../_chunks/dep-38a46f48.js');
require('../../_chunks/dep-8a149e9f.js');
require('../../_chunks/dep-3b69722d.js');
require('../../_chunks/dep-fde4d28a.js');
require('../../_chunks/dep-c40d75ac.js');
require('../../_chunks/dep-910dcfa3.js');
require('../../_chunks/dep-633a5671.js');
require('../../_chunks/dep-9c339ffc.js');
require('../../_chunks/dep-b1a67107.js');
require('../../_chunks/dep-ab43c961.js');
require('../../_chunks/dep-9cacaf01.js');
require('../../_chunks/dep-c72c7229.js');
require('../../_chunks/dep-8e0a771d.js');
require('../../_chunks/dep-c90cc28f.js');
require('../../_chunks/dep-542cc308.js');
require('../../_chunks/dep-c6637e11.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../config-provider/zh_CN_config.js');
require('../../tooltip/index.js');
require('../../tooltip/Tooltip.js');
require('../../_chunks/dep-23535a52.js');
require('../../popup/index.js');
require('../../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../../_util/useAnimation.js');
require('../../_util/composeRefs.js');
require('../../common/Portal.js');
require('react-dom');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-1d819290.js');
require('../../_util/easing.js');
require('../../popup/hooks/useTriggerProps.js');
require('../../_util/useClickOutside.js');
require('../../popup/utils/getTransitionParams.js');
require('../../_util/useMutationObserver.js');
require('../../_chunks/dep-85b3eaa4.js');
require('../../_chunks/dep-e19f22f6.js');
require('../../_chunks/dep-cb0f33ac.js');
require('../../_util/useWindowSize.js');
require('../../popup/defaultProps.js');
require('../../_chunks/dep-f3090217.js');
require('../../_chunks/dep-d4a0b3f0.js');
require('../../_chunks/dep-6dfb2577.js');
require('../../_chunks/dep-86abec96.js');
require('../../_util/noop.js');
require('../../tooltip/defaultProps.js');
require('../../locale/LocalReceiver.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function useSorter(props) {
  var _useState = React.useState(),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      originalData = _useState2[0],
      setOriginalData = _useState2[1];

  var _useControlled = hooks_useControlled["default"](props, "sort", props.onSortChange),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      tSortInfo = _useControlled2[0],
      setTSortInfo = _useControlled2[1];

  var _useControlled3 = hooks_useControlled["default"](props, "data", props.onDataChange),
      _useControlled4 = slicedToArray._slicedToArray(_useControlled3, 2),
      tData = _useControlled4[0],
      setTData = _useControlled4[1];

  var sorterFuncMap = getSorterFuncMap(props.columns);

  var sortArray = function () {
    var sort = tSortInfo;
    if (!sort) return [];
    return Array.isArray(sort) ? sort : [sort];
  }();

  var sortMap = function () {
    var sortMap2 = {};
    sortArray.forEach(function (info, index) {
      var sortBy = info.sortBy;
      sortMap2[sortBy] = _objectSpread({
        index: index
      }, info);
    });
    return sortMap2;
  }();

  function getSorterFuncMap(columns) {
    var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    for (var i = 0, len = columns.length; i < len; i++) {
      var _col$children;

      var col = columns[i];

      if (isFunction.isFunction_1(col.sorter)) {
        map[col.colKey] = col.sorter;
      }

      if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {
        getSorterFuncMap(col.children, map);
      }
    }

    return map;
  }

  function handleDataSort(sortInfo) {
    var sort = sortInfo;
    if (!sorterFuncMap || !Object.keys(sorterFuncMap).length) return;

    if (!originalData) {
      setOriginalData(tData);
    }

    var isEmptyArraySort = !sort || sort instanceof Array && !sort.length;
    var isEmptyObjectSort = !(sort instanceof Array) && !(sort !== null && sort !== void 0 && sort.sortBy);

    if (isEmptyArraySort || isEmptyObjectSort) {
      setTData(originalData, {
        trigger: "sort"
      });
      return originalData;
    }

    var formattedSort = sort instanceof Array ? sort : [sort];
    var newData = tData.slice().sort(function (a, b) {
      var sortResult = 0;

      for (var i = 0, len = formattedSort.length; i < len; i++) {
        var item = formattedSort[i];
        var sortFunc = sorterFuncMap[item.sortBy];

        if (sortResult === 0 && sortFunc) {
          sortResult = item.descending ? sortFunc(b, a) : sortFunc(a, b);
        } else {
          break;
        }
      }

      return sortResult;
    });
    if (JSON.stringify(newData) === JSON.stringify(tData)) return;
    setTData(newData, {
      trigger: "sort"
    });
    return newData;
  }

  function handleSortHeaderClick(col, p) {
    var _props$onChange;

    var sortInfo;

    if (props.multipleSort) {
      sortInfo = getMultipleNextSort(col, p);
    } else {
      var sort = tSortInfo instanceof Array ? tSortInfo[0] : tSortInfo;
      sortInfo = getSingleNextSort(col, sort, p);
    }

    var newData = handleDataSort(sortInfo);
    var currentData = newData || tData;
    var currentDataSource = currentData;
    setTSortInfo(sortInfo, {
      currentDataSource: currentDataSource,
      col: col
    });
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, {
      sorter: sortInfo
    }, {
      currentData: currentData,
      trigger: "sorter"
    });
  }

  function getSortOrder(descending) {
    if (descending === void 0) return;
    return descending ? "desc" : "asc";
  }

  function getSingleNextSort(col, sortInfo, p) {
    if (sortInfo && sortInfo.sortBy === col.colKey && sortInfo.descending === p.descending) {
      return void 0;
    }

    return {
      sortBy: col.colKey,
      descending: p.descending
    };
  }

  function getMultipleNextSort(col, p) {
    var sort = tSortInfo;
    if (!(sort instanceof Array)) return;
    var colKey = col.colKey;

    var result = toConsumableArray._toConsumableArray(sort);

    for (var i = 0, len = sort.length; i < len; i++) {
      if (sort[i].sortBy === colKey) {
        var next = getSingleNextSort(col, sort[i], p);
        next ? result[i] = next : result.splice(i, 1);
        return result;
      }
    }

    result.push({
      sortBy: colKey,
      descending: p.descending
    });
    return result;
  }

  function renderSortIcon(_ref) {
    var _sortMap$col$colKey;

    var col = _ref.col;
    if (!col.sorter) return null;
    var sorterButtonsProps = {
      sortType: col.sortType,
      sortOrder: getSortOrder((_sortMap$col$colKey = sortMap[col.colKey]) === null || _sortMap$col$colKey === void 0 ? void 0 : _sortMap$col$colKey.descending),
      sortIcon: props.sortIcon
    };
    return /* @__PURE__ */React__default["default"].createElement(table_SorterButton["default"], _objectSpread(_objectSpread({
      key: "sorter-button-".concat(col.colKey)
    }, sorterButtonsProps), {}, {
      onSortIconClick: function onSortIconClick(_, p) {
        return handleSortHeaderClick(col, p);
      }
    }));
  }

  return {
    renderSortIcon: renderSortIcon
  };
}

exports["default"] = useSorter;
//# sourceMappingURL=useSorter.js.map
