{"version":3,"file":"useRowSelect.js","sources":["../../../src/table/hooks/useRowSelect.tsx"],"sourcesContent":["// 行选中相关功能：单选 + 多选\n\nimport React, { useEffect, useState, MouseEvent } from 'react';\nimport intersection from 'lodash/intersection';\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\nimport useControlled from '../../hooks/useControlled';\nimport {\n  PrimaryTableCellParams,\n  PrimaryTableCol,\n  RowClassNameParams,\n  TableRowData,\n  TdBaseTableProps,\n  TdPrimaryTableProps,\n} from '../type';\nimport { filterDataByIds, isRowSelectedDisabled } from '../utils';\nimport useClassName from './useClassName';\nimport Checkbox from '../../checkbox';\nimport Radio from '../../radio';\nimport { ClassName } from '../../common';\nimport log from '../../_common/js/log';\n\nexport default function useRowSelect(props: TdPrimaryTableProps) {\n  const { selectedRowKeys, columns, data, rowKey } = props;\n  const { tableSelectedClasses } = useClassName();\n  const [selectedRowClassNames, setSelectedRowClassNames] = useState<TdBaseTableProps['rowClassName']>();\n  const [tSelectedRowKeys, setTSelectedRowKeys] = useControlled(props, 'selectedRowKeys', props.onSelectChange);\n  const selectColumn = props.columns.find(({ type }) => ['multiple', 'single'].includes(type));\n  const canSelectedRows = props.data.filter((row, rowIndex): boolean => !isDisabled(row, rowIndex));\n  // 选中的行，和所有可以选择的行，交集，用于计算 isSelectedAll 和 isIndeterminate\n  const intersectionKeys = intersection(\n    tSelectedRowKeys,\n    canSelectedRows.map((t) => get(t, rowKey || 'id')),\n  );\n\n  useEffect(\n    () => {\n      if (!selectColumn && (!tSelectedRowKeys || !tSelectedRowKeys.length)) return;\n      const disabledRowFunc = (p: RowClassNameParams<TableRowData>): ClassName =>\n        selectColumn.disabled(p) ? tableSelectedClasses.disabled : '';\n      const disabledRowClass = selectColumn?.disabled ? disabledRowFunc : undefined;\n      const selected = new Set(tSelectedRowKeys);\n      const selectedRowClassFunc = ({ row }: RowClassNameParams<TableRowData>) => {\n        const rowId = get(row, rowKey || 'id');\n        return selected.has(rowId) ? tableSelectedClasses.selected : '';\n      };\n      const selectedRowClass = selected.size ? selectedRowClassFunc : undefined;\n      setSelectedRowClassNames([disabledRowClass, selectedRowClass]);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data, columns, tSelectedRowKeys, selectColumn, rowKey],\n  );\n\n  function isDisabled(row: Record<string, any>, rowIndex: number): boolean {\n    return isRowSelectedDisabled(selectColumn, row, rowIndex);\n  }\n\n  function getSelectedHeader() {\n    const isIndeterminate = intersectionKeys.length > 0 && intersectionKeys.length < canSelectedRows.length;\n    return () => (\n      <Checkbox\n        checked={intersectionKeys.length === canSelectedRows.length}\n        indeterminate={isIndeterminate}\n        disabled={!canSelectedRows.length}\n        onChange={handleSelectAll}\n      />\n    );\n  }\n\n  function renderSelectCell(p: PrimaryTableCellParams<TableRowData>) {\n    const { col: column, row = {}, rowIndex } = p;\n    const checked = tSelectedRowKeys.includes(get(row, rowKey || 'id'));\n    const disabled: boolean =\n      typeof column.disabled === 'function' ? column.disabled({ row, rowIndex }) : column.disabled;\n    const checkProps = isFunction(column.checkProps) ? column.checkProps({ row, rowIndex }) : column.checkProps;\n    const selectBoxProps = {\n      checked,\n      disabled,\n      ...checkProps,\n      onChange: () => {\n        handleSelectChange(row);\n      },\n    };\n    // 选中行功能中，点击 checkbox/radio 需阻止事件冒泡，避免触发不必要的 onRowClick\n    const onCheckClick = (e: MouseEvent<HTMLLabelElement>) => {\n      e?.stopPropagation();\n    };\n    if (column.type === 'single') return <Radio {...selectBoxProps} onClick={onCheckClick} />;\n    if (column.type === 'multiple') return <Checkbox {...selectBoxProps} onClick={onCheckClick} />;\n    return null;\n  }\n\n  function handleSelectChange(row: TableRowData = {}) {\n    let selectedRowKeys = [...tSelectedRowKeys];\n    const reRowKey = rowKey || 'id';\n    const id = get(row, reRowKey);\n    const selectedRowIndex = selectedRowKeys.indexOf(id);\n    const isExisted = selectedRowIndex !== -1;\n    if (selectColumn.type === 'multiple') {\n      isExisted ? selectedRowKeys.splice(selectedRowIndex, 1) : selectedRowKeys.push(id);\n    } else if (selectColumn.type === 'single') {\n      selectedRowKeys = !isExisted ? [id] : [];\n    } else {\n      log.warn('Table', '`column.type` must be one of `multiple` and `single`');\n      return;\n    }\n    setTSelectedRowKeys(selectedRowKeys, {\n      selectedRowData: filterDataByIds(props.data, selectedRowKeys, reRowKey),\n      currentRowKey: id,\n      currentRowData: row,\n      type: isExisted ? 'uncheck' : 'check',\n    });\n  }\n\n  function handleSelectAll(checked: boolean) {\n    const reRowKey = rowKey || 'id';\n    const canSelectedRowKeys = canSelectedRows.map((record) => get(record, reRowKey));\n    const disabledSelectedRowKeys = selectedRowKeys?.filter((id) => !canSelectedRowKeys.includes(id)) || [];\n    const allIds = checked ? [...disabledSelectedRowKeys, ...canSelectedRowKeys] : [...disabledSelectedRowKeys];\n    setTSelectedRowKeys(allIds, {\n      selectedRowData: filterDataByIds(props.data, allIds, reRowKey),\n      type: checked ? 'check' : 'uncheck',\n      currentRowKey: 'CHECK_ALL_BOX',\n    });\n  }\n\n  function formatToRowSelectColumn(col: PrimaryTableCol) {\n    const isSelection = ['multiple', 'single'].includes(col.type);\n    if (!isSelection) return col;\n    return {\n      ...col,\n      width: col.width || 64,\n      cell: (p: PrimaryTableCellParams<TableRowData>) => renderSelectCell(p),\n      title: col.type === 'multiple' ? getSelectedHeader() : '',\n    };\n  }\n\n  return {\n    selectedRowClassNames,\n    formatToRowSelectColumn,\n  };\n}\n"],"names":["useRowSelect","props","selectedRowKeys","columns","data","rowKey","useClassName","tableSelectedClasses","useState","_slicedToArray","selectedRowClassNames","setSelectedRowClassNames","useControlled","onSelectChange","tSelectedRowKeys","setTSelectedRowKeys","selectColumn","find","type","includes","canSelectedRows","filter","row","rowIndex","isDisabled","intersectionKeys","intersection","map","t","get","useEffect","length","disabledRowFunc","p","disabled","disabledRowClass","selected","Set","selectedRowClassFunc","rowId","has","selectedRowClass","size","isRowSelectedDisabled","getSelectedHeader","isIndeterminate","React","createElement","Checkbox","checked","indeterminate","onChange","handleSelectAll","renderSelectCell","column","col","checkProps","isFunction","selectBoxProps","handleSelectChange","onCheckClick","e","stopPropagation","Radio","onClick","selectedRowKeys2","reRowKey","id","selectedRowIndex","indexOf","isExisted","splice","push","log","warn","selectedRowData","filterDataByIds","currentRowKey","currentRowData","canSelectedRowKeys","record","disabledSelectedRowKeys","allIds","_toConsumableArray","formatToRowSelectColumn","isSelection","width","cell","title"],"mappings":"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"}