{"version":3,"file":"EnhancedTable.js","sources":["../../src/table/EnhancedTable.tsx"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport PrimaryTable from './PrimaryTable';\nimport { PrimaryTableCol, TableRowData } from './type';\nimport useTreeData from './hooks/useTreeData';\nimport useTreeSelect from './hooks/useTreeSelect';\nimport { EnhancedTableProps, PrimaryTableProps } from './interface';\n\nimport { StyledProps } from '../common';\n\nexport interface TEnhancedTableProps extends EnhancedTableProps, StyledProps {}\n\nconst EnhancedTable = forwardRef((props: TEnhancedTableProps, ref) => {\n  const { tree, columns, style, className } = props;\n\n  // treeInstanceFunctions 属于对外暴露的 Ref 方法\n  const { store, dataSource, formatTreeColumn, ...treeInstanceFunctions } = useTreeData(props);\n\n  const [treeDataMap] = useState(store?.treeDataMap);\n\n  const { onInnerSelectChange } = useTreeSelect(props, treeDataMap);\n\n  // 影响列和单元格内容的因素有：树形节点需要添加操作符 [+] [-]\n  const getColumns = (columns: PrimaryTableCol<TableRowData>[]) => {\n    const arr: PrimaryTableCol<TableRowData>[] = [];\n    for (let i = 0, len = columns.length; i < len; i++) {\n      let item = { ...columns[i] };\n      item = formatTreeColumn(item);\n      if (item.children?.length) {\n        item.children = getColumns(item.children);\n      }\n      // 多级表头和自定义列配置特殊逻辑：要么子节点不存在，要么子节点长度大于 1，方便做自定义列配置\n      if (!item.children || item.children?.length) {\n        arr.push(item);\n      }\n    }\n    return arr;\n  };\n\n  const tColumns = (() => {\n    // 暂时只有树形结构需要处理 column.cell\n    const isTreeData = !tree || !Object.keys(tree).length;\n    return isTreeData ? columns : getColumns(columns);\n  })();\n\n  useImperativeHandle(ref, () => ({ ...treeInstanceFunctions }));\n\n  const primaryTableProps: PrimaryTableProps = {\n    ...props,\n    data: dataSource,\n    columns: tColumns,\n    // 树形结构不允许本地数据分页\n    disableDataPage: Boolean(tree && Object.keys(tree).length),\n    onSelectChange: onInnerSelectChange,\n    style,\n    className,\n  };\n  return <PrimaryTable {...primaryTableProps} />;\n});\n\nEnhancedTable.displayName = 'EnhancedTable';\n\nexport default EnhancedTable;\n"],"names":["EnhancedTable","forwardRef","props","ref","tree","columns","style","className","useTreeData","store","dataSource","formatTreeColumn","treeInstanceFunctions","_objectWithoutProperties","useState","treeDataMap","_slicedToArray","useTreeSelect","onInnerSelectChange","getColumns","columns2","arr","i","len","length","item","children","push","tColumns","isTreeData","Object","keys","useImperativeHandle","primaryTableProps","data","disableDataPage","Boolean","onSelectChange","React","createElement","PrimaryTable","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIMA,IAAAA,aAAa,gBAAGC,gBAAU,CAAC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC/C,EAAA,IAAQC,IAAR,GAA4CF,KAA5C,CAAQE,IAAR;AAAA,MAAcC,OAAd,GAA4CH,KAA5C,CAAcG,OAAd;AAAA,MAAuBC,KAAvB,GAA4CJ,KAA5C,CAAuBI,KAAvB;AAAA,MAA8BC,SAA9B,GAA4CL,KAA5C,CAA8BK,SAA9B,CAAA;;EACA,IAA0EC,YAAAA,GAAAA,kCAAW,CAACN,KAAD,CAArF;MAAQO,KAAR,gBAAQA,KAAR;MAAeC,UAAf,gBAAeA,UAAf;MAA2BC,gBAA3B,gBAA2BA,gBAA3B;AAAA,MAAgDC,qBAAhD,GAAAC,gDAAA,CAAA,YAAA,EAAA,SAAA,CAAA,CAAA;;EACA,IAAsBC,SAAAA,GAAAA,cAAQ,CAACL,KAAD,KAAA,IAAA,IAACA,KAAD,KAACA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAEM,WAAR,CAA9B;AAAA,MAAA,UAAA,GAAAC,4BAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAAOD,WAAP,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA;;AACA,EAAA,IAAA,cAAA,GAAgCE,oCAAa,CAACf,KAAD,EAAQa,WAAR,CAA7C;MAAQG,mBAAR,kBAAQA,mBAAR,CAAA;;AACA,EAAA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;IAC/B,IAAMC,GAAG,GAAG,EAAZ,CAAA;;AACA,IAAA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,QAAQ,CAACI,MAA/B,EAAuCF,CAAC,GAAGC,GAA3C,EAAgDD,CAAC,EAAjD,EAAqD;AAAA,MAAA,IAAA,cAAA,EAAA,eAAA,CAAA;;AACnD,MAAA,IAAIG,IAAI,GAAQL,aAAAA,CAAAA,EAAAA,EAAAA,QAAQ,CAACE,CAAD,CAAhB,CAAR,CAAA;;AACAG,MAAAA,IAAI,GAAGd,gBAAgB,CAACc,IAAD,CAAvB,CAAA;;AACA,MAAA,IAAA,CAAA,cAAA,GAAIA,IAAI,CAACC,QAAT,MAAI,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,IAAA,cAAA,CAAeF,MAAnB,EAA2B;QACzBC,IAAI,CAACC,QAAL,GAAgBP,UAAU,CAACM,IAAI,CAACC,QAAN,CAA1B,CAAA;AACD,OAAA;;MACD,IAAI,CAACD,IAAI,CAACC,QAAN,IAAA,CAAA,eAAA,GAAkBD,IAAI,CAACC,QAAvB,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,IAAkB,eAAeF,CAAAA,MAArC,EAA6C;QAC3CH,GAAG,CAACM,IAAJ,CAASF,IAAT,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAOJ,GAAP,CAAA;GAZF,CAAA;;EAcA,IAAMO,QAAQ,GAAI,YAAM;AACtB,IAAA,IAAMC,UAAU,GAAG,CAACzB,IAAD,IAAS,CAAC0B,MAAM,CAACC,IAAP,CAAY3B,IAAZ,CAAA,CAAkBoB,MAA/C,CAAA;AACA,IAAA,OAAOK,UAAU,GAAGxB,OAAH,GAAac,UAAU,CAACd,OAAD,CAAxC,CAAA;AACD,GAHgB,EAAjB,CAAA;;EAIA2B,yBAAmB,CAAC7B,GAAD,EAAM,YAAA;AAAA,IAAA,OAAA,aAAA,CAAA,EAAA,EAAYS,qBAAZ,CAAA,CAAA;AAAA,GAAN,CAAnB,CAAA;;EACA,IAAMqB,iBAAiB,mCAClB/B,KADkB,CAAA,EAAA,EAAA,EAAA;AAErBgC,IAAAA,IAAI,EAAExB,UAFe;AAGrBL,IAAAA,OAAO,EAAEuB,QAHY;AAIrBO,IAAAA,eAAe,EAAEC,OAAO,CAAChC,IAAI,IAAI0B,MAAM,CAACC,IAAP,CAAY3B,IAAZ,CAAkBoB,CAAAA,MAA3B,CAJH;AAKrBa,IAAAA,cAAc,EAAEnB,mBALK;AAMrBZ,IAAAA,KAAK,EAALA,KANqB;AAOrBC,IAAAA,SAAS,EAATA,SAAAA;GAPF,CAAA,CAAA;;EASA,sBAAuB+B,yBAAK,CAACC,aAAN,CAAoBC,6BAApB,EAAA,aAAA,CAAA,EAAA,EAClBP,iBADkB,CAAvB,CAAA,CAAA;AAGD,CApC+B,EAAhC;AAqCAjC,aAAa,CAACyC,WAAd,GAA4B,eAA5B;;;;"}