/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('../_chunks/dep-3405bda4.js');
var defineProperty = require('../_chunks/dep-a1655de1.js');
var React = require('react');
var isFunction = require('../_chunks/dep-e266830c.js');
var get = require('../_chunks/dep-3181fd9f.js');
var classNames = require('classnames');
var table_utils = require('./utils.js');
var table_hooks_useFixed = require('./hooks/useFixed.js');
var table_hooks_useClassName = require('./hooks/useClassName.js');
var table_Ellipsis = require('./Ellipsis.js');
var table_hooks_useLazyLoad = require('./hooks/useLazyLoad.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-8a3a8f07.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-cb0f33ac.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-86abec96.js');
require('../_chunks/dep-3cf9becb.js');
require('../_chunks/dep-19841e1d.js');
require('../_common/js/log/log.js');
require('../_common/js/utils/getScrollbarWidth.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-1d819290.js');
require('../_util/easing.js');
require('../_util/useConfig.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');
require('../_chunks/dep-85b3eaa4.js');
require('../_chunks/dep-e19f22f6.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../hooks/useControlled.js');
require('../_chunks/dep-f3090217.js');
require('../_chunks/dep-d4a0b3f0.js');
require('../_chunks/dep-6dfb2577.js');
require('../_util/noop.js');
require('../_util/useAnimation.js');
require('../_util/composeRefs.js');
require('../common/Portal.js');
require('react-dom');
require('../popup/hooks/useTriggerProps.js');
require('../_util/useClickOutside.js');
require('../popup/utils/getTransitionParams.js');
require('../_util/useMutationObserver.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../_common/js/utils/observe.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TABLE_PROPS = ["rowKey", "rowClassName", "columns", "fixedRows", "footData", "rowAttributes", "rowspanAndColspan", "scroll", "onCellClick", "onRowClick", "onRowDblclick", "onRowMouseover", "onRowMousedown", "onRowMouseenter", "onRowMouseleave", "onRowMouseup"];
var ROW_LISTENERS = ["click", "dblclick", "mouseover", "mousedown", "mouseenter", "mouseleave", "mouseup"];
function renderCell(params) {
  var col = params.col,
      row = params.row;

  if (isFunction.isFunction_1(col.cell)) {
    return col.cell(params);
  }

  if (isFunction.isFunction_1(col.render)) {
    return col.render(_objectSpread(_objectSpread({}, params), {}, {
      type: "cell"
    }));
  }

  return col.cell || col.render || get.get_1(row, col.colKey);
}
function TR(props) {
  var _props$columns;

  var row = props.row,
      rowKey = props.rowKey,
      rowIndex = props.rowIndex,
      rowClassName = props.rowClassName,
      rowAttributes = props.rowAttributes,
      dataLength = props.dataLength,
      fixedRows = props.fixedRows,
      scroll = props.scroll,
      tableContentElm = props.tableContentElm,
      rowAndColFixedPosition = props.rowAndColFixedPosition;
  var trRef = React.useRef();

  var _useClassName = table_hooks_useClassName["default"](),
      tdEllipsisClass = _useClassName.tdEllipsisClass,
      tableBaseClass = _useClassName.tableBaseClass,
      tableColFixedClasses = _useClassName.tableColFixedClasses,
      tableRowFixedClasses = _useClassName.tableRowFixedClasses,
      tdAlignClasses = _useClassName.tdAlignClasses,
      tableDraggableClasses = _useClassName.tableDraggableClasses;

  var trStyles = table_hooks_useFixed.getRowFixedStyles(get.get_1(row, rowKey || "id"), rowIndex, dataLength, fixedRows, rowAndColFixedPosition, tableRowFixedClasses);
  var trAttributes = React.useMemo(function () {
    return table_utils.formatRowAttributes(rowAttributes, {
      row: row,
      rowIndex: rowIndex,
      type: "body"
    }) || {};
  }, [row, rowAttributes, rowIndex]);
  var classes = React.useMemo(function () {
    var customClasses = table_utils.formatRowClassNames(rowClassName, {
      row: row,
      rowIndex: rowIndex,
      type: "body"
    }, rowKey || "id");
    return [trStyles === null || trStyles === void 0 ? void 0 : trStyles.classes, customClasses];
  }, [row, rowClassName, rowIndex, rowKey, trStyles === null || trStyles === void 0 ? void 0 : trStyles.classes]);
  var useLazyLoadParams = React.useMemo(function () {
    return _objectSpread(_objectSpread({}, scroll), {}, {
      rowIndex: rowIndex
    });
  }, [scroll, rowIndex]);

  var _useLazyLoad = table_hooks_useLazyLoad["default"](tableContentElm, trRef.current, useLazyLoadParams),
      hasLazyLoadHolder = _useLazyLoad.hasLazyLoadHolder,
      tRowHeight = _useLazyLoad.tRowHeight;

  function renderEllipsisCell(cellParams, params) {
    var cellNode = params.cellNode;
    var col = cellParams.col,
        colIndex = cellParams.colIndex;
    var placement = colIndex < 2 ? "top-left" : "top-right";
    var content = isFunction.isFunction_1(col.ellipsis) ? col.ellipsis(cellParams) : void 0;
    var tableElement = props.tableElm;
    return /* @__PURE__ */React__default["default"].createElement(table_Ellipsis["default"], {
      placement: placement,
      attach: tableElement ? function () {
        return tableElement;
      } : void 0,
      popupContent: content,
      popupProps: _typeof._typeof(col.ellipsis) === "object" ? col.ellipsis : void 0
    }, cellNode);
  }

  function renderTd(params, extra) {
    var _ref;

    var col = params.col,
        colIndex = params.colIndex,
        rowIndex2 = params.rowIndex;
    var cellSpans = extra.cellSpans,
        dataLength2 = extra.dataLength,
        rowAndColFixedPosition2 = extra.rowAndColFixedPosition;
    var cellNode = renderCell(params);
    var tdStyles = table_hooks_useFixed.getColumnFixedStyles(col, colIndex, rowAndColFixedPosition2, tableColFixedClasses);
    var customClasses = isFunction.isFunction_1(col.className) ? col.className(_objectSpread(_objectSpread({}, params), {}, {
      type: "td"
    })) : col.className;
    var classes2 = [tdStyles.classes, customClasses, (_ref = {}, defineProperty._defineProperty(_ref, tdEllipsisClass, col.ellipsis), defineProperty._defineProperty(_ref, tableBaseClass.tdLastRow, rowIndex2 + cellSpans.rowspan === dataLength2), defineProperty._defineProperty(_ref, tableBaseClass.tdFirstCol, colIndex === 0 && props.rowspanAndColspan), defineProperty._defineProperty(_ref, tdAlignClasses[col.align], col.align && col.align !== "left"), defineProperty._defineProperty(_ref, tableDraggableClasses.handle, col.colKey === "drag"), _ref)];

    var onClick = function onClick(e) {
      var _props$onCellClick;

      var p = _objectSpread(_objectSpread({}, params), {}, {
        e: e
      });

      (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, p);
    };

    var attrs = _objectSpread(_objectSpread({}, col.attrs), {}, {
      rowSpan: cellSpans.rowspan,
      colSpan: cellSpans.colspan
    });

    if (!col.colKey) return null;
    return /* @__PURE__ */React__default["default"].createElement("td", _objectSpread(_objectSpread({
      key: col.colKey,
      className: classNames__default["default"](classes2),
      style: tdStyles.style
    }, attrs), {}, {
      onClick: onClick
    }), col.ellipsis ? renderEllipsisCell(params, {
      cellNode: cellNode
    }) : cellNode);
  }

  var columnVNodeList = (_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : _props$columns.map(function (col, colIndex) {
    var _props$skipSpansMap;

    var cellSpans = {};
    var params = {
      row: row,
      col: col,
      rowIndex: rowIndex,
      colIndex: colIndex
    };

    if (isFunction.isFunction_1(props.rowspanAndColspan)) {
      var _props$onTrRowspanOrC;

      var o = props.rowspanAndColspan(params);
      (o === null || o === void 0 ? void 0 : o.rowspan) > 1 && (cellSpans.rowspan = o.rowspan);
      (o === null || o === void 0 ? void 0 : o.colspan) > 1 && (cellSpans.colspan = o.colspan);
      (_props$onTrRowspanOrC = props.onTrRowspanOrColspan) === null || _props$onTrRowspanOrC === void 0 ? void 0 : _props$onTrRowspanOrC.call(props, params, cellSpans);
    }

    var skipped = (_props$skipSpansMap = props.skipSpansMap) === null || _props$skipSpansMap === void 0 ? void 0 : _props$skipSpansMap.get([rowIndex, colIndex].join());
    if (skipped) return null;
    return renderTd(params, {
      dataLength: dataLength,
      rowAndColFixedPosition: rowAndColFixedPosition,
      columnLength: props.columns.length,
      cellSpans: cellSpans
    });
  });
  var rowParams = {
    row: row,
    index: rowIndex
  };
  return /* @__PURE__ */React__default["default"].createElement("tr", _objectSpread(_objectSpread({
    ref: trRef
  }, trAttributes), {}, {
    style: trStyles === null || trStyles === void 0 ? void 0 : trStyles.style,
    className: classNames__default["default"](classes),
    onClick: function onClick(e) {
      var _props$onRowClick;

      return (_props$onRowClick = props.onRowClick) === null || _props$onRowClick === void 0 ? void 0 : _props$onRowClick.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onDoubleClick: function onDoubleClick(e) {
      var _props$onRowDblclick;

      return (_props$onRowDblclick = props.onRowDblclick) === null || _props$onRowDblclick === void 0 ? void 0 : _props$onRowDblclick.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseDown: function onMouseDown(e) {
      var _props$onRowMousedown;

      return (_props$onRowMousedown = props.onRowMousedown) === null || _props$onRowMousedown === void 0 ? void 0 : _props$onRowMousedown.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseEnter: function onMouseEnter(e) {
      var _props$onRowMouseente;

      return (_props$onRowMouseente = props.onRowMouseenter) === null || _props$onRowMouseente === void 0 ? void 0 : _props$onRowMouseente.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseLeave: function onMouseLeave(e) {
      var _props$onRowMouseleav;

      return (_props$onRowMouseleav = props.onRowMouseleave) === null || _props$onRowMouseleav === void 0 ? void 0 : _props$onRowMouseleav.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseUp: function onMouseUp(e) {
      var _props$onRowMouseup;

      return (_props$onRowMouseup = props.onRowMouseup) === null || _props$onRowMouseup === void 0 ? void 0 : _props$onRowMouseup.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseOver: function onMouseOver(e) {
      var _props$onRowMouseover;

      return (_props$onRowMouseover = props.onRowMouseover) === null || _props$onRowMouseover === void 0 ? void 0 : _props$onRowMouseover.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    }
  }), hasLazyLoadHolder ? [/* @__PURE__ */React__default["default"].createElement("td", {
    key: rowIndex,
    style: {
      height: "".concat(tRowHeight, "px"),
      border: "none"
    }
  })] : columnVNodeList);
}
TR.displayName = "TR";

exports.ROW_LISTENERS = ROW_LISTENERS;
exports.TABLE_PROPS = TABLE_PROPS;
exports["default"] = TR;
exports.renderCell = renderCell;
//# sourceMappingURL=TR.js.map
