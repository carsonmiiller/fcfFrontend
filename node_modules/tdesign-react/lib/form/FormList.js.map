{"version":3,"file":"FormList.js","sources":["../../src/form/FormList.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\nimport { FormListContext, useFormContext } from './FormContext';\nimport { FormItemInstance } from './FormItem';\nimport { TdFormListProps, FormListFieldOperation, FormListField } from './type';\n\nlet key = 0;\n\nconst FormList = (props: TdFormListProps) => {\n  const { formMapRef } = useFormContext();\n  const { name, initialData = [], rules, children } = props;\n\n  const [initialValue, setInitialValue] = useState(initialData);\n  const [fields, setFields] = useState<Array<FormListField>>([]);\n  const formListMapRef = useRef(new Map()); // 收集 formItem 实例\n  const formListRef = useRef<FormItemInstance>(); // 当前 formList 实例\n\n  const operation: FormListFieldOperation = {\n    add(defaultValue?: any, insertIndex?: number) {\n      const cloneFields = [...fields];\n      const index = insertIndex ?? cloneFields.length;\n      cloneFields.splice(index, 0, {\n        key: (key += 1),\n        name: index,\n        isListField: true,\n      });\n      cloneFields.forEach((field, index) => Object.assign(field, { name: index }));\n      setFields(cloneFields);\n\n      if (typeof defaultValue !== 'undefined') {\n        const nextInitialValue = [...initialValue];\n        nextInitialValue[index] = defaultValue;\n        setInitialValue(nextInitialValue);\n      }\n    },\n    remove(index: number | number[]) {\n      const nextFields = fields\n        .filter((_, i) => {\n          if (Array.isArray(index)) return !index.includes(i);\n          return i !== index;\n        })\n        .map((field, index) => Object.assign(field, { name: index }));\n\n      setFields(nextFields);\n    },\n    move(from: number, to: number) {\n      const cloneFields = [...fields];\n      const fromItem = { ...cloneFields[from] };\n      const toItem = { ...cloneFields[to] };\n      cloneFields[to] = fromItem;\n      cloneFields[from] = toItem;\n      setFields(cloneFields);\n    },\n  };\n\n  // 外部设置 fields 优先级最高，可以更改渲染的节点\n  function setListFields(fieldData: any[], callback: Function) {\n    setFields(\n      fieldData.map((_, index) => ({\n        key: (key += 1),\n        name: index,\n        isListField: true,\n      })),\n    );\n    // 延迟至 microtask 队列末尾再赋值\n    Promise.resolve().then(() => {\n      [...formListMapRef.current.values()].forEach((formItemRef) => {\n        const { name } = formItemRef.current;\n        let data;\n        if (Array.isArray(name)) {\n          const [index, itemKey] = name;\n          data = fieldData?.[index]?.[itemKey];\n        } else {\n          data = fieldData?.[name];\n        }\n        callback(formItemRef, data);\n      });\n    });\n  }\n\n  useEffect(() => {\n    [...formListMapRef.current.values()].forEach((formItemRef) => {\n      const { name, value } = formItemRef.current;\n      if (value) return;\n\n      let data;\n      if (Array.isArray(name)) {\n        const [index, itemKey] = name;\n        data = initialValue?.[index]?.[itemKey];\n      } else {\n        data = initialValue?.[name];\n      }\n      formItemRef.current.setField({ value: data, status: 'not' });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, initialValue]);\n\n  useEffect(() => {\n    if (!name || !formMapRef) return;\n    formMapRef.current.set(name, formListRef);\n\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      formMapRef.current.delete(name);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [name]);\n\n  useImperativeHandle(\n    formListRef,\n    (): FormItemInstance => ({\n      name,\n      // 动态计算所有子 item 的值\n      get value() {\n        const formListValue = [];\n        [...formListMapRef.current.values()].forEach((formItemRef) => {\n          const { name, value } = formItemRef.current;\n          if (Array.isArray(name)) {\n            const [index, itemKey] = name;\n            if (!formListValue[index]) {\n              formListValue[index] = { [itemKey]: value };\n            } else {\n              formListValue[index][itemKey] = value;\n            }\n          } else {\n            formListValue[name] = value;\n          }\n        });\n        return formListValue;\n      },\n      validate: (trigger = 'all') => {\n        const resultList = [];\n        const validates = [...formListMapRef.current.values()].map((formItemRef) =>\n          formItemRef.current.validate(trigger),\n        );\n        return new Promise((resolve) => {\n          Promise.all(validates).then((validateResult) => {\n            validateResult.forEach((result) => {\n              const errorKey = Object.keys(result)[0];\n              const errorValue = Object.values(result)[0];\n              const [index, itemKey] = errorKey.split(',');\n              if (itemKey) {\n                resultList[index] = { [itemKey]: errorValue };\n              } else {\n                resultList[index] = errorValue;\n              }\n            });\n            const errorItems = validateResult.filter((item) => Object.values(item)[0] !== true);\n            if (errorItems.length) {\n              resolve({ [name]: resultList });\n            } else {\n              resolve({ [name]: true });\n            }\n          });\n        });\n      },\n      setValue: (fieldData: any[]) => {\n        setListFields(fieldData, (formItemRef, data) => {\n          formItemRef?.current?.setValue(data);\n        });\n      },\n      setField: (fieldData: { value?: any[]; status?: string }) => {\n        const { value, status } = fieldData;\n        setListFields(value, (formItemRef, data) => {\n          formItemRef?.current?.setField({ value: data, status });\n        });\n      },\n      resetField: () => {\n        [...formListMapRef.current.values()].forEach((formItemRef) => {\n          formItemRef.current.resetField();\n        });\n        setInitialValue([]);\n      },\n      setValidateMessage: (fieldData) => {\n        [...formListMapRef.current.values()].forEach((formItemRef) => {\n          const { name } = formItemRef.current;\n          let data;\n          if (Array.isArray(name)) {\n            const [index, itemKey] = name;\n            data = fieldData?.[index]?.[itemKey];\n          } else {\n            data = fieldData?.[name];\n          }\n\n          formItemRef.current.setValidateMessage(data);\n        });\n      },\n      resetValidate: () => {\n        [...formListMapRef.current.values()].forEach((formItemRef) => {\n          formItemRef.current.resetValidate();\n        });\n      },\n    }),\n  );\n\n  if (typeof children !== 'function') {\n    console.error(`FormList's children must be a function!`);\n    return null;\n  }\n\n  return (\n    <FormListContext.Provider value={{ name, rules, formListMapRef }}>\n      {children(fields, operation)}\n    </FormListContext.Provider>\n  );\n};\n\nFormList.displayName = 'FormList';\n\nexport default FormList;\n"],"names":["key","FormList","props","useFormContext","formMapRef","name","initialData","rules","children","useState","_slicedToArray","initialValue","setInitialValue","fields","setFields","formListMapRef","useRef","Map","formListRef","operation","add","defaultValue","insertIndex","cloneFields","index","length","splice","isListField","forEach","field","index2","Object","assign","nextInitialValue","remove","nextFields","filter","_","i","Array","isArray","includes","map","move","from","to","fromItem","toItem","setListFields","fieldData","callback","Promise","resolve","then","_toConsumableArray","current","values","formItemRef","name2","data","itemKey","useEffect","value","setField","status","set","useImperativeHandle","formListValue","validate","trigger","resultList","validates","all","validateResult","result","errorKey","keys","errorValue","split","errorItems","item","setValue","resetField","setValidateMessage","resetValidate","console","error","React","createElement","FormListContext","Provider","displayName"],"mappings":"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"}