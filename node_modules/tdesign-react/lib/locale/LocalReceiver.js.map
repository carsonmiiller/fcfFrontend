{"version":3,"file":"LocalReceiver.js","sources":["../../src/locale/LocalReceiver.ts"],"sourcesContent":["import React from 'react';\nimport { ConfigContext, Locale } from '../config-provider';\n\nexport interface Placement {\n  [propName: string]: string | number;\n}\n\nexport type TransformPattern = string | Function | Array<string>;\n\nexport function useLocaleReceiver<T extends keyof Locale>(componentName: T, defaultLocale?: Locale[T] | Function) {\n  const { globalConfig } = React.useContext(ConfigContext);\n\n  function transformLocale(pattern: TransformPattern, placement?: Placement): string | Array<string> {\n    const REGEXP = /\\{\\s*([\\w-]+)\\s*\\}/g;\n    if (typeof pattern === 'string') {\n      if (!placement || !REGEXP.test(pattern)) return pattern;\n      const translated = pattern.replace(REGEXP, (_, key) => {\n        if (placement) return String(placement[key]);\n        return '';\n      });\n      return translated;\n    }\n    if (Array.isArray(pattern)) {\n      return pattern.map((p, index) => {\n        const translated = p.replace(REGEXP, (_: string, key: string) => {\n          if (placement) return String(placement[index][key]);\n          return '';\n        });\n        return translated;\n      });\n    }\n    if (typeof pattern === 'function') {\n      return pattern(placement);\n    }\n    return '';\n  }\n\n  /** @TypeA => 确保此参数是属于 globalConfig[componentName] 下的子属性 */\n  const componentLocale = React.useMemo<Locale[T] | Function>(() => {\n    const locale = defaultLocale || {};\n    const connectLocaleByName = globalConfig[componentName];\n\n    const localeFromContext = componentName && globalConfig ? connectLocaleByName : {};\n\n    return {\n      ...(typeof locale === 'function' ? (locale as Function)() : locale),\n      ...(localeFromContext || {}),\n    };\n  }, [componentName, defaultLocale, globalConfig]);\n\n  return [componentLocale, transformLocale] as [Locale[T], Function];\n}\n"],"names":["useLocaleReceiver","componentName","defaultLocale","React","useContext","ConfigContext","globalConfig","transformLocale","pattern","placement","REGEXP","test","translated","replace","_","key","String","Array","isArray","map","p","index","componentLocale","useMemo","locale","connectLocaleByName","localeFromContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC9D,EAAA,IAAA,iBAAA,GAAyBC,yBAAK,CAACC,UAAN,CAAiBC,0CAAjB,CAAzB;MAAQC,YAAR,qBAAQA,YAAR,CAAA;;AACA,EAAA,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,SAAlC,EAA6C;IAC3C,IAAMC,MAAM,GAAG,qBAAf,CAAA;;AACA,IAAA,IAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,MAAA,IAAI,CAACC,SAAD,IAAc,CAACC,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAnB,EACE,OAAOA,OAAP,CAAA;AACF,MAAA,IAAMI,UAAU,GAAGJ,OAAO,CAACK,OAAR,CAAgBH,MAAhB,EAAwB,UAACI,CAAD,EAAIC,GAAJ,EAAY;QACrD,IAAIN,SAAJ,EACE,OAAOO,MAAM,CAACP,SAAS,CAACM,GAAD,CAAV,CAAb,CAAA;AACF,QAAA,OAAO,EAAP,CAAA;AACD,OAJkB,CAAnB,CAAA;AAKA,MAAA,OAAOH,UAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAIK,KAAK,CAACC,OAAN,CAAcV,OAAd,CAAJ,EAA4B;MAC1B,OAAOA,OAAO,CAACW,GAAR,CAAY,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC/B,QAAA,IAAMT,UAAU,GAAGQ,CAAC,CAACP,OAAF,CAAUH,MAAV,EAAkB,UAACI,CAAD,EAAIC,GAAJ,EAAY;AAC/C,UAAA,IAAIN,SAAJ,EACE,OAAOO,MAAM,CAACP,SAAS,CAACY,KAAD,CAAT,CAAiBN,GAAjB,CAAD,CAAb,CAAA;AACF,UAAA,OAAO,EAAP,CAAA;AACD,SAJkB,CAAnB,CAAA;AAKA,QAAA,OAAOH,UAAP,CAAA;AACD,OAPM,CAAP,CAAA;AAQD,KAAA;;AACD,IAAA,IAAI,OAAOJ,OAAP,KAAmB,UAAvB,EAAmC;MACjC,OAAOA,OAAO,CAACC,SAAD,CAAd,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAMa,eAAe,GAAGnB,yBAAK,CAACoB,OAAN,CAAc,YAAM;AAC1C,IAAA,IAAMC,MAAM,GAAGtB,aAAa,IAAI,EAAhC,CAAA;AACA,IAAA,IAAMuB,mBAAmB,GAAGnB,YAAY,CAACL,aAAD,CAAxC,CAAA;IACA,IAAMyB,iBAAiB,GAAGzB,aAAa,IAAIK,YAAjB,GAAgCmB,mBAAhC,GAAsD,EAAhF,CAAA;AACA,IAAA,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACK,OAAOD,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,EAArC,GAA0CA,MAD/C,CAAA,EAEKE,iBAAiB,IAAI,EAF1B,CAAA,CAAA;GAJsB,EAQrB,CAACzB,aAAD,EAAgBC,aAAhB,EAA+BI,YAA/B,CARqB,CAAxB,CAAA;AASA,EAAA,OAAO,CAACgB,eAAD,EAAkBf,eAAlB,CAAP,CAAA;AACD;;;;"}