/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-3cf9becb.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var button_index = require('../../button/index.js');
var loading_index = require('../../loading/index.js');
var _util_useConfig = require('../../_util/useConfig.js');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var upload_util = require('../util.js');
require('../../_chunks/dep-19841e1d.js');
require('../../button/Button.js');
require('../../_chunks/dep-a1655de1.js');
require('../../_chunks/dep-23535a52.js');
require('classnames');
require('../../_util/useRipple.js');
require('../../_util/useAnimation.js');
require('../../_chunks/dep-38a46f48.js');
require('../../_chunks/dep-8a149e9f.js');
require('../../_chunks/dep-3b69722d.js');
require('../../_chunks/dep-fde4d28a.js');
require('../../_chunks/dep-e266830c.js');
require('../../_chunks/dep-fcf32c81.js');
require('../../_chunks/dep-3405bda4.js');
require('../../_chunks/dep-15a4424e.js');
require('../../_chunks/dep-c40d75ac.js');
require('../../_chunks/dep-910dcfa3.js');
require('../../_chunks/dep-633a5671.js');
require('../../_chunks/dep-9c339ffc.js');
require('../../_chunks/dep-b1a67107.js');
require('../../_chunks/dep-ab43c961.js');
require('../../_chunks/dep-9cacaf01.js');
require('../../_chunks/dep-c72c7229.js');
require('../../_chunks/dep-8e0a771d.js');
require('../../_chunks/dep-c90cc28f.js');
require('../../_chunks/dep-542cc308.js');
require('../../_chunks/dep-c6637e11.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../config-provider/zh_CN_config.js');
require('../../_util/setStyle.js');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-1d819290.js');
require('../../_util/easing.js');
require('../../button/defaultProps.js');
require('../../loading/Loading.js');
require('../../common/Portal.js');
require('react-dom');
require('../../loading/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('../../loading/defaultProps.js');
require('../../loading/plugin.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var DraggerProgress = function DraggerProgress(props) {
  var file = props.file,
      onUpload = props.onUpload,
      onRemove = props.onRemove,
      display = props.display,
      onTrigger = props.onTrigger,
      onCancel = props.onCancel;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("upload"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var triggerUploadText = locale.triggerUploadText,
      infoText = locale.file,
      cancelUploadText = locale.cancelUploadText;

  var reUpload = function reUpload(e) {
    onRemove === null || onRemove === void 0 ? void 0 : onRemove({
      e: e,
      file: file,
      index: 0
    });
    onTrigger === null || onTrigger === void 0 ? void 0 : onTrigger();
  };

  var showResultOperate = React__default["default"].useMemo(function () {
    return ["success", "fail"].includes(file === null || file === void 0 ? void 0 : file.status);
  }, [file]);

  var handleRemove = function handleRemove(e) {
    onRemove === null || onRemove === void 0 ? void 0 : onRemove({
      e: e,
      file: file,
      index: 0
    });
  };

  var renderUploading = React.useCallback(function () {
    if ((file === null || file === void 0 ? void 0 : file.status) === "fail") {
      return /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.ErrorCircleFilledIcon, null);
    }

    if ((file === null || file === void 0 ? void 0 : file.status) === "progress") {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        className: "t-upload__single-progress"
      }, /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, {
        loading: true,
        size: "small"
      }), /* @__PURE__ */React__default["default"].createElement("span", {
        className: "t-upload__single-percent"
      }, Math.min((file === null || file === void 0 ? void 0 : file.percent) || 0, 99), "%"));
    }
  }, [file]);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-progress")
  }, display === "image" && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "t-upload__dragger-img-wrap"
  }, file && /* @__PURE__ */React__default["default"].createElement("img", {
    src: (file === null || file === void 0 ? void 0 : file.url) || "default.png",
    alt: ""
  })), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-progress-info")
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-text")
  }, /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(classPrefix, "-upload__single-name")
  }, upload_util.abridgeName(file === null || file === void 0 ? void 0 : file.name)), (file === null || file === void 0 ? void 0 : file.status) !== "success" && renderUploading(), (file === null || file === void 0 ? void 0 : file.status) === "success" && /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CheckCircleFilledIcon, null)), /* @__PURE__ */React__default["default"].createElement("small", {
    className: "".concat(classPrefix, "-size-s")
  }, t(infoText.fileSizeText), "\uFF1A", upload_util.returnFileSize(file === null || file === void 0 ? void 0 : file.size)), /* @__PURE__ */React__default["default"].createElement("small", {
    className: "".concat(classPrefix, "-size-s")
  }, t(infoText.fileOperationDateText), "\uFF1A", upload_util.getCurrentDate()), !["success", "fail"].includes(file === null || file === void 0 ? void 0 : file.status) && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-upload__dragger-btns")
  }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "primary",
    variant: "text",
    className: "".concat(classPrefix, "-upload__dragger-progress-cancel"),
    onClick: onCancel
  }, t(cancelUploadText)), /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "primary",
    variant: "text",
    onClick: onUpload
  }, t(triggerUploadText.normal))), showResultOperate && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "t-upload__dragger-btns"
  }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "primary",
    variant: "text",
    className: "t-upload__dragger-progress-cancel",
    onClick: reUpload
  }, t(triggerUploadText.reupload)), /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "primary",
    variant: "text",
    onClick: handleRemove
  }, t(triggerUploadText["delete"])))));
};

exports["default"] = DraggerProgress;
//# sourceMappingURL=dragger-progress.js.map
