/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-3cf9becb.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var loading_index = require('../../loading/index.js');
var dialog_index = require('../../dialog/index.js');
var _util_useConfig = require('../../_util/useConfig.js');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var upload_util = require('../util.js');
var upload_booleanRender = require('../boolean-render.js');
require('../../_chunks/dep-19841e1d.js');
require('../../loading/Loading.js');
require('../../_chunks/dep-a1655de1.js');
require('classnames');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-1d819290.js');
require('../../_chunks/dep-fcf32c81.js');
require('../../_chunks/dep-3405bda4.js');
require('../../_chunks/dep-c90cc28f.js');
require('../../_chunks/dep-b1a67107.js');
require('../../_util/easing.js');
require('../../common/Portal.js');
require('react-dom');
require('../../_chunks/dep-38a46f48.js');
require('../../_chunks/dep-8a149e9f.js');
require('../../_chunks/dep-3b69722d.js');
require('../../_chunks/dep-fde4d28a.js');
require('../../_chunks/dep-e266830c.js');
require('../../_chunks/dep-15a4424e.js');
require('../../_chunks/dep-c40d75ac.js');
require('../../_chunks/dep-910dcfa3.js');
require('../../_chunks/dep-633a5671.js');
require('../../_chunks/dep-9c339ffc.js');
require('../../_chunks/dep-ab43c961.js');
require('../../_chunks/dep-9cacaf01.js');
require('../../_chunks/dep-c72c7229.js');
require('../../_chunks/dep-8e0a771d.js');
require('../../_chunks/dep-542cc308.js');
require('../../_chunks/dep-c6637e11.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../config-provider/zh_CN_config.js');
require('../../loading/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('../../_chunks/dep-23535a52.js');
require('../../loading/defaultProps.js');
require('../../loading/plugin.js');
require('../../dialog/Dialog.js');
require('../../button/index.js');
require('../../button/Button.js');
require('../../_util/useRipple.js');
require('../../_util/useAnimation.js');
require('../../_util/setStyle.js');
require('../../button/defaultProps.js');
require('../../_util/noop.js');
require('../../dialog/RenderDialog.js');
require('react-transition-group');
require('../../_util/useLayoutEffect.js');
require('../../_util/useDialogEsc.js');
require('../../_chunks/dep-f6a4bdd5.js');
require('../../dialog/defaultProps.js');
require('../../_util/useSetState.js');
require('../../dialog/plugin.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var ImageCard = function ImageCard(props) {
  var files = props.files,
      _props$multiple = props.multiple,
      multiple = _props$multiple === void 0 ? false : _props$multiple,
      _props$max = props.max,
      max = _props$max === void 0 ? 0 : _props$max,
      onRemove = props.onRemove,
      showUploadProgress = props.showUploadProgress;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("upload"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      showImg = _useState2[0],
      setShowImg = _useState2[1];

  var _useState3 = React.useState(),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      imgURL = _useState4[0],
      setImgURL = _useState4[1];

  var preview = function preview(file) {
    setShowImg(true);
    setImgURL(file.url);
  };

  var showTrigger = React__default["default"].useMemo(function () {
    if (multiple) {
      return !max || files.length < max;
    }

    return !(files && files[0]);
  }, [files, max, multiple]);
  return /* @__PURE__ */React__default["default"].createElement(React.Fragment, null, /* @__PURE__ */React__default["default"].createElement(dialog_index.Dialog, {
    visible: showImg,
    showOverlay: true,
    width: "auto",
    top: "10%",
    className: "".concat(classPrefix, "-upload__dialog"),
    footer: false,
    header: false,
    onClose: function onClose() {
      setShowImg(false);
      setImgURL(null);
    }
  }, /* @__PURE__ */React__default["default"].createElement("p", {
    className: "".concat(classPrefix, "-dialog__dialog-body-img-box")
  }, /* @__PURE__ */React__default["default"].createElement("img", {
    src: imgURL,
    alt: ""
  }))), /* @__PURE__ */React__default["default"].createElement("ul", {
    className: "".concat(classPrefix, "-upload__card")
  }, /* @__PURE__ */React__default["default"].createElement(upload_booleanRender["default"], {
    boolExpression: !!files
  }, files.map(function (file, index) {
    return /* @__PURE__ */React__default["default"].createElement("li", {
      className: "".concat(classPrefix, "-upload__card-item ").concat(classPrefix, "-is--background"),
      key: index
    }, /* @__PURE__ */React__default["default"].createElement(upload_booleanRender["default"], {
      falseRender: function falseRender() {
        return /* @__PURE__ */React__default["default"].createElement("div", {
          className: "".concat(classPrefix, "-upload__card-content ").concat(classPrefix, "-upload__card-box")
        }, /* @__PURE__ */React__default["default"].createElement("img", {
          className: "".concat(classPrefix, "-upload__card-image"),
          src: file.url
        }), /* @__PURE__ */React__default["default"].createElement("div", {
          className: "".concat(classPrefix, "-upload__card-mask")
        }, /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(classPrefix, "-upload__card-mask-item"),
          onClick: function onClick(e) {
            return e.stopPropagation();
          }
        }, /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.BrowseIcon, {
          onClick: function onClick() {
            preview(file);
          }
        })), /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(classPrefix, "-upload__card-mask-item-divider")
        }), /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(classPrefix, "-upload__card-mask-item"),
          onClick: function onClick(e) {
            return e.stopPropagation();
          }
        }, /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.DeleteIcon, {
          onClick: function onClick(e) {
            onRemove === null || onRemove === void 0 ? void 0 : onRemove({
              e: e,
              file: file,
              index: index
            });
          }
        }))));
      },
      boolExpression: showUploadProgress && !upload_util.finishUpload(file.status)
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-upload__card-container ").concat(classPrefix, "-upload__card-box")
    }, /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, {
      loading: true,
      size: "medium"
    }), /* @__PURE__ */React__default["default"].createElement("p", null, t(locale.progress.uploadingText), " ", Math.min(files[index].percent, 99), "%"))));
  })), /* @__PURE__ */React__default["default"].createElement(upload_booleanRender["default"], {
    boolExpression: showTrigger
  }, /* @__PURE__ */React__default["default"].createElement("li", {
    className: "".concat(classPrefix, "-upload__card-item ").concat(classPrefix, "-is--background"),
    onClick: props.onTrigger
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-upload__card-container ").concat(classPrefix, "-upload__card-box")
  }, /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.AddIcon, null), /* @__PURE__ */React__default["default"].createElement("p", {
    className: "".concat(classPrefix, "-size-s")
  }, t(locale.triggerUploadText.image)))))));
};

exports["default"] = ImageCard;
//# sourceMappingURL=image-card.js.map
