/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var isEmpty = require('../_chunks/dep-6f1d8823.js');
var isFunction = require('../_chunks/dep-e266830c.js');
var isString = require('../_chunks/dep-1d819290.js');
var React = require('react');
require('../_chunks/dep-029baf10.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-633a5671.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var getDefaultValue = function getDefaultValue(value, defaultValue) {
  if (isEmpty.isEmpty_1(value)) {
    return Array.isArray(defaultValue) ? defaultValue : [defaultValue, defaultValue];
  }

  if (Array.isArray(value)) return value;
  return [defaultValue, defaultValue];
};
var getJSX = function getJSX(value) {
  if (isString.isString_1(value)) return value;
  if (isFunction.isFunction_1(value)) return value();
  if ( /*#__PURE__*/React__default["default"].isValidElement(value)) return value;
  return value;
};
var getLeafNodes = function getLeafNodes(nodes) {
  var resData = [];

  var map = function map(nodes2) {
    nodes2.forEach(function (child) {
      if (child.children && child.children.length > 0) {
        return map(child.children);
      }

      resData.push(child);
    });
  };

  map(nodes);
  return resData;
};
var filterCheckedTreeNodes = function filterCheckedTreeNodes(nodes, checkeds) {
  return nodes.filter(function (item) {
    return !checkeds.includes(item.value);
  }).map(function (item) {
    var newItem = _objectSpread({}, item);

    if (item.children && item.children.length > 0) {
      newItem.children = filterCheckedTreeNodes(item.children, checkeds);
    }

    return newItem;
  }).filter(function (item) {
    return item.children && item.children.length !== 0 || !item.children;
  });
};
var getTargetNodes = function getTargetNodes(sourceNodes, data) {
  var source = getLeafNodes(sourceNodes).map(function (item) {
    return item.value;
  });
  return filterCheckedTreeNodes(data, source);
};

exports.filterCheckedTreeNodes = filterCheckedTreeNodes;
exports.getDefaultValue = getDefaultValue;
exports.getJSX = getJSX;
exports.getLeafNodes = getLeafNodes;
exports.getTargetNodes = getTargetNodes;
//# sourceMappingURL=utils.js.map
