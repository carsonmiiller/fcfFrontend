{"version":3,"file":"Transfer.js","sources":["../../src/transfer/Transfer.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport difference from 'lodash/difference';\nimport classnames from 'classnames';\n\nimport { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-react';\nimport { TdTransferProps, DataOption, TransferValue, TransferListType } from './type';\nimport useConfig from '../_util/useConfig';\nimport Button from '../button';\nimport TransferList from './TransferList';\nimport { filterCheckedTreeNodes, getTargetNodes, getDefaultValue, getJSX, getLeafNodes } from './utils';\nimport { TNode, StyledProps } from '../common';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { transferDefaultProps } from './defaultProps';\n\nexport interface TransferProps extends TdTransferProps, StyledProps {\n  content?: Array<TNode>;\n}\n\ninterface StateInterface {\n  source: DataOption[];\n  target: DataOption[];\n}\n\ninterface CheckedInterface {\n  source: Array<TransferValue>;\n  target: Array<TransferValue>;\n}\n\nconst Transfer: React.FunctionComponent<TransferProps> = (props) => {\n  const {\n    data,\n    search,\n    checked,\n    defaultChecked,\n    onCheckedChange,\n    value,\n    defaultValue,\n    onChange,\n    empty,\n    disabled,\n    pagination,\n    title,\n    operation,\n    footer,\n    transferItem,\n    content,\n    tree,\n  } = props;\n  const [state, setState] = useState<StateInterface>(() => ({\n    source: data.filter((item) => !defaultValue.includes(item.value)),\n    target: data.filter((item) => defaultValue.includes(item.value)),\n  }));\n  const [checkeds, setCheckeds] = useState<CheckedInterface>(() => ({\n    source: state.source\n      .filter((item) => !item.disabled && defaultChecked.includes(item.value))\n      .map((item) => item.value),\n    target: state.target\n      .filter((item) => !item.disabled && defaultChecked.includes(item.value))\n      .map((item) => item.value),\n  }));\n  const [searchState, setSearchState] = useState<{ source: string; target: string }>({ source: '', target: '' });\n\n  const isTargetControlled = 'value' in props;\n  const isCheckedControlled = 'checked' in props;\n\n  const { classPrefix } = useConfig();\n  const transferClassName = `${classPrefix}-transfer`;\n\n  const [local, t] = useLocaleReceiver('transfer');\n\n  const [sourceData, targetData] = useMemo(() => {\n    const { source, target } = state;\n    const { source: searchSource, target: searchTarget } = searchState;\n    return [\n      source.filter((item) => !searchSource || item.label.indexOf(searchState.source) > -1),\n      target.filter((item) => !searchTarget || item.label.indexOf(searchState.target) > -1),\n    ];\n  }, [searchState, state]);\n\n  const [SourceEmptyCmp, TargetEmptyCmp] = getDefaultValue(empty, t(local.empty)).map((item) => getJSX(item));\n  const [sourceDisable, targetDisable] = getDefaultValue(disabled, false);\n  const [sourcePagonation, targetPagonation] = getDefaultValue(pagination);\n  const [sourceTitle, targetTitle] = getDefaultValue(title).map((item) => getJSX(item));\n  const [leftOperation, rightOperation] = getDefaultValue(operation, [\n    () => <ChevronRightIcon />,\n    () => <ChevronLeftIcon />,\n  ]).map((item) => getJSX(item));\n  const [sourceFooter, targetFooter] = getDefaultValue(footer).map((item) => getJSX(item));\n  const [sourceTransferItem, targetTransferItem] = getDefaultValue(transferItem);\n  const [sourceContent, targetContent] = getDefaultValue(content);\n\n  const transformSource = () => {\n    const { source, target } = state;\n    const sourceCheckeds = source.filter((item) => checkeds.source.includes(item.value));\n    let newSource = difference(source, sourceCheckeds);\n    let newTarget = [...target, ...sourceCheckeds];\n    let newTargetValue = newTarget.map((t) => t.value);\n\n    // 树结构处理source/target节点数据\n    if (tree) {\n      newSource = filterCheckedTreeNodes(source, checkeds.source);\n      newTarget = getTargetNodes(newSource, data);\n      newTargetValue = getLeafNodes(newTarget).map((t) => t.value);\n    }\n    if (isTargetControlled) {\n      onChange?.(newTargetValue, {\n        type: 'source',\n        movedValue: sourceCheckeds.map((s) => s.value),\n      });\n    } else {\n      setState({ ...state, source: newSource, target: [...newTarget] });\n      setCheckeds({ ...checkeds, source: [] });\n    }\n  };\n  const transformTarget = () => {\n    const { source, target } = state;\n    const targetCheckeds = target.filter((item) => checkeds.target.includes(item.value));\n    let newSource = [...source, ...targetCheckeds];\n    let newTarget = difference(target, targetCheckeds);\n    let newTargetValue = newTarget.map((t) => t.value);\n\n    // 树结构处理source/target节点数据\n    if (tree) {\n      newTarget = filterCheckedTreeNodes(target, checkeds.target);\n      newSource = getTargetNodes(newTarget, data);\n      newTargetValue = getLeafNodes(newTarget).map((t) => t.value);\n    }\n    if (isTargetControlled) {\n      onChange?.(newTargetValue, {\n        type: 'target',\n        movedValue: targetCheckeds.map((s) => s.value),\n      });\n    } else {\n      setState({ ...state, source: newSource, target: newTarget });\n      setCheckeds({ ...checkeds, target: [] });\n    }\n  };\n\n  const OperationsCmp = () => {\n    const isSourceDisabled = sourceDisable || !checkeds.source.length;\n    const isTargetDisabled = targetDisable || !checkeds.target.length;\n\n    return (\n      <div className={`${transferClassName}__operations`}>\n        <Button\n          key={isSourceDisabled ? 'right-outline' : 'right-base'}\n          variant={isSourceDisabled ? 'outline' : 'base'}\n          disabled={isSourceDisabled}\n          onClick={transformSource}\n        >\n          {leftOperation}\n        </Button>\n        <Button\n          key={isSourceDisabled ? 'left-outline' : 'left-base'}\n          variant={isTargetDisabled ? 'outline' : 'base'}\n          disabled={isTargetDisabled}\n          onClick={transformTarget}\n        >\n          {rightOperation}\n        </Button>\n      </div>\n    );\n  };\n\n  const handleCheckChange = (value: Array<TransferValue>, type: TransferListType) => {\n    const { source: sourceChecked, target: targetChecked } = checkeds;\n    const inverseMap = { source: 'target', target: 'source' };\n    isCheckedControlled\n      ? onCheckedChange?.({\n          type,\n          checked: value.concat(checkeds[inverseMap[type]]),\n          sourceChecked,\n          targetChecked,\n        })\n      : setCheckeds({ ...checkeds, [type]: value });\n  };\n\n  // value 受控\n  useEffect(() => {\n    if (isTargetControlled && Array.isArray(value)) {\n      let newTarget = data.filter((item) => value.includes(item.value));\n      let newSource = difference(data, newTarget);\n      // 树结构处理source/target节点数据\n      if (tree) {\n        newSource = filterCheckedTreeNodes(data, value);\n        newTarget = getTargetNodes(newSource, data);\n      }\n      setState({ source: [...newSource], target: [...newTarget] });\n      setCheckeds({ source: [], target: [] });\n    }\n  }, [value, data, isTargetControlled, tree]);\n\n  // checked 受控\n  useEffect(() => {\n    const { source, target } = state;\n    if (isCheckedControlled && Array.isArray(checked)) {\n      const newSourceChecked = source\n        .filter((item) => !item.disabled && checked.includes(item.value))\n        .map((item) => item.value);\n      const newTargetChecked = target\n        .filter((item) => !item.disabled && checked.includes(item.value))\n        .map((item) => item.value);\n      setCheckeds({ source: newSourceChecked, target: newTargetChecked });\n    }\n  }, [checked, state, isCheckedControlled]);\n\n  return (\n    <div\n      className={classnames(transferClassName, {\n        [`${transferClassName}__search`]: search,\n        [`${transferClassName}__pagination`]: pagination,\n        [`${transferClassName}__footer`]: footer,\n        [`${transferClassName}--with-tree`]: tree,\n      })}\n    >\n      <TransferList\n        className={`${transferClassName}__list-source`}\n        data={sourceData}\n        search={search}\n        checked={checkeds.source}\n        empty={SourceEmptyCmp}\n        disabled={sourceDisable}\n        pagination={sourcePagonation}\n        title={sourceTitle}\n        footer={sourceFooter}\n        transferItem={sourceTransferItem}\n        content={sourceContent}\n        onCheckbox={(value) => handleCheckChange(value, 'source')}\n        onSearch={(val: string) => setSearchState({ ...searchState, source: val })}\n        tree={tree}\n      ></TransferList>\n      {OperationsCmp()}\n      <TransferList\n        className={`${transferClassName}__list-target`}\n        data={targetData}\n        search={search}\n        checked={checkeds.target}\n        empty={TargetEmptyCmp}\n        disabled={targetDisable}\n        pagination={targetPagonation}\n        title={targetTitle}\n        footer={targetFooter}\n        transferItem={targetTransferItem}\n        content={targetContent}\n        onCheckbox={(value) => handleCheckChange(value, 'target')}\n        onSearch={(val: string) => setSearchState({ ...searchState, target: val })}\n        tree={tree}\n      ></TransferList>\n    </div>\n  );\n};\n\nTransfer.displayName = 'Transfer';\nTransfer.defaultProps = transferDefaultProps;\n\nexport default Transfer;\n"],"names":["Transfer","props","data","search","checked","defaultChecked","onCheckedChange","value","defaultValue","onChange","empty","disabled","pagination","title","operation","footer","transferItem","content","tree","useState","source","filter","item","includes","target","_slicedToArray","state","setState","map","checkeds","setCheckeds","searchState","setSearchState","isTargetControlled","isCheckedControlled","useConfig","classPrefix","transferClassName","useLocaleReceiver","local","t","useMemo","searchSource","searchTarget","label","indexOf","sourceData","targetData","getDefaultValue","getJSX","SourceEmptyCmp","TargetEmptyCmp","sourceDisable","targetDisable","sourcePagonation","targetPagonation","sourceTitle","targetTitle","React","createElement","ChevronRightIcon","ChevronLeftIcon","leftOperation","rightOperation","sourceFooter","targetFooter","sourceTransferItem","targetTransferItem","sourceContent","targetContent","transformSource","sourceCheckeds","newSource","difference","newTarget","_toConsumableArray","newTargetValue","t2","filterCheckedTreeNodes","getTargetNodes","getLeafNodes","type","movedValue","s","transformTarget","targetCheckeds","OperationsCmp","isSourceDisabled","length","isTargetDisabled","className","Button","key","variant","onClick","handleCheckChange","value2","sourceChecked","targetChecked","inverseMap","concat","useEffect","Array","isArray","newSourceChecked","newTargetChecked","classnames","_defineProperty","TransferList","onCheckbox","onSearch","val","displayName","defaultProps","transferDefaultProps"],"mappings":"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"}