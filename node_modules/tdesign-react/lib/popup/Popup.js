/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var slicedToArray = require('../_chunks/dep-3cf9becb.js');
var React = require('react');
var reactTransitionGroup = require('react-transition-group');
var classNames = require('classnames');
var reactPopper = require('react-popper');
var hooks_useControlled = require('../hooks/useControlled.js');
var _util_useAnimation = require('../_util/useAnimation.js');
var _util_useConfig = require('../_util/useConfig.js');
var _util_composeRefs = require('../_util/composeRefs.js');
var common_Portal = require('../common/Portal.js');
var popup_hooks_useTriggerProps = require('./hooks/useTriggerProps.js');
var popup_utils_getTransitionParams = require('./utils/getTransitionParams.js');
var _util_useMutationObserver = require('../_util/useMutationObserver.js');
var _util_useWindowSize = require('../_util/useWindowSize.js');
var popup_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-19841e1d.js');
require('../_chunks/dep-f3090217.js');
require('../_chunks/dep-d4a0b3f0.js');
require('../_chunks/dep-6dfb2577.js');
require('../_chunks/dep-86abec96.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-cb0f33ac.js');
require('../_chunks/dep-b1a67107.js');
require('../_util/noop.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-e266830c.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');
require('react-dom');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-1d819290.js');
require('../_util/easing.js');
require('../_util/useClickOutside.js');
require('../_chunks/dep-85b3eaa4.js');
require('../_chunks/dep-e19f22f6.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function getPopperPlacement(placement) {
  return placement.replace(/-(left|top)$/, "-start").replace(/-(right|bottom)$/, "-end");
}

var Popup = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var trigger = props.trigger,
      content = props.content,
      placement = props.placement,
      attach = props.attach,
      showArrow = props.showArrow,
      destroyOnClose = props.destroyOnClose,
      className = props.className,
      style = props.style,
      overlayClassName = props.overlayClassName,
      overlayStyle = props.overlayStyle,
      triggerElement = props.triggerElement,
      _props$children = props.children,
      children = _props$children === void 0 ? triggerElement : _props$children,
      disabled = props.disabled,
      zIndex = props.zIndex,
      onVisibleChange = props.onVisibleChange,
      _onScroll = props.onScroll,
      expandAnimation = props.expandAnimation,
      _props$popperModifier = props.popperModifiers,
      popperModifiers = _props$popperModifier === void 0 ? [] : _props$popperModifier,
      updateScrollTop = props.updateScrollTop;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useAnimation = _util_useAnimation["default"](),
      keepExpand = _useAnimation.keepExpand,
      keepFade = _useAnimation.keepFade;

  var _useControlled = hooks_useControlled["default"](props, "visible", onVisibleChange),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      visible = _useControlled2[0],
      setVisible = _useControlled2[1];

  var _useWindowSize = _util_useWindowSize["default"](),
      windowHeight = _useWindowSize.height,
      windowWidth = _useWindowSize.width;

  var _useState = React.useState(null),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      triggerRef = _useState2[0],
      setTriggerRef = _useState2[1];

  var _useState3 = React.useState(null),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      overlayRef = _useState4[0],
      setOverlayRef = _useState4[1];

  var contentRef = React.useRef(null);
  var referenceRef = React.useRef(null);
  var popupRef = React.useRef(null);
  var popperRef = React.useRef(null);
  var portalRef = React.useRef(null);
  var onPopperFirstUpdate = React.useCallback(function (state) {
    var referenceElmRect = referenceRef.current.getBoundingClientRect();
    var referenceElmTop = referenceElmRect.top,
        referenceElmLeft = referenceElmRect.left,
        bottom = referenceElmRect.bottom,
        right = referenceElmRect.right;
    var referenceElmBottom = window.innerHeight - bottom;
    var referenceElmRight = window.innerWidth - right;
    var _contentRef$current = contentRef.current,
        contentOffsetHeight = _contentRef$current.offsetHeight,
        contentOffsetWidth = _contentRef$current.offsetWidth;
    var newPlacement = state.options.placement;

    if (referenceElmBottom < contentOffsetHeight && referenceElmTop >= contentOffsetHeight) {
      newPlacement = state.options.placement.replace("bottom", "top");
    }

    if (referenceElmTop < contentOffsetHeight && referenceElmBottom >= contentOffsetHeight) {
      newPlacement = state.options.placement.replace("top", "bottom");
    }

    if (referenceElmLeft < contentOffsetWidth && referenceElmRight >= contentOffsetWidth) {
      newPlacement = state.options.placement.replace("left", "right");
    }

    if (referenceElmRight < contentOffsetWidth && referenceElmLeft >= contentOffsetWidth) {
      newPlacement = state.options.placement.replace("right", "left");
    }

    Object.assign(state.options, _objectSpread(_objectSpread({}, state.options), {}, {
      placement: newPlacement
    }));
    popperRef.current.update();
  }, []);
  var options = React.useMemo(function () {
    return {
      placement: getPopperPlacement(placement),
      onFirstUpdate: onPopperFirstUpdate,
      modifiers: popperModifiers
    };
  }, [onPopperFirstUpdate, placement, popperModifiers]);
  popperRef.current = reactPopper.usePopper(triggerRef, overlayRef, options);
  var _popperRef$current = popperRef.current,
      styles = _popperRef$current.styles,
      attributes = _popperRef$current.attributes;
  var defaultStyles = React.useMemo(function () {
    if (triggerRef && typeof overlayStyle === "function") return _objectSpread({}, overlayStyle(triggerRef, overlayRef));
    return _objectSpread({}, overlayStyle);
  }, [overlayStyle, triggerRef, overlayRef, visible]);
  var overlayVisibleStyle = defaultStyles;
  var triggerNodeTemp = React.useMemo(function () {
    var _React$Children$toArr = React__default["default"].Children.toArray(children),
        _React$Children$toArr2 = slicedToArray._slicedToArray(_React$Children$toArr, 1),
        triggerChildNode = _React$Children$toArr2[0];

    if (React__default["default"].Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(triggerChildNode)) {
      return triggerChildNode;
    }

    return /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(classPrefix, "-trigger")
    }, children);
  }, [children, classPrefix]);

  var _useTriggerProps = popup_hooks_useTriggerProps["default"]({
    current: overlayRef
  }, {
    current: triggerRef
  }, [trigger], visible, setVisible, disabled, triggerNodeTemp),
      _useTriggerProps2 = slicedToArray._slicedToArray(_useTriggerProps, 2),
      triggerProps = _useTriggerProps2[0],
      popupProps = _useTriggerProps2[1];

  var triggerNode = /*#__PURE__*/React.cloneElement(triggerNodeTemp, _objectSpread({
    ref: _util_composeRefs["default"](triggerNodeTemp.ref, setTriggerRef)
  }, triggerProps));

  var handleExited = function handleExited() {
    if (!destroyOnClose) {
      portalRef.current.style.display = "none";
    }
  };

  var handleEnter = function handleEnter() {
    if (!destroyOnClose) {
      portalRef.current.style.display = "block";
    }
  };

  _util_useMutationObserver["default"](triggerRef, function () {
    var _popperRef$current$up, _popperRef$current2;

    (_popperRef$current$up = (_popperRef$current2 = popperRef.current).update) === null || _popperRef$current$up === void 0 ? void 0 : _popperRef$current$up.call(_popperRef$current2);
  });
  React.useEffect(function () {
    var _popperRef$current$up2, _popperRef$current3;

    (_popperRef$current$up2 = (_popperRef$current3 = popperRef.current).update) === null || _popperRef$current$up2 === void 0 ? void 0 : _popperRef$current$up2.call(_popperRef$current3);
  }, [content, visible, windowHeight, windowWidth]);
  React.useEffect(function () {
    if (visible && overlayRef) {
      updateScrollTop === null || updateScrollTop === void 0 ? void 0 : updateScrollTop(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current);
    }
  }, [visible, overlayRef, updateScrollTop]);
  var portal = visible || overlayRef ? /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, {
    appear: true,
    "in": visible,
    timeout: 180,
    nodeRef: popupRef,
    unmountOnExit: destroyOnClose,
    onEnter: handleEnter,
    onExited: handleExited
  }, /* @__PURE__ */React__default["default"].createElement(common_Portal["default"], {
    triggerNode: triggerRef,
    attach: attach,
    ref: portalRef
  }, /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, _objectSpread({
    appear: true,
    timeout: 0,
    "in": visible,
    nodeRef: popupRef
  }, popup_utils_getTransitionParams["default"]({
    classPrefix: classPrefix,
    expandAnimation: expandAnimation && keepExpand,
    fadeAnimation: keepFade
  })), /* @__PURE__ */React__default["default"].createElement("div", _objectSpread(_objectSpread({
    ref: _util_composeRefs["default"](setOverlayRef, ref, popupRef),
    style: _objectSpread(_objectSpread({}, styles.popper), {}, {
      zIndex: zIndex
    }),
    className: "".concat(classPrefix, "-popup")
  }, attributes.popper), popupProps), /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-popup__content"), defineProperty._defineProperty({}, "".concat(classPrefix, "-popup__content--arrow"), showArrow), overlayClassName),
    style: overlayVisibleStyle,
    ref: contentRef,
    onScroll: function onScroll(e) {
      return _onScroll === null || _onScroll === void 0 ? void 0 : _onScroll({
        e: e
      });
    }
  }, showArrow ? /* @__PURE__ */React__default["default"].createElement("div", {
    style: styles.arrow,
    className: "".concat(classPrefix, "-popup__arrow")
  }) : null, content))))) : null;
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-popup__reference"), className),
    style: style,
    ref: referenceRef
  }, triggerNode, portal);
});
Popup.displayName = "Popup";
Popup.defaultProps = popup_defaultProps.popupDefaultProps;

exports["default"] = Popup;
//# sourceMappingURL=Popup.js.map
