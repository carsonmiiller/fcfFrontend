/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var slicedToArray = require('../_chunks/dep-3cf9becb.js');
var objectWithoutProperties = require('../_chunks/dep-23535a52.js');
var React = require('react');
var classNames = require('classnames');
var _util_useConfig = require('../_util/useConfig.js');
var _util_useCommonClassName = require('../_util/useCommonClassName.js');
var _util_useUpdateEffect = require('../_util/useUpdateEffect.js');
var inputNumber_StepHandler = require('./StepHandler.js');
var inputNumber_utils_numberUtils = require('./utils/numberUtils.js');
var input_index = require('../input/index.js');
var inputNumber_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-19841e1d.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-e266830c.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');
require('../_util/useLayoutEffect.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-1d819290.js');
require('../_util/easing.js');
require('tdesign-icons-react');
require('../button/index.js');
require('../button/Button.js');
require('../_util/useRipple.js');
require('../_util/useAnimation.js');
require('../_util/setStyle.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../button/defaultProps.js');
require('../input/Input.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../_util/helper.js');
require('../_chunks/dep-e3db5727.js');
require('../_chunks/dep-86abec96.js');
require('../_chunks/dep-cb0f33ac.js');
require('../_chunks/dep-f3090217.js');
require('../_chunks/dep-d4a0b3f0.js');
require('../_chunks/dep-6dfb2577.js');
require('../input/InputGroup.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../locale/LocalReceiver.js');
require('../input/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["align", "className", "style", "defaultValue", "value", "disabled", "size", "theme", "step", "max", "min", "decimalPlaces", "format", "onChange", "onBlur", "onFocus", "onEnter", "onKeydown", "onKeyup", "onKeypress"],
    _excluded2 = ["value"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _classNames;

  var align = props.align,
      className = props.className,
      style = props.style,
      defaultValue = props.defaultValue,
      value = props.value,
      disabled = props.disabled,
      size = props.size,
      theme = props.theme,
      step = props.step,
      max = props.max,
      min = props.min,
      decimalPlaces = props.decimalPlaces,
      format = props.format,
      onChange = props.onChange,
      onBlur = props.onBlur,
      onFocus = props.onFocus,
      onEnter = props.onEnter,
      onKeydown = props.onKeydown,
      onKeyup = props.onKeyup,
      onKeypress = props.onKeypress,
      restInputProps = objectWithoutProperties._objectWithoutProperties(props, _excluded);

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var commonClassNames = _util_useCommonClassName["default"]();
  var componentType = "input-number";
  var inputClassName = "".concat(classPrefix, "-").concat(componentType);

  var getRangeValue = function getRangeValue(value2) {
    if (value2 < min) return min;
    if (value2 > max) return max;
    return value2;
  };

  var _useState = React.useState(function () {
    var initialValue = "";

    if (!inputNumber_utils_numberUtils.isInvalidNumber(defaultValue)) {
      initialValue = getRangeValue(Number(defaultValue));
    }

    if (!inputNumber_utils_numberUtils.isInvalidNumber(value)) {
      initialValue = value;
    }

    if (format && initialValue !== "") {
      return format(getRangeValue(Number(initialValue))) || "";
    }

    return initialValue;
  }),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      internalInputValue = _useState2[0],
      setInternalInputValue = _useState2[1];

  var decimalValue = internalInputValue;

  if (typeof internalInputValue === "string") {
    decimalValue = Number(inputNumber_utils_numberUtils.strToNumber(internalInputValue)) || 0;
  }

  var setInputValue = function setInputValue(inputStr) {
    var _format;

    if (["", void 0].includes(inputStr)) {
      return setInternalInputValue("");
    }

    var formattedInputValue = (_format = format === null || format === void 0 ? void 0 : format(Number(inputStr))) !== null && _format !== void 0 ? _format : inputStr;
    setInternalInputValue(formattedInputValue);
  };

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      isError = _useState4[0],
      setError = _useState4[1];

  var disabledDecrease = disabled || isError || decimalValue - step < min && internalInputValue !== "";
  var disabledIncrease = disabled || isError || decimalValue + step > max && internalInputValue !== "";

  var isOutOfRange = function isOutOfRange(number) {
    return number > max || number < min;
  };

  var checkInput = function checkInput(inputStr) {
    if (inputStr === "") {
      setError(false);
      return true;
    }

    var hasError = inputNumber_utils_numberUtils.isInvalidNumber(inputStr) || isOutOfRange(Number(inputStr));
    setError(hasError);
    return !hasError;
  };

  var stepPrecision = React.useMemo(function () {
    return inputNumber_utils_numberUtils.getNumberPrecision(step);
  }, [step]);
  var getPrecision = React.useCallback(function (str) {
    var numberPrecision = inputNumber_utils_numberUtils.getNumberPrecision(str);
    return decimalPlaces !== null && decimalPlaces !== void 0 ? decimalPlaces : Math.max(numberPrecision, stepPrecision);
  }, [stepPrecision, decimalPlaces]);
  React.useEffect(function () {
    if (value !== void 0) {
      checkInput(value);
    }
  }, [value]);
  _util_useUpdateEffect["default"](function () {
    setInputValue((value !== null && value !== void 0 ? value : "").toString());
  }, [value]);

  var triggerValueUpdate = function triggerValueUpdate(action) {
    var value2 = action.value,
        context = objectWithoutProperties._objectWithoutProperties(action, _excluded2);

    if (!disabled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(value2, context);
    }
  };

  var onInternalInput = function onInternalInput(inputStr, _ref) {
    var e = _ref.e;

    if (inputStr === "") {
      setInputValue(inputStr);
      return triggerValueUpdate({
        type: "input",
        value: void 0,
        e: e
      });
    }

    if (inputStr.endsWith(".")) {
      setInternalInputValue(inputStr);
      return;
    }

    if (/^(([1-9]+[0-9]*\.0+)|(0\.0+))$/.test(inputStr)) {
      setInternalInputValue(inputStr);
      return;
    }

    var filteredInputStr = inputNumber_utils_numberUtils.strToNumber(inputStr);

    if (Number.isNaN(filteredInputStr)) {
      setInternalInputValue(inputStr);
      if (!checkInput(inputStr)) return;
    }

    setInputValue(filteredInputStr.toString());
    if (!checkInput(filteredInputStr)) return;
    triggerValueUpdate({
      type: "input",
      value: Number(filteredInputStr),
      e: e
    });
  };

  var onInternalStep = function onInternalStep(action) {
    if (props.readonly) return;
    var type = action.type,
        e = action.e;
    var currentValue = decimalValue || 0;
    var precision = getPrecision(currentValue);
    var updateValue;

    switch (type) {
      case "add":
        {
          var addedVal = currentValue + step;
          updateValue = Number(Math.max(addedVal, min).toFixed(precision));
          break;
        }

      case "reduce":
        {
          var reducedVal = currentValue - step;
          updateValue = Number(Math.max(reducedVal, min).toFixed(precision));
          break;
        }
    }

    setInputValue(String(updateValue));
    triggerValueUpdate({
      value: updateValue,
      type: type,
      e: e
    });
    e.preventDefault();
  };

  var handleBlur = function handleBlur(e) {
    var _updateValue;

    var updateValue;
    var internalFloatValue = parseFloat(internalInputValue);

    if (internalInputValue === "") {
      updateValue = void 0;
    } else if (!Number.isNaN(internalFloatValue)) {
      updateValue = getRangeValue(internalFloatValue);
    } else {
      var checkVal = internalInputValue.replace(/[^0-9]/gi, "");
      updateValue = checkVal;

      if (!checkVal) {
        updateValue = value;
      }
    }

    onBlur === null || onBlur === void 0 ? void 0 : onBlur(updateValue, {
      e: e
    });
    setInputValue(((_updateValue = updateValue) !== null && _updateValue !== void 0 ? _updateValue : "").toString());
    setError(false);

    if (updateValue !== value) {
      triggerValueUpdate({
        value: updateValue,
        e: e,
        type: ""
      });
    }
  };

  var handleFocus = function handleFocus(e) {
    return onFocus === null || onFocus === void 0 ? void 0 : onFocus(decimalValue, {
      e: e
    });
  };

  var handleKeydownEnter = function handleKeydownEnter(e) {
    e.key === "Enter" && (onEnter === null || onEnter === void 0 ? void 0 : onEnter(decimalValue, {
      e: e
    }));
  };

  var handleKeydown = function handleKeydown(e) {
    onKeydown === null || onKeydown === void 0 ? void 0 : onKeydown(decimalValue, {
      e: e
    });
    handleKeydownEnter(e);
  };

  var handleKeyup = function handleKeyup(e) {
    return onKeyup === null || onKeyup === void 0 ? void 0 : onKeyup(decimalValue, {
      e: e
    });
  };

  var handleKeypress = function handleKeypress(e) {
    return onKeypress === null || onKeypress === void 0 ? void 0 : onKeypress(decimalValue, {
      e: e
    });
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    ref: ref,
    className: classNames__default["default"](className, inputClassName, commonClassNames.SIZE[size], (_classNames = {}, defineProperty._defineProperty(_classNames, commonClassNames.STATUS.disabled, disabled), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-controls-right"), theme === "column"), defineProperty._defineProperty(_classNames, "".concat(inputClassName, "--").concat(theme), theme), defineProperty._defineProperty(_classNames, "".concat(inputClassName, "--auto-width"), props.autoWidth), _classNames)),
    style: style,
    onBlur: handleBlur,
    onFocus: handleFocus,
    onKeyDown: handleKeydown,
    onKeyUp: handleKeyup,
    onKeyPress: handleKeypress
  }, /* @__PURE__ */React__default["default"].createElement(inputNumber_StepHandler["default"], {
    theme: theme,
    prefixClassName: inputClassName,
    disabledDecrease: disabledDecrease,
    disabledIncrease: disabledIncrease,
    onStep: onInternalStep
  }, /* @__PURE__ */React__default["default"].createElement(input_index.Input, _objectSpread({
    disabled: disabled,
    value: internalInputValue,
    onChange: onInternalInput,
    status: isError ? "error" : void 0,
    align: align || (theme === "row" ? "center" : void 0)
  }, restInputProps))));
});
InputNumber.displayName = "InputNumber";
InputNumber.defaultProps = inputNumber_defaultProps.inputNumberDefaultProps;

exports["default"] = InputNumber;
//# sourceMappingURL=InputNumber.js.map
