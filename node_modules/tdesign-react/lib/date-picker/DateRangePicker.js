/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-a1655de1.js');
var toConsumableArray = require('../_chunks/dep-f6a4bdd5.js');
var slicedToArray = require('../_chunks/dep-3cf9becb.js');
var React = require('react');
var classNames = require('classnames');
var dayjs = require('dayjs');
var _util_useConfig = require('../_util/useConfig.js');
var rangeInput_index = require('../range-input/index.js');
var datePicker_panel_DateRangePickerPanel = require('./panel/DateRangePickerPanel.js');
var datePicker_hooks_useRange = require('./hooks/useRange.js');
var datePicker_hooks_useFormat = require('./hooks/useFormat.js');
var _common_js_datePicker_utilsNew = require('../_common/js/date-picker/utils-new.js');
var datePicker_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-19841e1d.js');
require('../_chunks/dep-38a46f48.js');
require('../_chunks/dep-8a149e9f.js');
require('../_chunks/dep-3b69722d.js');
require('../_chunks/dep-fde4d28a.js');
require('../_chunks/dep-e266830c.js');
require('../_chunks/dep-fcf32c81.js');
require('../_chunks/dep-3405bda4.js');
require('../_chunks/dep-15a4424e.js');
require('../_chunks/dep-c40d75ac.js');
require('../_chunks/dep-910dcfa3.js');
require('../_chunks/dep-633a5671.js');
require('../_chunks/dep-9c339ffc.js');
require('../_chunks/dep-b1a67107.js');
require('../_chunks/dep-ab43c961.js');
require('../_chunks/dep-9cacaf01.js');
require('../_chunks/dep-c72c7229.js');
require('../_chunks/dep-8e0a771d.js');
require('../_chunks/dep-c90cc28f.js');
require('../_chunks/dep-542cc308.js');
require('../_chunks/dep-c6637e11.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../config-provider/zh_CN_config.js');
require('../range-input/RangeInput.js');
require('../_chunks/dep-23535a52.js');
require('tdesign-icons-react');
require('../input/index.js');
require('../input/Input.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../_util/helper.js');
require('../_chunks/dep-e3db5727.js');
require('../_chunks/dep-86abec96.js');
require('../_chunks/dep-cb0f33ac.js');
require('../_chunks/dep-f3090217.js');
require('../_chunks/dep-d4a0b3f0.js');
require('../_chunks/dep-6dfb2577.js');
require('../input/InputGroup.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../locale/LocalReceiver.js');
require('../input/defaultProps.js');
require('../range-input/defaultProps.js');
require('../range-input/RangeInputPopup.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../_util/useAnimation.js');
require('../_util/composeRefs.js');
require('../common/Portal.js');
require('react-dom');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-1d819290.js');
require('../_util/easing.js');
require('../popup/hooks/useTriggerProps.js');
require('../_util/useClickOutside.js');
require('../popup/utils/getTransitionParams.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-85b3eaa4.js');
require('../_chunks/dep-e19f22f6.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../select-input/useOverlayStyle.js');
require('./panel/PanelContent.js');
require('./base/Header.js');
require('../select/index.js');
require('../select/base/Select.js');
require('../_chunks/dep-3181fd9f.js');
require('../_chunks/dep-8a3a8f07.js');
require('../tag/index.js');
require('../tag/Tag.js');
require('../tag/CheckTag.js');
require('../tag/defaultProps.js');
require('../select/util/helper.js');
require('../select/base/OptionGroup.js');
require('../select/defaultProps.js');
require('../select/base/Option.js');
require('../_chunks/dep-bc80a1a5.js');
require('../_util/useRipple.js');
require('../_util/setStyle.js');
require('../common/FakeArrow.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../select-input/index.js');
require('../select-input/SelectInput.js');
require('../select-input/useSingle.js');
require('../_chunks/dep-46e6aa42.js');
require('../_chunks/dep-c7b74e6e.js');
require('../_chunks/dep-c3bd0e8c.js');
require('../_chunks/dep-38856994.js');
require('../_chunks/dep-ec5420f8.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/TagInput.js');
require('../_util/useDragSorter.js');
require('../tag-input/useTagScroll.js');
require('../tag-input/useTagList.js');
require('lodash');
require('../tag-input/useHover.js');
require('../tag-input/defaultProps.js');
require('../select-input/defaultProps.js');
require('../select/base/PopupContent.js');
require('../common/Jumper.js');
require('../button/index.js');
require('../button/Button.js');
require('../button/defaultProps.js');
require('./base/Table.js');
require('./base/Cell.js');
require('../time-picker/panel/TimePickerPanel.js');
require('../_chunks/dep-486c2bda.js');
require('../_chunks/dep-837b19c6.js');
require('../_chunks/dep-d97f1281.js');
require('../time-picker/hooks/useTimePickerTextConfig.js');
require('../_common/js/time-picker/const.js');
require('../_common/js/time-picker/utils.js');
require('./panel/ExtraContent.js');
require('./base/Footer.js');
require('./panel/useTableData.js');
require('./hooks/useDisableDate.js');
require('../_chunks/dep-e9185c09.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DateRangePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix,
      globalDatePickerConfig = _useConfig.datePicker;

  var className = props.className,
      style = props.style,
      disabled = props.disabled,
      mode = props.mode,
      enableTimePicker = props.enableTimePicker,
      disableDate = props.disableDate,
      _props$firstDayOfWeek = props.firstDayOfWeek,
      firstDayOfWeek = _props$firstDayOfWeek === void 0 ? globalDatePickerConfig.firstDayOfWeek : _props$firstDayOfWeek,
      presets = props.presets,
      timePickerProps = props.timePickerProps,
      onPick = props.onPick;

  var _useRange = datePicker_hooks_useRange["default"](props),
      inputValue = _useRange.inputValue,
      popupVisible = _useRange.popupVisible,
      rangeInputProps = _useRange.rangeInputProps,
      popupProps = _useRange.popupProps,
      value = _useRange.value,
      year = _useRange.year,
      month = _useRange.month,
      timeValue = _useRange.timeValue,
      activeIndex = _useRange.activeIndex,
      isHoverCell = _useRange.isHoverCell,
      setActiveIndex = _useRange.setActiveIndex,
      onChange = _useRange.onChange,
      setIsHoverCell = _useRange.setIsHoverCell,
      setInputValue = _useRange.setInputValue,
      setPopupVisible = _useRange.setPopupVisible,
      setTimeValue = _useRange.setTimeValue,
      setYear = _useRange.setYear,
      setMonth = _useRange.setMonth,
      isFirstValueSelected = _useRange.isFirstValueSelected,
      setIsFirstValueSelected = _useRange.setIsFirstValueSelected,
      cacheValue = _useRange.cacheValue,
      setCacheValue = _useRange.setCacheValue;

  var _useFormat = datePicker_hooks_useFormat["default"]({
    mode: mode,
    value: value,
    enableTimePicker: enableTimePicker,
    format: props.format,
    valueType: props.valueType
  }),
      formatTime = _useFormat.formatTime,
      formatDate = _useFormat.formatDate,
      isValidDate = _useFormat.isValidDate,
      format = _useFormat.format,
      timeFormat = _useFormat.timeFormat;

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      isSelected = _useState2[0],
      setIsSelected = _useState2[1];

  React.useEffect(function () {
    if (popupVisible) {
      setIsSelected(false);
      setIsFirstValueSelected(false);
      setCacheValue(formatDate(value || []));
      setTimeValue(formatTime(value || [dayjs__default["default"]().format(timeFormat), dayjs__default["default"]().format(timeFormat)]));
    }
  }, [value, popupVisible]);

  function onCellMouseEnter(date) {
    setIsHoverCell(true);

    var nextValue = toConsumableArray._toConsumableArray(inputValue);

    nextValue[activeIndex] = formatDate(date);
    setInputValue(nextValue);
  }

  function onCellMouseLeave() {
    setIsHoverCell(false);
    setInputValue(cacheValue);
  }

  function onCellClick(date, _ref) {
    var e = _ref.e,
        partial = _ref.partial;
    onPick === null || onPick === void 0 ? void 0 : onPick(date, {
      e: e,
      partial: partial
    });
    setIsHoverCell(false);
    setIsSelected(true);

    var nextValue = toConsumableArray._toConsumableArray(inputValue);

    nextValue[activeIndex] = formatDate(date);
    setCacheValue(nextValue);
    setInputValue(nextValue);

    if (mode === "date") {
      var partialIndex = partial === "start" ? 0 : 1;
      var isAdditional = dayjs__default["default"](date).month() !== month[partialIndex];

      if (isAdditional) {
        if (activeIndex === 0) setMonth([dayjs__default["default"](date).month(), Math.min(dayjs__default["default"](date).month() + 1, 11)]);
        if (activeIndex === 1) setMonth([Math.max(dayjs__default["default"](date).month() - 1, 0), dayjs__default["default"](date).month()]);
      }
    }

    if (enableTimePicker) return;
    var notValidIndex = nextValue.findIndex(function (v) {
      return !v || !isValidDate(v);
    });

    if (notValidIndex === -1 && nextValue.length === 2 && !enableTimePicker && isFirstValueSelected) {
      onChange(formatDate(nextValue, "valueType"), {
        dayjsValue: nextValue.map(function (v) {
          return dayjs__default["default"](v);
        }),
        trigger: "pick"
      });
      setIsFirstValueSelected(false);
      setPopupVisible(false);
    } else if (notValidIndex !== -1) {
      setActiveIndex(notValidIndex);
    } else {
      setActiveIndex(activeIndex ? 0 : 1);
    }

    setIsFirstValueSelected(true);
  }

  function onJumperClick(flag, _ref2) {
    var partial = _ref2.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    var monthCountMap = {
      date: 1,
      month: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year[partialIndex], month[partialIndex]);
    var next = null;

    if (flag === -1) {
      next = _common_js_datePicker_utilsNew.subtractMonth(current, monthCount);
    } else if (flag === 0) {
      next = new Date();
    } else if (flag === 1) {
      next = _common_js_datePicker_utilsNew.addMonth(current, monthCount);
    }

    var nextYear = toConsumableArray._toConsumableArray(year);

    nextYear[partialIndex] = next.getFullYear();

    var nextMonth = toConsumableArray._toConsumableArray(month);

    nextMonth[partialIndex] = next.getMonth();

    if (partialIndex === 0) {
      nextYear[1] = Math.max(nextYear[0], nextYear[1]);

      if (nextYear[0] === nextYear[1]) {
        nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);
      }
    }

    if (partialIndex === 1) {
      nextYear[0] = Math.min(nextYear[0], nextYear[1]);

      if (nextYear[0] === nextYear[1]) {
        nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);
      }
    }

    setYear(nextYear);
    setMonth(nextMonth);
  }

  function onTimePickerChange(val) {
    var _extractTimeObj = _common_js_datePicker_utilsNew.extractTimeObj(val),
        hours = _extractTimeObj.hours,
        minutes = _extractTimeObj.minutes,
        seconds = _extractTimeObj.seconds,
        milliseconds = _extractTimeObj.milliseconds,
        meridiem = _extractTimeObj.meridiem;

    var nextInputValue = toConsumableArray._toConsumableArray(inputValue);

    var changedInputValue = inputValue[activeIndex];
    var currentDate = !dayjs__default["default"](changedInputValue, format).isValid() ? dayjs__default["default"]().year(year[activeIndex]).month(month[activeIndex]) : dayjs__default["default"](changedInputValue, format);
    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    nextInputValue[activeIndex] = nextDate;

    var nextTimeValue = toConsumableArray._toConsumableArray(timeValue);

    nextTimeValue[activeIndex] = val;
    setTimeValue(nextTimeValue);
    setIsSelected(true);
    setInputValue(formatDate(nextInputValue));
    setCacheValue(formatDate(nextInputValue));
  }

  function onConfirmClick() {
    var nextValue = toConsumableArray._toConsumableArray(inputValue);

    var notValidIndex = nextValue.findIndex(function (v) {
      return !v || !isValidDate(v);
    });

    if (notValidIndex === -1 && nextValue.length === 2 && isFirstValueSelected) {
      onChange(formatDate(nextValue, "valueType"), {
        dayjsValue: nextValue.map(function (v) {
          return dayjs__default["default"](v);
        }),
        trigger: "confirm"
      });
      setYear(nextValue.map(function (v) {
        return dayjs__default["default"](v, format).year();
      }));
      setMonth(nextValue.map(function (v) {
        return dayjs__default["default"](v, format).month();
      }));
      setPopupVisible(false);
    } else if (notValidIndex !== -1) {
      setActiveIndex(notValidIndex);
    } else {
      setActiveIndex(activeIndex ? 0 : 1);
    }

    setIsFirstValueSelected(true);
  }

  function onPresetClick(preset) {
    var presetValue = preset;

    if (typeof preset === "function") {
      presetValue = preset();
    }

    if (!Array.isArray(presetValue)) {
      console.error("preset: ".concat(preset, " \u9884\u8BBE\u503C\u5FC5\u987B\u662F\u6570\u7EC4!"));
    } else {
      onChange(formatDate(presetValue, "valueType"), {
        dayjsValue: presetValue.map(function (p) {
          return dayjs__default["default"](p);
        }),
        trigger: "preset"
      });
      setPopupVisible(false);
    }
  }

  function onYearChange(nextVal, _ref3) {
    var partial = _ref3.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    if (enableTimePicker) partialIndex = activeIndex;

    var nextYear = toConsumableArray._toConsumableArray(year);

    nextYear[partialIndex] = nextVal;
    if (partialIndex === 0) nextYear[1] = Math.max(nextYear[0], nextYear[1]);
    if (partialIndex === 1) nextYear[0] = Math.min(nextYear[0], nextYear[1]);
    setYear(nextYear);
  }

  function onMonthChange(nextVal, _ref4) {
    var partial = _ref4.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    if (enableTimePicker) partialIndex = activeIndex;

    var nextMonth = toConsumableArray._toConsumableArray(month);

    nextMonth[partialIndex] = nextVal;

    if (year[0] === year[1]) {
      if (partialIndex === 0) nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);
      if (partialIndex === 1) nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);
    }

    setMonth(nextMonth);
  }

  var panelProps = {
    hoverValue: isHoverCell ? inputValue : [],
    value: isSelected ? cacheValue : value,
    isFirstValueSelected: isFirstValueSelected,
    year: year,
    month: month,
    mode: mode,
    format: format,
    presets: presets,
    timeValue: timeValue,
    disableDate: disableDate,
    firstDayOfWeek: firstDayOfWeek,
    timePickerProps: timePickerProps,
    enableTimePicker: enableTimePicker,
    activeIndex: activeIndex,
    onCellClick: onCellClick,
    onCellMouseEnter: onCellMouseEnter,
    onCellMouseLeave: onCellMouseLeave,
    onJumperClick: onJumperClick,
    onConfirmClick: onConfirmClick,
    onPresetClick: onPresetClick,
    onYearChange: onYearChange,
    onMonthChange: onMonthChange,
    onTimePickerChange: onTimePickerChange
  };
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-date-range-picker"), className),
    style: style,
    ref: ref
  }, /* @__PURE__ */React__default["default"].createElement(rangeInput_index.RangeInputPopup, {
    disabled: disabled,
    inputValue: inputValue,
    popupProps: popupProps,
    rangeInputProps: rangeInputProps,
    popupVisible: popupVisible,
    panel: /* @__PURE__ */React__default["default"].createElement(datePicker_panel_DateRangePickerPanel["default"], _objectSpread({}, panelProps))
  }));
});
DateRangePicker.displayName = "DateRangePicker";
DateRangePicker.defaultProps = datePicker_defaultProps.dateRangePickerDefaultProps;

exports["default"] = DateRangePicker;
//# sourceMappingURL=DateRangePicker.js.map
