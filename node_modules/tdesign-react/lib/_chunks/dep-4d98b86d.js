/**
 * tdesign v0.34.4
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

var defineProperty = require('./dep-a1655de1.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var toConsumableArray = require('./dep-f6a4bdd5.js');
var slicedToArray = require('./dep-3cf9becb.js');
var ReactDOM = require('react-dom');
var _util_useConfig = require('../_util/useConfig.js');
var _util_noop = require('../_util/noop.js');
var notification_defaultProps = require('../notification/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var seed = 0;
var listMap = /* @__PURE__ */new Map();
var NotificationRemoveContext = /*#__PURE__*/React__default["default"].createContext(_util_noop["default"]);
var NotificationList = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var placement = props.placement,
      zIndex = props.zIndex;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useState = React.useState([]),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      list = _useState2[0],
      setList = _useState2[1];

  var remove = function remove(key) {
    setList(function (oldList) {
      var index = oldList.findIndex(function (item) {
        return item.key === key;
      });

      if (index !== -1) {
        var tempList = toConsumableArray._toConsumableArray(oldList);

        tempList.splice(index, 1);
        return toConsumableArray._toConsumableArray(tempList);
      }

      return oldList;
    });
  };

  var calOffset = function calOffset(offset) {
    if (!offset) return "16px";
    return isNaN(Number(offset)) ? offset : "".concat(offset, "px");
  };

  var push = function push(theme, options) {
    var key = String(seed += 1);
    var style = {
      margin: "16px"
    };

    if (Array.isArray(options.offset)) {
      var _ref = toConsumableArray._toConsumableArray(options.offset),
          horizontal = _ref[0],
          vertical = _ref[1];

      var horizontalOffset = calOffset(horizontal);
      var verticalOffset = calOffset(vertical);
      style = {
        marginTop: verticalOffset,
        marginBottom: verticalOffset,
        marginLeft: horizontalOffset,
        marginRight: horizontalOffset
      };
    }

    var ref2 = /*#__PURE__*/React__default["default"].createRef();
    setList(function (oldList) {
      return [].concat(toConsumableArray._toConsumableArray(oldList), [_objectSpread(_objectSpread({}, options), {}, {
        key: key,
        theme: theme,
        style: style,
        ref: ref2,
        id: key
      })]);
    });
    return Promise.resolve(ref2.current);
  };

  var removeAll = function removeAll() {
    setList([]);
  };

  React.useImperativeHandle(ref, function () {
    return {
      push: push,
      remove: remove,
      removeAll: removeAll
    };
  });
  return /* @__PURE__ */React__default["default"].createElement(NotificationRemoveContext.Provider, {
    value: remove
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-notification__show--").concat(placement),
    style: {
      zIndex: zIndex
    }
  }, list.map(function (props2) {
    var _props2$onDurationEnd = props2.onDurationEnd,
        _onDurationEnd = _props2$onDurationEnd === void 0 ? _util_noop["default"] : _props2$onDurationEnd,
        _props2$onCloseBtnCli = props2.onCloseBtnClick,
        _onCloseBtnClick = _props2$onCloseBtnCli === void 0 ? _util_noop["default"] : _props2$onCloseBtnCli;

    return /* @__PURE__ */React__default["default"].createElement(Notification, _objectSpread(_objectSpread({
      ref: props2.ref,
      key: props2.key
    }, props2), {}, {
      onDurationEnd: function onDurationEnd() {
        remove(props2.key);

        _onDurationEnd();
      },
      onCloseBtnClick: function onCloseBtnClick(e) {
        remove(props2.key);

        _onCloseBtnClick(e);
      }
    }));
  })));
});
var fetchListInstance = function fetchListInstance(placement, attach, zIndex) {
  return new Promise(function (resolve) {
    if (listMap.has(placement)) {
      resolve(listMap.get(placement));
    } else {
      var hasExec = false;
      ReactDOM__default["default"].render( /* @__PURE__ */React__default["default"].createElement(NotificationList, {
        attach: attach,
        placement: placement,
        zIndex: Number(zIndex),
        ref: function ref(instance) {
          if (!hasExec) {
            hasExec = true;
            listMap.set(placement, instance);
            resolve(instance);
          }
        }
      }), attach);
    }
  });
};

var Notification = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var title = props.title,
      content = props.content,
      theme = props.theme,
      icon = props.icon,
      closeBtn = props.closeBtn,
      footer = props.footer,
      duration = props.duration,
      _props$onCloseBtnClic = props.onCloseBtnClick,
      onCloseBtnClick = _props$onCloseBtnClic === void 0 ? _util_noop["default"] : _props$onCloseBtnClic,
      _props$onDurationEnd = props.onDurationEnd,
      onDurationEnd = _props$onDurationEnd === void 0 ? _util_noop["default"] : _props$onDurationEnd,
      style = props.style,
      id = props.id;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var remove = React.useContext(NotificationRemoveContext);
  React__default["default"].useImperativeHandle(ref, function () {
    return {
      close: function close() {
        return remove(id);
      }
    };
  });
  React__default["default"].useEffect(function () {
    var timer;

    if (duration > 0) {
      timer = setTimeout(function () {
        clearTimeout(timer);
        onDurationEnd();
      }, duration);
    }

    return function () {
      if (timer) clearTimeout(timer);
    };
  }, []);

  var renderIcon = function renderIcon() {
    var IconWrapper = function IconWrapper(_ref) {
      var children = _ref.children;
      return /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-notification__icon")
      }, children);
    };

    if ( /*#__PURE__*/React__default["default"].isValidElement(icon)) {
      return /* @__PURE__ */React__default["default"].createElement(IconWrapper, null, icon);
    }

    if (theme && theme === "success") {
      return /* @__PURE__ */React__default["default"].createElement(IconWrapper, null, /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CheckCircleFilledIcon, {
        className: "".concat(classPrefix, "-is-success")
      }));
    }

    if (theme && ["info", "warning", "error"].indexOf(theme) >= 0) {
      return /* @__PURE__ */React__default["default"].createElement(IconWrapper, null, /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.InfoCircleFilledIcon, {
        className: "".concat(classPrefix, "-is-").concat(theme)
      }));
    }

    return null;
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-notification"), defineProperty._defineProperty({}, "".concat(classPrefix, "-is-").concat(theme), theme)),
    style: style
  }, renderIcon(), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-notification__main")
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-notification__title__wrap")
  }, /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(classPrefix, "-notification__title")
  }, title), function () {
    if (typeof closeBtn === "boolean" && closeBtn) {
      return /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CloseIcon, {
        className: "".concat(classPrefix, "-icon-close"),
        onClick: function onClick(e) {
          onCloseBtnClick({
            e: e
          });
        }
      });
    }

    if ( /*#__PURE__*/React__default["default"].isValidElement(closeBtn)) {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        onClick: function onClick(e) {
          onCloseBtnClick({
            e: e
          });
        }
      }, closeBtn);
    }

    return null;
  }()), function () {
    if (typeof content === "string") {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-notification__content")
      }, content);
    }

    if ( /*#__PURE__*/React__default["default"].isValidElement(content)) return content;
    return null;
  }(), /*#__PURE__*/React__default["default"].isValidElement(footer) && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-notification__detail")
  }, footer), typeof footer === "function" && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-notification__detail")
  }, footer())));
});
Notification.displayName = "Notification";
Notification.defaultProps = notification_defaultProps.notificationDefaultProps;

exports.Notification = Notification;
exports.NotificationRemoveContext = NotificationRemoveContext;
exports.fetchListInstance = fetchListInstance;
exports.listMap = listMap;
//# sourceMappingURL=dep-4d98b86d.js.map
