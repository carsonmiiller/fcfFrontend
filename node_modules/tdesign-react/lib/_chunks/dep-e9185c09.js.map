{"version":3,"file":"dep-e9185c09.js","sources":["../../node_modules/@babel/runtime/helpers/esm/extends.js","../../node_modules/lodash/chunk.js"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","baseSlice","require$$0","isIterateeCall","require$$1","toInteger","require$$2","nativeCeil","Math","ceil","nativeMax","max","chunk","array","size","guard","undefined","index","resIndex","result","Array","chunk_1"],"mappings":";;;;;;;;;;;;AAAe,SAASA,QAAT,GAAoB;AACjCA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAC5C,IAAA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,MAAA,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB,CAAA;;AAEA,MAAA,KAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AACtB,QAAA,IAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AACrDL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;;AAED,IAAA,OAAOL,MAAP,CAAA;GAXF,CAAA;;AAcA,EAAA,OAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP,CAAA;AACD;;AChBD,IAAIQ,SAAS,GAAGC,qBAAhB;AAAA,IACIC,cAAc,GAAGC,+BADrB;AAAA,IAEIC,SAAS,GAAGC,uBAFhB,CAAA;AAIA;;AACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAtB;AAAA,IACIC,SAAS,GAAGF,IAAI,CAACG,GADrB,CAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AACjC,EAAA,IAAKA,KAAK,GAAGZ,cAAc,CAACU,KAAD,EAAQC,IAAR,EAAcC,KAAd,CAAjB,GAAwCD,IAAI,KAAKE,SAA3D,EAAuE;AACrEF,IAAAA,IAAI,GAAG,CAAP,CAAA;AACD,GAFD,MAEO;IACLA,IAAI,GAAGJ,SAAS,CAACL,SAAS,CAACS,IAAD,CAAV,EAAkB,CAAlB,CAAhB,CAAA;AACD,GAAA;;EACD,IAAIpB,MAAM,GAAGmB,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACnB,MAAvC,CAAA;;AACA,EAAA,IAAI,CAACA,MAAD,IAAWoB,IAAI,GAAG,CAAtB,EAAyB;AACvB,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;EACD,IAAIG,KAAK,GAAG,CAAZ;MACIC,QAAQ,GAAG,CADf;MAEIC,MAAM,GAAGC,KAAK,CAACb,UAAU,CAACb,MAAM,GAAGoB,IAAV,CAAX,CAFlB,CAAA;;EAIA,OAAOG,KAAK,GAAGvB,MAAf,EAAuB;AACrByB,IAAAA,MAAM,CAACD,QAAQ,EAAT,CAAN,GAAqBjB,SAAS,CAACY,KAAD,EAAQI,KAAR,EAAgBA,KAAK,IAAIH,IAAzB,CAA9B,CAAA;AACD,GAAA;;AACD,EAAA,OAAOK,MAAP,CAAA;AACD,CAAA;;AAEDE,IAAAA,OAAc,GAAGT;;;;;"}