{"version":3,"file":"dep-bc4205a0.js","sources":["../../src/checkbox/CheckboxGroup.tsx","../../src/checkbox/Checkbox.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport isNumber from 'lodash/isNumber';\nimport useConfig from '../_util/useConfig';\nimport { CheckContext, CheckContextValue } from '../common/Check';\nimport { CheckboxOption, CheckboxOptionObj, TdCheckboxGroupProps, TdCheckboxProps } from './type';\nimport { StyledProps } from '../common';\nimport useControlled from '../hooks/useControlled';\nimport Checkbox from './Checkbox';\nimport { checkboxGroupDefaultProps } from './defaultProps';\n\nexport interface CheckboxGroupProps extends TdCheckboxGroupProps, StyledProps {\n  children?: React.ReactNode;\n}\n\n// 将 checkBox 的 value 转换为 string|number\nconst getCheckboxValue = (v: CheckboxOption): string | number => {\n  switch (typeof v) {\n    case 'number':\n      return v as number;\n    case 'string':\n      return v as string;\n    case 'object': {\n      const vs = v as CheckboxOptionObj;\n      return vs.value;\n    }\n    default:\n      return undefined;\n  }\n};\n\n/**\n * 多选选项组，里面可以嵌套 <Checkbox />\n */\nconst CheckboxGroup = (props: CheckboxGroupProps) => {\n  const { classPrefix } = useConfig();\n  const { onChange, disabled, className, style, children, max, options = [] } = props;\n\n  // 去掉所有 checkAll 之后的 options\n  const intervalOptions =\n    Array.isArray(options) && options.length > 0\n      ? options\n      : React.Children.map(children, (child) => (child as ReactElement).props) || [];\n\n  const optionsWithoutCheckAll = intervalOptions.filter((t) => typeof t !== 'object' || !t.checkAll);\n  const optionsWithoutCheckAllValues = [];\n  optionsWithoutCheckAll.forEach((v) => {\n    const vs = getCheckboxValue(v);\n    optionsWithoutCheckAllValues.push(vs);\n  });\n\n  const [internalValue, setInternalValue] = useControlled(props, 'value', onChange);\n  const [localMax, setLocalMax] = useState(max);\n\n  const checkedSet = useMemo(() => {\n    if (!Array.isArray(internalValue)) return new Set([]);\n    return new Set([].concat(internalValue));\n  }, [internalValue]);\n\n  // 用于决定全选状态的属性\n  const indeterminate = useMemo(() => {\n    const list = Array.from(checkedSet);\n    return list.length !== 0 && list.length !== optionsWithoutCheckAll.length;\n  }, [checkedSet, optionsWithoutCheckAll]);\n\n  const checkAllChecked = useMemo(() => {\n    const list = Array.from(checkedSet);\n    return list.length === optionsWithoutCheckAll.length;\n  }, [checkedSet, optionsWithoutCheckAll]);\n\n  useEffect(() => {\n    if (!isNumber(max)) return;\n    if (max < checkedSet.size) {\n      console.warn('[TDesign] max should be less than the length of value, change is invalid');\n    } else {\n      setLocalMax(max);\n    }\n  }, [max, checkedSet]);\n\n  const context: CheckContextValue = {\n    inject: (checkProps) => {\n      // 如果已经受控，则不注入\n      if (typeof checkProps.checked !== 'undefined') {\n        return checkProps;\n      }\n\n      const { value: checkValue } = checkProps;\n\n      return {\n        ...checkProps,\n        checked: checkProps.checkAll ? checkAllChecked : checkedSet.has(checkValue),\n        indeterminate: checkProps.checkAll ? indeterminate : checkProps.indeterminate,\n        disabled: checkProps.disabled || disabled || (checkedSet.size >= localMax && !checkedSet.has(checkValue)),\n        onChange(checked, { e }) {\n          if (typeof checkProps.onChange === 'function') {\n            checkProps.onChange(checked, { e });\n          }\n\n          // 全选时的逻辑处理\n          if (checkProps.checkAll) {\n            checkedSet.clear();\n            if (checked) {\n              optionsWithoutCheckAllValues.forEach((v) => {\n                checkedSet.add(v);\n              });\n            }\n          } else if (checked) {\n            if (checkedSet.size >= localMax && isNumber(max)) return;\n            checkedSet.add(checkValue);\n          } else {\n            checkedSet.delete(checkValue);\n          }\n\n          setInternalValue(Array.from(checkedSet), {\n            e,\n            current: checkProps.checkAll ? undefined : (checkValue as TdCheckboxProps),\n            type: checked ? 'check' : 'uncheck',\n          });\n        },\n      };\n    },\n  };\n\n  // options 和 children 的抉择,在未明确说明时，暂时以 options 优先\n  const useOptions = Array.isArray(options) && options.length !== 0;\n\n  return (\n    <div className={classNames(`${classPrefix}-checkbox-group`, className)} style={style}>\n      <CheckContext.Provider value={context}>\n        {useOptions\n          ? options.map((v, index) => {\n              const type = typeof v;\n              switch (type) {\n                case 'string': {\n                  const vs = v as string;\n                  return (\n                    <Checkbox key={index} label={vs} value={vs}>\n                      {v}\n                    </Checkbox>\n                  );\n                }\n                case 'number': {\n                  const vs = v as number;\n                  return (\n                    <Checkbox key={index} label={vs} value={vs}>\n                      {v}\n                    </Checkbox>\n                  );\n                }\n                case 'object': {\n                  const vs = v as CheckboxOptionObj;\n                  // CheckAll 的 checkBox 不存在 value,故用 checkAll_index 来保证尽量不和用户的 value 冲突.\n                  return vs.checkAll ? (\n                    <Checkbox {...v} key={`checkAll_${index}`} indeterminate={indeterminate} />\n                  ) : (\n                    <Checkbox {...v} key={index} disabled={vs.disabled || disabled} />\n                  );\n                }\n                default:\n                  return null;\n              }\n            })\n          : children}\n      </CheckContext.Provider>\n    </div>\n  );\n};\n\nCheckboxGroup.displayName = 'CheckboxGroup';\nCheckboxGroup.defaultProps = checkboxGroupDefaultProps;\n\nexport default CheckboxGroup;\n","import React, { Ref } from 'react';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport Check, { CheckProps } from '../common/Check';\nimport CheckboxGroup from './CheckboxGroup';\nimport { checkboxDefaultProps } from './defaultProps';\n\nexport type CheckboxProps = Omit<CheckProps, 'type'>;\n\nconst Checkbox = forwardRefWithStatics(\n  (props: CheckboxProps, ref: Ref<HTMLLabelElement>) => <Check ref={ref} type=\"checkbox\" {...props} />,\n  { Group: CheckboxGroup },\n);\n\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = checkboxDefaultProps;\n\nexport default Checkbox;\n"],"names":["getCheckboxValue","v","_typeof","vs","value","CheckboxGroup","props","useConfig","classPrefix","onChange","disabled","className","style","children","max","options","intervalOptions","Array","isArray","length","React","Children","map","child","optionsWithoutCheckAll","filter","t","checkAll","optionsWithoutCheckAllValues","forEach","push","useControlled","_slicedToArray","internalValue","setInternalValue","useState","localMax","setLocalMax","checkedSet","useMemo","Set","concat","indeterminate","list","from","checkAllChecked","useEffect","isNumber","size","console","warn","context","inject","checkProps","checked","checkValue","_objectSpread","has","e","clear","add","current","type","useOptions","createElement","classNames","CheckContext","Provider","index","Checkbox","key","label","displayName","defaultProps","checkboxGroupDefaultProps","forwardRefWithStatics","ref","Check","Group","checkboxDefaultProps"],"mappings":"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"}