{"version":3,"file":"dep-9d835441.js","sources":["../../src/radio/RadioGroup.tsx","../../src/radio/Radio.tsx"],"sourcesContent":["import React, { ReactNode, useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../_util/useConfig';\nimport { TdRadioGroupProps } from './type';\nimport useControlled from '../hooks/useControlled';\nimport useCommonClassName from '../_util/useCommonClassName';\nimport { CheckContext, CheckContextValue } from '../common/Check';\nimport Radio from './Radio';\nimport useMutationObservable from '../_util/useMutationObserver';\nimport { radioGroupDefaultProps } from './defaultProps';\n\n/**\n * RadioGroup 组件所接收的属性\n */\nexport interface RadioGroupProps extends TdRadioGroupProps {\n  children?: ReactNode;\n}\n\n/**\n * 单选选项组，里面可以嵌套 <Radio />\n */\nconst RadioGroup = (props: RadioGroupProps) => {\n  const { classPrefix } = useConfig();\n  const { disabled, children, onChange, size, variant, options = [] } = props;\n\n  const [internalValue, setInternalValue] = useControlled(props, 'value', onChange);\n  const [barStyle, setBarStyle] = useState({});\n  const groupRef = useRef(null);\n\n  const checkedRadioCls = `.${classPrefix}-radio-button.${classPrefix}-is-checked`;\n  const { SIZE: sizeMap } = useCommonClassName();\n\n  const context: CheckContextValue = {\n    inject: (checkProps) => {\n      // 如果已经受控，则不注入\n      if (typeof checkProps.checked !== 'undefined') {\n        return checkProps;\n      }\n\n      const { value: checkValue } = checkProps;\n\n      return {\n        ...checkProps,\n        checked: internalValue === checkProps.value,\n        disabled: checkProps.disabled || disabled,\n        onChange(checked, { e }) {\n          if (typeof checkProps.onChange === 'function') {\n            checkProps.onChange(checked, { e });\n          }\n          setInternalValue(checkValue, { e });\n        },\n      };\n    },\n  };\n\n  const calcBarStyle = () => {\n    if (!variant.includes('filled')) return;\n    const checkedRadio = groupRef.current.querySelector(checkedRadioCls);\n    if (!checkedRadio) return setBarStyle({ width: 0 });\n\n    const { offsetWidth, offsetLeft } = checkedRadio;\n    setBarStyle({ width: `${offsetWidth}px`, left: `${offsetLeft}px` });\n  };\n\n  useEffect(() => {\n    calcBarStyle();\n  }, [groupRef.current, internalValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useMutationObservable(groupRef.current, calcBarStyle);\n\n  const renderBlock = () => {\n    if (!variant.includes('filled')) return null;\n    return <div style={barStyle} className={`${classPrefix}-radio-group__bg-block`}></div>;\n  };\n\n  const renderOptions = () =>\n    options.map((item) => {\n      if (typeof item === 'string' || typeof item === 'number') {\n        return (\n          <Radio value={item} key={item}>\n            {item}\n          </Radio>\n        );\n      }\n      return (\n        <Radio value={item.value} key={item.value} disabled={item.disabled}>\n          {item.label}\n        </Radio>\n      );\n    });\n\n  return (\n    <CheckContext.Provider value={context}>\n      <div\n        ref={groupRef}\n        className={classNames(`${classPrefix}-radio-group`, sizeMap[size], {\n          [`${classPrefix}-radio-group__outline`]: variant === 'outline',\n          [`${classPrefix}-radio-group--filled`]: variant.includes('filled'),\n          [`${classPrefix}-radio-group--primary-filled`]: variant === 'primary-filled',\n        })}\n      >\n        {children || renderOptions()}\n        {renderBlock()}\n      </div>\n    </CheckContext.Provider>\n  );\n};\n\nRadioGroup.displayName = 'RadioGroup';\nRadioGroup.defaultProps = radioGroupDefaultProps;\n\nexport default RadioGroup;\n","import React, { Ref, forwardRef } from 'react';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport Check, { CheckProps } from '../common/Check';\nimport RadioGroup from './RadioGroup';\nimport { radioDefaultProps } from './defaultProps';\n\nexport type RadioProps = Omit<CheckProps, 'type'>;\n\nconst Radio = forwardRefWithStatics(\n  (props: RadioProps, ref: Ref<HTMLLabelElement>) => <Check ref={ref} type=\"radio\" {...props} />,\n  {\n    Group: RadioGroup,\n    Button: forwardRef((props: RadioProps, ref: Ref<HTMLLabelElement>) => (\n      <Check ref={ref} type=\"radio-button\" {...props} />\n    )),\n  },\n);\n\nRadio.displayName = 'Radio';\nRadio.defaultProps = radioDefaultProps;\n\nexport default Radio;\n"],"names":["RadioGroup","props","useConfig","classPrefix","disabled","children","onChange","size","variant","options","useControlled","_slicedToArray","internalValue","setInternalValue","useState","barStyle","setBarStyle","groupRef","useRef","checkedRadioCls","useCommonClassName","sizeMap","SIZE","context","inject","checkProps","checked","checkValue","value","_objectSpread","e","calcBarStyle","includes","checkedRadio","current","querySelector","width","offsetWidth","offsetLeft","left","useEffect","useMutationObservable","renderBlock","React","createElement","style","className","renderOptions","map","item","Radio","key","label","CheckContext","Provider","ref","classNames","_defineProperty","displayName","defaultProps","radioGroupDefaultProps","forwardRefWithStatics","Check","type","Group","Button","forwardRef","radioDefaultProps"],"mappings":"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"}