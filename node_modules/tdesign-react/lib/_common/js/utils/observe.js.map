{"version":3,"file":"observe.js","sources":["../../../../src/_common/js/utils/observe.ts"],"sourcesContent":["export default function observe(\n  element: HTMLElement,\n  root: HTMLElement,\n  callback: Function,\n  marginBottom: number,\n): IntersectionObserver {\n  if (!window || !window.IntersectionObserver) {\n    callback();\n    return null;\n  }\n  let io: IntersectionObserver = null;\n  try {\n    io = new window.IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          callback();\n          io.unobserve(element);\n        }\n      },\n      {\n        rootMargin: `0px 0px ${marginBottom}px 0px`,\n        root,\n      },\n    );\n    io.observe(element);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    callback();\n  }\n  return io;\n}\n"],"names":["observe","element","root","callback","marginBottom","window","IntersectionObserver","io","entries","entry","isIntersecting","unobserve","rootMargin","e","console","error"],"mappings":";;;;;;;;;;AAAe,SAASA,OAAT,CAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0CC,YAA1C,EAAwD;AACrE,EAAA,IAAI,CAACC,MAAD,IAAW,CAACA,MAAM,CAACC,oBAAvB,EAA6C;IAC3CH,QAAQ,EAAA,CAAA;AACR,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;EACD,IAAII,EAAE,GAAG,IAAT,CAAA;;EACA,IAAI;IACFA,EAAE,GAAG,IAAIF,MAAM,CAACC,oBAAX,CAAgC,UAACE,OAAD,EAAa;AAChD,MAAA,IAAMC,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB,CAAA;;MACA,IAAIC,KAAK,CAACC,cAAV,EAA0B;QACxBP,QAAQ,EAAA,CAAA;QACRI,EAAE,CAACI,SAAH,CAAaV,OAAb,CAAA,CAAA;AACD,OAAA;AACF,KANI,EAMF;MACDW,UAAU,EAAA,UAAA,CAAA,MAAA,CAAaR,YAAb,EADT,QAAA,CAAA;AAEDF,MAAAA,IAAI,EAAJA,IAAAA;AAFC,KANE,CAAL,CAAA;IAUAK,EAAE,CAACP,OAAH,CAAWC,OAAX,CAAA,CAAA;GAXF,CAYE,OAAOY,CAAP,EAAU;IACVC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAAA,CAAA;IACAV,QAAQ,EAAA,CAAA;AACT,GAAA;;AACD,EAAA,OAAOI,EAAP,CAAA;AACD;;;;"}