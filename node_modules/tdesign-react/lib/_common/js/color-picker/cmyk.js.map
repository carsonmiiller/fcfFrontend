{"version":3,"file":"cmyk.js","sources":["../../../../src/_common/js/color-picker/cmyk.ts"],"sourcesContent":["/**\n * rgb 转 cmyk\n * @param red\n * @param green\n * @param blue\n * @returns\n */\nexport const rgb2cmyk = (red: number, green: number, blue: number) => {\n  let computedC = 0;\n  let computedM = 0;\n  let computedY = 0;\n  let computedK = 0;\n\n  const r = parseInt(`${red}`.replace(/\\s/g, ''), 10);\n  const g = parseInt(`${green}`.replace(/\\s/g, ''), 10);\n  const b = parseInt(`${blue}`.replace(/\\s/g, ''), 10);\n\n  if (r === 0 && g === 0 && b === 0) {\n    computedK = 1;\n    return [0, 0, 0, 1];\n  }\n\n  computedC = 1 - r / 255;\n  computedM = 1 - g / 255;\n  computedY = 1 - b / 255;\n\n  const minCMY = Math.min(computedC, Math.min(computedM, computedY));\n  computedC = (computedC - minCMY) / (1 - minCMY);\n  computedM = (computedM - minCMY) / (1 - minCMY);\n  computedY = (computedY - minCMY) / (1 - minCMY);\n  computedK = minCMY;\n\n  return [computedC, computedM, computedY, computedK];\n};\n\n/**\n * cmyk 转 rgb\n * @param cyan\n * @param magenta\n * @param yellow\n * @param black\n * @returns\n */\nexport const cmyk2rgb = (cyan: number, magenta: number, yellow: number, black: number) => {\n  let c = cyan / 100;\n  let m = magenta / 100;\n  let y = yellow / 100;\n  const k = black / 100;\n\n  c = c * (1 - k) + k;\n  m = m * (1 - k) + k;\n  y = y * (1 - k) + k;\n\n  let r = 1 - c;\n  let g = 1 - m;\n  let b = 1 - y;\n\n  r = Math.round(255 * r);\n  g = Math.round(255 * g);\n  b = Math.round(255 * b);\n  return {\n    r,\n    g,\n    b,\n  };\n};\n\nconst REG_CMYK_STRING = /cmyk\\((\\d+%?),(\\d+%?),(\\d+%?),(\\d+%?)\\)/;\n\nconst toNumber = (str: string) => Math.max(0, Math.min(255, parseInt(str, 10)));\n\n/**\n * 输入色转rgb\n * @param input\n * @returns\n */\nexport const cmykInputToColor = (input: string) => {\n  if (/cmyk/i.test(input)) {\n    const str = input.replace(/\\s/g, '');\n    const match = str.match(REG_CMYK_STRING);\n    const c = toNumber(match[1]);\n    const m = toNumber(match[2]);\n    const y = toNumber(match[3]);\n    const k = toNumber(match[4]);\n    const { r, g, b } = cmyk2rgb(c, m, y, k);\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n  return input;\n};\n"],"names":["rgb2cmyk","red","green","blue","computedC","computedM","computedY","computedK","r","parseInt","replace","g","b","minCMY","Math","min","cmyk2rgb","cyan","magenta","yellow","black","c","m","y","k","round","REG_CMYK_STRING","toNumber","str","max","cmykInputToColor","input","test","match"],"mappings":"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"}