{"version":3,"file":"color.js","sources":["../../../../src/_common/js/color-picker/color.ts"],"sourcesContent":["import tinyColor from 'tinycolor2';\nimport { cmykInputToColor, rgb2cmyk } from './cmyk';\nimport {\n  parseGradientString, GradientColors, GradientColorPoint, isGradientColor\n} from './gradient';\n\nexport interface ColorObject {\n  alpha: number;\n  css: string;\n  hex: string;\n  hex8: string;\n  hsl: string;\n  hsla: string;\n  hsv: string;\n  hsva: string;\n  rgb: string;\n  rgba: string;\n  saturation: number;\n  value: number;\n  isGradient: boolean;\n  linearGradient?: string;\n}\n\ninterface ColorStates {\n  s: number;\n  v: number;\n  h: number;\n  a: number;\n}\n\ninterface GradientStates {\n  colors: GradientColorPoint[];\n  degree: number;\n  selectedId: string;\n  css?: string;\n}\n\nconst mathRound = Math.round;\nconst hsv2rgba = (states: ColorStates): tinyColor.ColorFormats.RGBA => tinyColor(states).toRgb();\nconst hsv2hsva = (states: ColorStates): tinyColor.ColorFormats.HSVA => tinyColor(states).toHsv();\nconst hsv2hsla = (states: ColorStates): tinyColor.ColorFormats.HSLA => tinyColor(states).toHsl();\n\n/**\n * 将渐变对象转换成字符串\n * @param object\n * @returns\n */\nexport const gradientColors2string = (object: GradientColors): string => {\n  const { points, degree } = object;\n  const colorsStop = points\n    .sort((pA, pB) => pA.left - pB.left)\n    .map((p) => `${p.color} ${Math.round(p.left * 100) / 100}%`);\n\n  return `linear-gradient(${degree}deg,${colorsStop.join(',')})`;\n};\n\n/**\n * 去除颜色的透明度\n * @param color\n * @returns\n */\nexport const getColorWithoutAlpha = (color: string) => tinyColor(color).setAlpha(1).toHexString();\n\n// 生成一个随机ID\nexport const genId = () => (1 + Math.random() * 4294967295).toString(16);\n\n/**\n * 生成一个渐变颜色\n * @param left\n * @param color\n * @returns\n */\nexport const genGradientPoint = (left: number, color: string): GradientColorPoint => ({\n  id: genId(),\n  left,\n  color,\n});\n\nexport class Color {\n  states: ColorStates = {\n    s: 100,\n    v: 100,\n    h: 100,\n    a: 1,\n  };\n\n  originColor: string;\n\n  isGradient: boolean;\n\n  gradientStates: GradientStates = {\n    colors: [],\n    degree: 0,\n    selectedId: null,\n    css: '',\n  };\n\n  constructor(input: string) {\n    this.update(input);\n  }\n\n  update(input: string) {\n    if (input === this.originColor) {\n      return;\n    }\n    this.originColor = input;\n    this.isGradient = false;\n    const gradientColors = parseGradientString(input);\n    let colorInput = input;\n    if (gradientColors) {\n      this.isGradient = true;\n      const object = gradientColors as GradientColors;\n      const points = object.points.map((c) => genGradientPoint(c.left, c.color));\n      this.gradientStates = {\n        colors: points,\n        degree: object.degree,\n        selectedId: points[0]?.id || null,\n      };\n      this.gradientStates.css = this.linearGradient;\n      colorInput = this.gradientSelectedPoint?.color;\n    }\n\n    this.updateStates(colorInput);\n  }\n\n  get saturation() {\n    return this.states.s;\n  }\n\n  set saturation(value) {\n    this.states.s = Math.max(0, Math.min(100, value));\n    this.updateCurrentGradientColor();\n  }\n\n  get value() {\n    return this.states.v;\n  }\n\n  set value(value) {\n    this.states.v = Math.max(0, Math.min(100, value));\n    this.updateCurrentGradientColor();\n  }\n\n  get hue() {\n    return this.states.h;\n  }\n\n  set hue(value) {\n    this.states.h = Math.max(0, Math.min(360, value));\n    this.updateCurrentGradientColor();\n  }\n\n  get alpha() {\n    return this.states.a;\n  }\n\n  set alpha(value) {\n    this.states.a = Math.max(0, Math.min(1, Math.round(value * 100) / 100));\n    this.updateCurrentGradientColor();\n  }\n\n  get rgb() {\n    const { r, g, b } = hsv2rgba(this.states);\n    return `rgb(${mathRound(r)}, ${mathRound(g)}, ${mathRound(b)})`;\n  }\n\n  get rgba() {\n    const {\n      r, g, b, a\n    } = hsv2rgba(this.states);\n    return `rgba(${mathRound(r)}, ${mathRound(g)}, ${mathRound(b)}, ${a})`;\n  }\n\n  get hsv() {\n    const { h, s, v } = this.getHsva();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n\n  get hsva() {\n    const {\n      h, s, v, a\n    } = this.getHsva();\n    return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n  }\n\n  get hsl() {\n    const { h, s, l } = this.getHsla();\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  get hsla() {\n    const {\n      h, s, l, a\n    } = this.getHsla();\n    return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n  }\n\n  get hex() {\n    return tinyColor(this.states).toHexString();\n  }\n\n  get hex8() {\n    return tinyColor(this.states).toHex8String();\n  }\n\n  get cmyk() {\n    const {\n      c, m, y, k\n    } = this.getCmyk();\n    return `cmyk(${c}, ${m}, ${y}, ${k})`;\n  }\n\n  get css() {\n    if (this.isGradient) {\n      return this.linearGradient;\n    }\n    return this.rgba;\n  }\n\n  get linearGradient() {\n    const { gradientColors, gradientDegree } = this;\n    return gradientColors2string({\n      points: gradientColors,\n      degree: gradientDegree,\n    });\n  }\n\n  get gradientColors() {\n    return this.gradientStates.colors;\n  }\n\n  set gradientColors(colors: GradientColorPoint[]) {\n    this.gradientStates.colors = colors;\n    this.gradientStates.css = this.linearGradient;\n  }\n\n  get gradientSelectedId() {\n    return this.gradientStates.selectedId;\n  }\n\n  set gradientSelectedId(id: string) {\n    if (id === this.gradientSelectedId) {\n      return;\n    }\n    this.gradientStates.selectedId = id;\n    this.updateStates(this.gradientSelectedPoint?.color);\n  }\n\n  get gradientDegree() {\n    return this.gradientStates.degree;\n  }\n\n  set gradientDegree(degree: number) {\n    this.gradientStates.degree = Math.max(0, Math.min(360, degree));\n    this.gradientStates.css = this.linearGradient;\n  }\n\n  get gradientSelectedPoint() {\n    const { gradientColors, gradientSelectedId } = this;\n    return gradientColors.find((color) => color.id === gradientSelectedId);\n  }\n\n  getFormatsColorMap() {\n    return {\n      HEX: this.hex,\n      CMYK: this.cmyk,\n      RGB: this.rgb,\n      RGBA: this.rgba,\n      HSL: this.hsl,\n      HSLA: this.hsla,\n      HSV: this.hsv,\n      HSVA: this.hsva,\n      CSS: this.css,\n    };\n  }\n\n  updateCurrentGradientColor() {\n    const { isGradient, gradientColors, gradientSelectedId } = this;\n    const { length } = gradientColors;\n    const current = this.gradientSelectedPoint;\n    if (!isGradient || length === 0 || !current) {\n      return false;\n    }\n    const index = gradientColors.findIndex((color) => color.id === gradientSelectedId);\n    const newColor = {\n      ...current,\n      color: this.rgba,\n    };\n    gradientColors.splice(index, 1, newColor);\n    this.gradientColors = gradientColors;\n    return this;\n  }\n\n  updateStates(input: string) {\n    const color = tinyColor(cmykInputToColor(input));\n    const hsva = color.toHsv();\n    this.states = hsva;\n  }\n\n  getRgba() {\n    const {\n      r, g, b, a\n    } = hsv2rgba(this.states);\n    return {\n      r: mathRound(r),\n      g: mathRound(g),\n      b: mathRound(b),\n      a,\n    };\n  }\n\n  getCmyk() {\n    const { r, g, b } = this.getRgba();\n    const [c, m, y, k] = rgb2cmyk(r, g, b);\n    return {\n      c: mathRound(c * 100),\n      m: mathRound(m * 100),\n      y: mathRound(y * 100),\n      k: mathRound(k * 100),\n    };\n  }\n\n  getHsva(): tinyColor.ColorFormats.HSVA {\n    let {\n      h, s, v, a\n    } = hsv2hsva(this.states);\n    h = mathRound(h);\n    s = mathRound(s * 100);\n    v = mathRound(v * 100);\n    a *= 1;\n    return {\n      h,\n      s,\n      v,\n      a,\n    };\n  }\n\n  getHsla(): tinyColor.ColorFormats.HSLA {\n    let {\n      h, s, l, a\n    } = hsv2hsla(this.states);\n    h = mathRound(h);\n    s = mathRound(s * 100);\n    l = mathRound(l * 100);\n    a *= 1;\n    return {\n      h,\n      s,\n      l,\n      a,\n    };\n  }\n\n  /**\n   * 判断输入色是否与当前色相同\n   * @param color\n   * @returns\n   */\n  equals(color: string): boolean {\n    return tinyColor.equals(this.rgba, color);\n  }\n\n  /**\n   * 校验输入色是否是一个有效颜色\n   * @param color\n   * @returns\n   */\n  static isValid(color: string): boolean {\n    if (parseGradientString(color)) {\n      return true;\n    }\n    return tinyColor(color).isValid();\n  }\n\n  static hsva2color(h: number, s: number, v: number, a: number) {\n    return tinyColor({\n      h, s, v, a\n    }).toHsvString();\n  }\n\n  static hsla2color(h: number, s: number, l: number, a: number) {\n    return tinyColor({\n      h, s, l, a\n    }).toHslString();\n  }\n\n  static rgba2color(r: number, g: number, b: number, a: number) {\n    return tinyColor({\n      r, g, b, a\n    }).toHsvString();\n  }\n\n  static hex2color(hex: string, a: number) {\n    const color = tinyColor(hex);\n    color.setAlpha(a);\n    return color.toHexString();\n  }\n\n  /**\n   * 对象转颜色字符串\n   * @param object\n   * @param format\n   * @returns\n   */\n  static object2color(object: any, format: string) {\n    if (format === 'CMYK') {\n      const {\n        c, m, y, k\n      } = object;\n      return `cmyk(${c}, ${m}, ${y}, ${k})`;\n    }\n    const color = tinyColor(object, {\n      format,\n    });\n    return color.toRgbString();\n  }\n\n  /**\n   * 是否是渐变色\n   * @param input\n   * @returns\n   */\n  static isGradientColor = (input: string) => !!isGradientColor(input);\n\n  /**\n   * 比较两个颜色是否相同\n   * @param color1\n   * @param color2\n   * @returns\n   */\n  static compare = (color1: string, color2: string): boolean => {\n    const isGradientColor1 = Color.isGradientColor(color1);\n    const isGradientColor2 = Color.isGradientColor(color2);\n    if (isGradientColor1 && isGradientColor2) {\n      const gradientColor1 = gradientColors2string(parseGradientString(color1) as GradientColors);\n      const gradientColor2 = gradientColors2string(parseGradientString(color2) as GradientColors);\n      return gradientColor1 === gradientColor2;\n    }\n    if (!isGradientColor1 && !isGradientColor2) {\n      return tinyColor.equals(color1, color2);\n    }\n    return false;\n  };\n}\n\nconst COLOR_OBJECT_OUTPUT_KEYS = [\n  'alpha',\n  'css',\n  'hex',\n  'hex8',\n  'hsl',\n  'hsla',\n  'hsv',\n  'hsva',\n  'rgb',\n  'rgba',\n  'saturation',\n  'value',\n  'isGradient',\n];\n\n/**\n * 获取对外输出的color对象\n * @param color\n * @returns\n */\nexport const getColorObject = (color: Color): ColorObject => {\n  if (!color) {\n    return null;\n  }\n  const colorObject = Object.create(null);\n  // eslint-disable-next-line no-return-assign\n  COLOR_OBJECT_OUTPUT_KEYS.forEach((key) => (colorObject[key] = color[key]));\n  if (color.isGradient) {\n    colorObject.linearGradient = color.linearGradient;\n  }\n  return colorObject;\n};\n\nexport default Color;\n"],"names":["mathRound","Math","round","hsv2rgba","states","tinyColor","toRgb","hsv2hsva","toHsv","hsv2hsla","toHsl","gradientColors2string","object","points","degree","colorsStop","sort","pA","pB","left","map","p","color","join","getColorWithoutAlpha","setAlpha","toHexString","genId","random","toString","genGradientPoint","id","Color","input","_classCallCheck","_defineProperty","s","v","h","a","colors","selectedId","css","update","_createClass","originColor","isGradient","gradientColors","parseGradientString","colorInput","c","gradientStates","linearGradient","gradientSelectedPoint","updateStates","value","max","min","updateCurrentGradientColor","r","g","b","getHsva","getHsla","l","toHex8String","getCmyk","m","y","k","rgba","gradientDegree","gradientSelectedId","find","HEX","hex","CMYK","cmyk","RGB","rgb","RGBA","HSL","hsl","HSLA","hsla","HSV","hsv","HSVA","hsva","CSS","length","current","index","findIndex","newColor","splice","cmykInputToColor","getRgba","rgb2cmyk","_slicedToArray","equals","isValid","toHsvString","toHslString","format","toRgbString","isGradientColor","color1","color2","isGradientColor1","isGradientColor2","gradientColor1","gradientColor2","COLOR_OBJECT_OUTPUT_KEYS","getColorObject","colorObject","Object","create","forEach","key"],"mappings":"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"}