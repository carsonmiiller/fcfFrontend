{"version":3,"file":"utils.js","sources":["../../../../src/_common/js/upload/utils.ts"],"sourcesContent":["import { SizeUnit, TdUploadFile } from './types';\n\n/**\n * [*] 表示方法采用这种方式\n * [x] 表示方法不采用这种方式\n *\n * [x] bit      位              b     0 or 1\n * [*] byte     字节            B     8 bits\n * [x] kilobit  千位            kb    1000 bites\n * [*] kilobyte 千字节(二进制)   KB    1024 bytes\n * [x] kilobyte 千字节(十进制)   KB    1000 bytes\n * [x] Megabite 百万位          Mb    1000 kilobits\n * [*] Megabyte 兆字节(二进制)   KB    1024 kilobytes\n * [*] Megabyte 兆字节(十进制)   KB    1000 kilobytes\n * [x] Gigabit  万亿位          Gb    1000 Megabite\n * [*] Gigabyte 吉字节(二进制)   GB    1024 Megabytes\n * [x] Gigabyte 吉字节(十进制)   GB    1000 Megabytes\n */\nexport const SIZE_MAP = {\n  B: 1024,\n  KB: 1,\n  MB: 1048576, // 1024 * 1024\n  GB: 1073741824, // 1024 * 1024 * 1024\n};\n\nexport function returnFileSize(number: number) {\n  if (number < SIZE_MAP.B) {\n    return `${number} Bytes`;\n  }\n  if (number >= SIZE_MAP.B && number < SIZE_MAP.MB) {\n    return `${(number / SIZE_MAP.B).toFixed(1)} KB`;\n  }\n  if (number >= SIZE_MAP.MB) {\n    return `${(number / SIZE_MAP.MB).toFixed(1)} MB`;\n  }\n  return '';\n}\n\nexport function getCurrentDate() {\n  const d = new Date();\n  let month: string | number = d.getMonth() + 1;\n  month = month < 10 ? `0${month}` : month;\n  return `${d.getFullYear()}-${month}-${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n}\n\n/**\n * 缩略文件名 ABCDEFG => ABC...FG\n * @param inputName 文件名\n * @param leftCount 左边长度\n * @param rightCount 右边长度\n * @returns 缩略后的文件名\n */\nexport function abridgeName(\n  inputName: string,\n  leftCount = 5,\n  rightCount = 7\n): string {\n  const name = inputName;\n  let leftLength = 0;\n  let rightLength = 0;\n  for (let i = 0; i < name.length; i++) {\n    const w = name[i];\n    const isCn = escape(w).indexOf('%u') === 0;\n    if (i < leftCount * 2 && leftLength < leftCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (leftLength += 1) : (leftLength += 2);\n    } else if (i > i - rightCount && rightLength < rightCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (rightLength += 1) : (rightLength += 2);\n    }\n  }\n  return name.replace(\n    new RegExp(`^(.{${leftLength}})(.+)(.{${rightLength}})$`),\n    '$1…$3'\n  );\n}\n\n/**\n * 大小比较\n * @param size 文件大小\n * @param unit 计算机计量单位\n */\nexport function isOverSizeLimit(\n  fileSize: number,\n  sizeLimit: number,\n  unit: SizeUnit\n) {\n  // 以 KB 为单位进行比较\n  const units = ['B', 'KB', 'MB', 'GB'];\n  // 各个单位和 KB 的关系\n\n  const KBIndex = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `TDesign Upload Warn: \\`sizeLimit.unit\\` can only be one of ${units.join()}`\n    );\n    index = KBIndex;\n  }\n  const num = SIZE_MAP[unit];\n  const limit = index < KBIndex ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\n\nexport const urlCreator = () => window.webkitURL || window.URL;\n\n/**\n *\n * @param files 待处理文件\n * @param format 格式化规则\n */\nexport function formatFiles(\n  files: File[] = [],\n  format?: (file: File) => TdUploadFile\n) {\n  return files.map((fileRaw) => {\n    const file = typeof format === 'function' ? format(fileRaw) : fileRaw;\n    const uploadFile: TdUploadFile = {\n      raw: fileRaw,\n      lastModified: fileRaw.lastModified,\n      name: fileRaw.name,\n      size: fileRaw.size,\n      type: fileRaw.type,\n      percent: 0,\n      status: 'waiting',\n      ...file,\n    };\n    uploadFile.url = urlCreator()?.createObjectURL(fileRaw);\n    return uploadFile;\n  });\n}\n"],"names":["SIZE_MAP","B","KB","MB","GB","returnFileSize","number","toFixed","getCurrentDate","d","Date","month","getMonth","getFullYear","getDate","getHours","getMinutes","getSeconds","abridgeName","inputName","leftCount","rightCount","name","leftLength","rightLength","i","length","w","isCn","escape","indexOf","replace","RegExp","isOverSizeLimit","fileSize","sizeLimit","unit","units","KBIndex","index","console","warn","join","num","limit","urlCreator","window","webkitURL","URL","formatFiles","files","format","map","fileRaw","file","uploadFile","raw","lastModified","size","type","percent","status","url","createObjectURL"],"mappings":"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"}